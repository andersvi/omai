; OM File Header - Saved 2018/11/27 17:29:56
; (6.140003 :patc (om-make-point 172 110) (om-make-point 0 0) (om-make-point 1452 654) "" 183 0 "2018/11/24 15:43:21" "2018/11/27 17:29:42")
; End File Header
; External resources 
; (list (list (quote :midi) "#P\"../../../../../../Musikk/MIDIFILER/BACH/bach/gold/var7.mid\"" "#P\"../../../../../../Musikk/MIDIFILER/BACH/bach/partitas/cou1.mid\"" "#P\"../../../../../../Musikk/MIDIFILER/BACH/bach/gold/var6c2.mid\"" "#P\"../../../../../../Musikk/MIDIFILER/BACH/bach/gold/var2.mid\"" "#P\"../../../../../../Musikk/MIDIFILER/BACH/bach/gold/var14.mid\"" "#P\"../../in-files/invent13.mid\"" "#P\"../../in-files/invent6.mid\"" "#P\"../../in-files/invent4.mid\"" "#P\"../../in-files/invent1.mid\""))
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "classify structures" (quote ((let ((box (om-load-boxcall (quote abstraction) "set of features" (om-load-patch-abs1 "set of features" (quote ((let ((box (om-load-boxcomment "comment" (om-make-point 143 98) (quote "list of features to extract$from input chord-seqs.$$check \"features.lisp\" for$available mir $feature-extractors") "" (om-make-point 283 253) nil (om-make-color 0 0 0) (om-make-font "Liberation Sans" 12 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LIST 2" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote a)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote b)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote c)))) (om-make-point 395 143) nil nil "&" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "IMPORTANCE-OF-BASS-REGISTER" (quote omai::importance-of-bass-register) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 341 84) nil nil "l" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "IMPORTANCE-OF-MIDDLE-REGISTER" (quote omai::importance-of-middle-register) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 388 59) nil nil "l" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "IMPORTANCE-OF-HIGH-REGISTER" (quote omai::importance-of-high-register) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 468 89) nil nil "l" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "MOST-COMMON-PITCH-FRACTION" (quote omai::most-common-pitch-fraction) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 64 47) nil nil "l" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "REPEATED-NOTES" (quote omai::repeated-notes) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 224 110) nil nil "l" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "AMOUNT-OF-ARPEGGIATION" (quote omai::amount-of-arpeggiation) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 138 77) nil nil "l" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LIST" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote a)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote b)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote c)))) (om-make-point 149 155) nil nil "&" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 228 289) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((2 0 1 0 nil 0) (3 0 1 1 nil 0) (4 0 1 2 nil 0) (5 0 8 0 nil 0) (7 0 8 1 nil 0) (6 0 8 2 nil 0) (1 0 9 0 nil 0))) 6.140003 nil "" (om-make-point 0 0) (om-make-point 731 472)) (quote nil) (om-make-point 216 94) nil (list (list nil nil nil)) nil "set of features"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 119 56) (quote "get content of each$cluster, ie: input $chord-seqs") "" (om-make-point 451 232) nil (om-make-color 0 0 0) (om-make-font "Liberation Sans" 12 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 1257 203) (om-make-point 177 232) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6400) (6900) (7200) (7100) (6400) (7100) (7400) (7200) (7600) (6800) (7600) (6900) (6400) (6900) (7200) (7100) (6400) (7100) (7400) (7200) (6900) (7600) (7200) (7600) (6900) (7200) (6400) (6700) (6500) (6900) (7400) (7700) (7400) (7100) (7400) (6700) (7100) (6200) (6500) (6400) (6700) (7200) (7600) (7200) (6900) (7200) (6500) (7400) (7100) (6700) (7100) (6400) (7200) (6900) (6500) (6900) (6200) (7100) (7200) (6700) (7200) (7600) (7400) (6700) (7400) (7700) (7600) (7900) (7100) (7900) (7200) (6700) (7200) (7600) (7400) (6700) (7400) (7700) (7600) (7200) (7900) (7600) (8400) (8100) (7600) (8100) (7200) (7600) (6900) (7200) (7400) (7800) (8100) (8400) (8300) (7900) (7400) (7900) (7100) (7400) (6700) (7100) (7200) (7600) (7900) (8300) (8100) (7800) (7500) (7800) (7100) (7500) (6600) (6900) (6700) (7900) (7600) (7200) (7600) (6900) (7800) (7400) (7100) (7400) (6700) (7600) (7200) (6900) (7200) (6600) (7900) (7800) (7600) (7500) (7800) (7100) (7500) (7600) (7900) (8200) (7900) (7600) (7900) (7300) (7600) (7900) (7600) (7300) (7600) (6900) (7700) (8100) (7700) (7400) (7700) (7100) (7400) (7700) (7400) (7100) (7400) (6700) (7600) (7900) (7600) (7200) (7600) (6900) (7200) (7500) (7200) (6900) (7200) (6600) (7400) (7700) (7400) (7100) (7400) (6800) (7100) (7400) (7100) (6800) (7100) (6400) (6400) (6900) (7200) (7100) (6400) (7100) (7400) (7200) (6900) (6800) (6400) (6900) (7200) (7600) (7200) (6900) (7200) (6600) (6900) (7200) (6900) (6600) (6900) (6300) (7200) (7100) (6900) (6800) (7100) (7400) (7100) (6800) (7100) (6200) (6500) (6800) (6500) (6200) (6500) (5900) (6500) (6400) (6200) (6000) (6400) (6900) (6400) (6000) (6400) (5700) (6000) (6300) (6000) (5700) (6000) (5400) (6000) (5900) (5700) (5600) (7100) (6800) (6400) (6400) (6900) (7200) (7100) (6400) (7100) (7400) (7200) (6900) (7200) (7600) (7400) (7100) (7400) (7700) (7600) (7200) (7600) (7900) (7700) (7600) (7400) (7200) (7100) (7200) (7400) (7600) (7700) (7400) (8000) (7400) (8300) (7400) (7200) (8100) (7700) (7400) (7100) (7400) (6800) (7100) (7200) (6900) (6400) (6900) (7100) (6800) (6900) (6400) (6000) (6400) (5700))) :lonset (quote (163 326 489 652 815 978 1141 1304 1630 1957 2283 2609 2772 2935 3098 3261 3424 3587 3750 3913 4239 5380 5543 5707 5870 6033 6196 6359 6522 6848 7174 7500 7989 8152 8315 8478 8641 8804 8967 9130 9457 9783 10109 10598 10761 10924 11087 11413 11902 12065 12228 12391 12717 13207 13370 13533 13696 14022 14348 15815 15978 16141 16304 16467 16630 16793 16957 17283 17609 17935 18261 18424 18587 18750 18913 19076 19239 19402 19565 19891 20217 20543 20870 21033 21196 21359 21522 21685 21848 22011 22174 22500 22826 23152 23478 23641 23804 23967 24130 24293 24457 24620 24783 25109 25435 25761 26087 26250 26413 26576 26739 26902 27065 27228 27391 27717 28207 28370 28533 28696 29022 29511 29674 29837 30000 30326 30815 30978 31141 31304 31467 31630 31793 31957 32120 32283 32446 32609 34076 34239 34402 34565 34728 34891 35054 35217 35380 35543 35707 35870 36685 36848 37011 37174 37337 37500 37663 37826 37989 38152 38315 38478 39293 39457 39620 39783 39946 40109 40272 40435 40598 40761 40924 41087 41902 42065 42228 42391 42554 42717 42880 43043 43207 43370 43533 43696 44511 44674 44837 45000 45163 45326 45489 45652 45978 46304 46630 46957 47120 47283 47446 47609 47772 47935 48098 48261 48424 48587 48750 48913 49076 49239 49402 49565 49728 49891 50054 50217 50380 50543 50707 50870 51033 51196 51359 51522 51685 51848 52011 52174 52337 52500 52663 52826 52989 53152 53315 53478 53641 53804 53967 54130 54293 54457 54620 54783 55109 55435 55761 56250 56413 56576 56739 56902 57065 57228 57391 57554 57717 57880 58043 58207 58370 58533 58696 58859 59022 59185 59348 59511 59674 59837 60000 60163 60326 60489 60652 60815 60978 61141 61304 61467 61630 61793 61957 62120 62283 62446 62609 62772 62935 63098 63261 63424 63587 63750 63913 64076 64239 64402 64565 66522)) :ldur (quote ((163) (163) (163) (163) (163) (163) (163) (326) (327) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (163) (164) (163) (163) (163) (163) (163) (326) (326) (326) (489) (163) (163) (163) (163) (163) (163) (163) (327) (326) (326) (489) (163) (163) (163) (326) (489) (163) (163) (163) (326) (490) (163) (163) (163) (326) (326) (326) (163) (163) (163) (163) (163) (163) (164) (326) (326) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (327) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (326) (163) (163) (163) (163) (163) (164) (163) (163) (326) (326) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (326) (490) (163) (163) (163) (326) (489) (163) (163) (163) (326) (489) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (326) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (327) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (326) (326) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (1957))) :lvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7000) (7000) (7400) (6900) (7000) (6500) (7000) (7400) (7700) (6900) (7000) (7400) (6900) (7000) (6700) (7000) (7500) (7900) (6900) (7000) (7700) (7200) (7400) (7000) (7400) (7700) (8200) (7400) (7900) (6900) (7200) (7700) (6700) (7000) (7500) (6500) (6900) (7400) (7000) (7400) (7700) (7400) (7200) (7000) (7400) (6900) (7000) (6700) (7000) (7400) (7900) (8200) (7600) (7200) (7600) (7900) (7600) (7400) (7200) (7600) (7100) (7200) (6900) (7200) (7600) (8100) (8400) (7700) (7400) (7700) (8100) (7400) (7200) (7000) (7400) (7900) (7200) (7000) (6900) (7000) (6900) (6700) (7000) (7600) (6900) (6700) (6500) (6700) (6500) (6400) (6700) (7200) (6500) (6400) (6200) (6400) (7600) (7700 7600) (7700 7600 7700 7600) (7700 7600 7700 7600) (7600 7400) (7700) (7200) (6900) (6500) (7700) (7900 7700) (7900 7700) (7900 7700) (7700 7600) (7900) (7600) (7000) (6700) (7900) (8100 7900) (8100 7900) (8100 7900) (7900 7700) (8000) (7600) (7700) (7400) (7700) (8000) (8300) (8400) (7700) (7600) (7400) (7200) (7900) (7600) (7200) (7000) (6900) (6700) (6900) (7200) (6700) (6900) (6500) (6900) (7200) (7700) (6700) (6500) (6900) (6400) (6500) (6200) (6500) (6900) (7400) (6400) (6200) (6500) (6000) (6200) (5800) (6200) (6500) (7000) (6000) (5800) (6700) (5800) (6700) (6000 5800) (6000 5800) (6000 5800) (6000 5800) (5800) (5800) (6700) (5700) (5800) (5700) (6000) (5800) (6000) (6500) (6400) (7000) (6900) (6700) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6200) (7000) (6700) (6400) (6400 6500) (6400 6500) (6400 6500) (6400 6500) (6500) (6500 6000 5700) (7000) (7000) (7400) (6900) (7000) (6500) (7000) (7400) (7700) (6900) (7000) (7400) (6900) (7000) (6700) (7000) (7500) (7900) (6900) (7000) (7700) (7200) (7400) (7000) (7400) (7700) (8200) (7400) (7900) (6900) (7200) (7700) (6700) (7000) (7500) (6500) (6900) (7400) (7000) (7400) (7700) (7400) (7200) (7000) (7400) (6900) (7000) (6700) (7000) (7400) (7900) (8200) (7600) (7200) (7600) (7900) (7600) (7400) (7200) (7600) (7100) (7200) (6900) (7200) (7600) (8100) (8400) (7700) (7400) (7700) (8100) (7400) (7200) (7000) (7400) (7900) (7200) (7000) (6900) (7000) (6900) (6700) (7000) (7600) (6900) (6700) (6500) (6700) (6500) (6400) (6700) (7200) (6500) (6400) (6200) (6400) (7600) (7700 7600) (7700 7600 7700 7600) (7700 7600 7700 7600) (7600 7400) (7700) (7200) (6900) (6500) (7700) (7900 7700) (7900 7700) (7900 7700) (7700 7600) (7900) (7600) (7000) (6700) (7900) (8100 7900) (8100 7900) (8100 7900) (7900 7700) (8000) (7600) (7700) (7400) (7700) (8000) (8300) (8400) (7700) (7600) (7400) (7200) (7900) (7600) (7200) (7000) (6900) (6700) (6900) (7200) (6700) (6900) (6500) (6900) (7200) (7700) (6700) (6500) (6900) (6400) (6500) (6200) (6500) (6900) (7400) (6400) (6200) (6500) (6000) (6200) (5800) (6200) (6500) (7000) (6000) (5800) (6700) (5800) (6700) (6000 5800) (6000 5800) (6000 5800) (6000 5800) (5800) (5800) (6700) (5700) (5800) (5700) (6000) (5800) (6000) (6500) (6400) (7000) (6900) (6700) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6200) (7000) (6700) (6400) (6400 6500) (6400 6500) (6400 6500) (6400 6500) (6500) (6500 6000 5700) (6500) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6700) (6900) (7200) (6700) (6900) (6600) (6900) (7200) (7500) (7000) (7200) (7500) (7000) (7200) (6900) (7200) (7800) (8100) (7400) (8200) (8400) (7500) (8100) (8200) (7400) (7900) (8100) (7200) (7900 7800) (7900 7800) (7900 7800) (7900 7800) (7800) (7400) (7800) (8100) (7400) (7200) (7000) (7400) (6900) (7000) (6700) (7000) (7400) (7900) (8200) (7500) (7200) (7500) (7900) (7200) (7000) (6900) (7200) (6700) (6900) (6500) (6900) (7200) (7700) (8100) (7400) (7000) (7400) (7700) (7000) (6800) (6700) (7700) (7500) (8200) (8000) (7400) (6300) (7400) (7200) (7900) (7700) (7100) (6000) (7000) (6900) (7500) (7400) (6700) (6600) (6900) (7200) (7500) (7400) (7200) (8100) (6200) (6700) (7000) (7400) (7200) (7000) (8200) (6100) (6400) (6700) (7000) (6900) (6700) (7600) (6700) (6600) (6700) (6900) (6200) (6600) (6900) (7200) (7000) (6900) (7900) (7700) (7500) (7400) (7200) (7000) (6900) (7200) (6600) (6700) (7000) (6200) (6300) (6500) (6800) (6300) (6500) (6800) (7400) (7700) (6800) (6700) (7000) (6500) (6700) (7000) (7500) (7900) (7700) (7500) (7400) (7500) (7700) (6700) (6900) (7000) (7000) (7000 6900) (7000 6900) (7000 6900) (7000 6900) (6900) (6900) (7000 6900) (7000 6900) (7000 6900) (6900 6700) (7000) (6500) (6200) (5800) (7000) (7200 7000) (7200 7000) (7200 7000) (7000 6900) (7200) (6900) (6300) (6000) (7200) (7400 7200) (7400 7200) (7400 7200) (7200 7000) (7300) (6900) (7000) (6700) (7000) (7300) (7600) (7700) (7000) (6900 7000 6900) (6700 7000) (6500) (7500) (7400) (7200) (7300) (7900) (7200) (7300) (6900) (7000) (6300 6500 6300) (6200 6500) (6300) (6200) (6500) (6000) (6200) (5800) (6200) (6500) (7000) (6300) (6500) (7000) (6300) (6500) (6200) (6500) (7000) (7400) (6900) (7000) (7400) (6900) (7000) (6500) (7000) (7400) (7700) (6800) (6700) (7500) (7200) (6900) (6900 7000) (6900 7000) (6900 7000) (6900 7000) (7000) (7000 6500 6200) (6500) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6700) (6900) (7200) (6700) (6900) (6600) (6900) (7200) (7500) (7000) (7200) (7500) (7000) (7200) (6900) (7200) (7800) (8100) (7400) (8200) (8400) (7500) (8100) (8200) (7400) (7900) (8100) (7200) (7900 7800) (7900 7800) (7900 7800) (7900 7800) (7800) (7400) (7800) (8100) (7400) (7200) (7000) (7400) (6900) (7000) (6700) (7000) (7400) (7900) (8200) (7500) (7200) (7500) (7900) (7200) (7000) (6900) (7200) (6700) (6900) (6500) (6900) (7200) (7700) (8100) (7400) (7000) (7400) (7700) (7000) (6800) (6700) (7700) (7500) (8200) (8000) (7400) (6300) (7400) (7200) (7900) (7700) (7100) (6000) (7000) (6900) (7500) (7400) (6700) (6600) (6900) (7200) (7500) (7400) (7200) (8100) (6200) (6700) (7000) (7400) (7200) (7000) (8200) (6100) (6400) (6700) (7000) (6900) (6700) (7600) (6700) (6600) (6700) (6900) (6200) (6600) (6900) (7200) (7000) (6900) (7900) (7700) (7500) (7400) (7200) (7000) (6900) (7200) (6600) (6700) (7000) (6200) (6300) (6500) (6800) (6300) (6500) (6800) (7400) (7700) (6800) (6700) (7000) (6500) (6700) (7000) (7500) (7900) (7700) (7500) (7400) (7500) (7700) (6700) (6900) (7000) (7000) (7000 6900) (7000 6900) (7000 6900) (7000 6900) (6900) (6900) (7000 6900) (7000 6900) (7000 6900) (6900 6700) (7000) (6500) (6200) (5800) (7000) (7200 7000) (7200 7000) (7200 7000) (7000 6900) (7200) (6900) (6300) (6000) (7200) (7400 7200) (7400 7200) (7400 7200) (7200 7000) (7300) (6900) (7000) (6700) (7000) (7300) (7600) (7700) (7000) (6900 7000 6900) (6700 7000) (6500) (7500) (7400) (7200) (7300) (7900) (7200) (7300) (6900) (7000) (6300 6500 6300) (6200 6500) (6300) (6200) (6500) (6000) (6200) (5800) (6200) (6500) (7000) (6300) (6500) (7000) (6300) (6500) (6200) (6500) (7000) (7400) (6900) (7000) (7400) (6900) (7000) (6500) (7000) (7400) (7700) (6800) (6700) (7500) (7200) (6900) (6900 7000) (6900 7000) (6900 7000) (6900 7000) (7000) (7000 6500 6200))) :lonset (quote (461 643 782 925 1071 1211 1354 1500 1639 1782 1929 2068 2211 2357 2496 2639 2786 2925 3068 3214 3354 3496 3643 3782 3925 4071 4211 4354 4500 4639 4782 4929 5068 5211 5357 5496 5639 5786 6354 6496 6643 6782 6925 7071 7211 7354 7500 7639 7782 7929 8068 8211 8357 8925 9068 9214 9354 9496 9643 9782 9925 10071 10211 10354 10500 10639 10782 10929 11496 11639 11786 12354 12496 12643 12782 12925 13071 13211 13354 13639 13782 13929 14068 14211 14357 14496 14639 14925 15068 15214 15354 15496 15643 15782 15925 16071 16821 16929 17036 17143 17250 17357 17496 17639 17786 18107 18214 18321 18429 18536 18643 18782 18925 19071 19393 19500 19607 19714 19821 19929 20068 20211 20357 20496 20639 20786 20925 21068 21214 21354 21496 21643 21782 21925 22071 22211 22354 22500 22639 22782 22929 23068 23211 23357 23496 23639 23786 23925 24068 24214 24354 24496 24643 24782 24925 25071 25211 25354 25500 25639 25782 25929 26068 26211 26357 27107 27214 27536 27643 27750 27857 27964 28071 28393 28500 28639 28782 28929 29068 29211 29357 29496 29639 29786 29925 30068 30214 30354 30496 30643 30782 30925 31071 31211 31354 31500 31639 31782 31929 32068 32211 32357 32496 32639 32786 32925 33068 33214 33354 33496 33643 33782 33925 34071 34211 34354 34500 34607 34714 34821 34929 35143 35357 36468 36643 36782 36925 37071 37211 37354 37500 37639 37782 37929 38068 38211 38357 38496 38639 38786 38925 39068 39214 39354 39496 39643 39782 39925 40071 40211 40354 40500 40639 40782 40929 41068 41211 41357 41496 41639 41786 42354 42496 42643 42782 42925 43071 43211 43354 43500 43639 43782 43929 44068 44211 44357 44925 45068 45214 45354 45496 45643 45782 45925 46071 46211 46354 46500 46639 46782 46929 47496 47639 47786 48354 48496 48643 48782 48925 49071 49211 49354 49639 49782 49929 50068 50211 50357 50496 50639 50925 51068 51214 51354 51496 51643 51782 51925 52071 52821 52929 53036 53143 53250 53357 53496 53639 53786 54107 54214 54321 54429 54536 54643 54782 54925 55071 55393 55500 55607 55714 55821 55929 56068 56211 56357 56496 56639 56786 56925 57068 57214 57354 57496 57643 57782 57925 58071 58211 58354 58500 58639 58782 58929 59068 59211 59357 59496 59639 59786 59925 60068 60214 60354 60496 60643 60782 60925 61071 61211 61354 61500 61639 61782 61929 62068 62211 62357 63107 63214 63536 63643 63750 63857 63964 64071 64393 64500 64639 64782 64929 65068 65211 65357 65496 65639 65786 65925 66068 66214 66354 66496 66643 66782 66925 67071 67211 67354 67500 67639 67782 67928 68068 68211 68357 68496 68639 68786 68925 69068 69214 69354 69496 69643 69782 69925 70071 70211 70354 70500 70607 70714 70821 70928 71143 71357 72428 72643 72782 72925 73071 73211 73354 73500 73639 73782 73928 74068 74211 74357 74496 74639 74786 74925 75068 75214 75354 75496 75643 75782 75925 76071 76211 76353 76500 76639 76782 76928 77068 77211 77357 77496 77639 77786 77893 78000 78107 78214 78353 78496 78643 78782 78925 79071 79211 79353 79500 79639 79782 79928 80068 80211 80357 80925 81068 81214 81353 81496 81643 81782 81925 82071 82211 82353 82500 82639 82782 82928 83496 83639 83786 83925 84068 84214 84536 84643 84964 85071 85393 85500 85821 85928 86250 86357 86678 86786 87107 87214 87536 87643 87964 88071 88211 88353 88500 88639 88782 88928 89357 89496 89639 89786 89925 90068 90214 90643 90782 90925 91071 91211 91353 91500 91821 91928 92068 92211 92357 92496 92639 92786 92925 93068 93214 93353 93496 93643 93782 93925 94071 94211 94353 94500 95250 95357 95678 95786 95925 96068 96214 96353 96496 96643 96964 97071 97211 97353 97500 97639 97782 97928 98496 98639 98786 98925 99068 99214 99353 99496 99643 99750 99857 99964 100071 100178 100393 100500 100607 100714 100821 100928 101068 101211 101357 101678 101786 101893 102000 102107 102214 102353 102496 102643 102964 103071 103178 103286 103393 103500 103639 103782 103928 104068 104211 104357 104496 104639 104786 104889 105068 105214 105782 105925 106071 106211 106353 106500 106639 106782 106928 107032 107211 107357 107496 107639 107786 107925 108068 108214 108353 108496 108643 108782 108925 109071 109211 109353 109500 109639 109782 109928 110068 110211 110357 110496 110639 110786 110925 111068 111214 111353 111496 111643 111750 111857 111964 112071 112286 112500 113607 113786 113925 114068 114214 114353 114496 114643 114782 114925 115071 115211 115353 115500 115639 115782 115928 116068 116211 116357 116496 116639 116786 116925 117068 117214 117353 117496 117643 117782 117925 118071 118211 118353 118500 118639 118782 118928 119036 119143 119250 119357 119496 119639 119786 119925 120068 120214 120353 120496 120643 120782 120925 121071 121211 121353 121500 122068 122211 122357 122496 122639 122786 122925 123068 123214 123353 123496 123643 123782 123925 124071 124639 124782 124928 125068 125211 125357 125678 125786 126107 126214 126536 126643 126964 127071 127393 127500 127821 127928 128250 128357 128678 128786 129107 129214 129353 129496 129643 129782 129925 130071 130500 130639 130782 130928 131068 131211 131357 131786 131925 132068 132214 132353 132496 132643 132964 133071 133211 133353 133500 133639 133782 133928 134068 134211 134357 134496 134639 134786 134925 135068 135214 135353 135496 135643 136393 136500 136821 136928 137068 137211 137357 137496 137639 137786 138107 138214 138353 138496 138643 138782 138925 139071 139639 139782 139928 140068 140211 140357 140496 140639 140786 140893 141000 141107 141214 141321 141536 141643 141750 141857 141964 142071 142211 142353 142500 142821 142928 143036 143143 143250 143357 143496 143639 143786 144107 144214 144321 144428 144536 144643 144782 144925 145071 145211 145353 145500 145639 145782 145928 146032 146211 146357 146925 147068 147214 147353 147496 147643 147782 147925 148071 148175 148353 148500 148639 148782 148928 149068 149211 149357 149496 149639 149786 149925 150068 150214 150353 150496 150643 150782 150925 151071 151211 151353 151500 151639 151782 151928 152068 152211 152357 152500 152647 152798 152908 153018 153129 153239 153520 153811 155756)) :ldur (quote ((128) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (553) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (553) (129) (125) (553) (128) (125) (125) (129) (125) (125) (128) (271) (129) (125) (125) (128) (125) (125) (129) (272) (129) (125) (125) (128) (125) (125) (129) (125) (590) (93) (25 75) (25 22 25 21) (25 22 25 21) (46 46) (125) (129) (125) (278) (93) (46 47) (46 47) (47 46) (47 46) (125) (129) (125) (279) (93) (46 46) (46 47) (46 47) (46 47) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (707) (93) (279) (93) (47 46) (46 46) (46 47) (46 47) (279) (93) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (93) (46 47) (46 47) (46 47) (47 46) (186) (804 804 804) (143) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (553) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (553) (129) (125) (553) (128) (125) (125) (129) (125) (125) (128) (271) (129) (125) (125) (128) (125) (125) (129) (272) (129) (125) (125) (128) (125) (125) (129) (125) (590) (93) (25 75) (25 22 25 21) (25 22 25 21) (46 46) (125) (129) (125) (278) (93) (46 47) (46 47) (47 46) (47 46) (125) (129) (125) (279) (93) (46 46) (46 47) (46 47) (46 47) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (707) (93) (279) (93) (47 46) (46 46) (46 47) (46 47) (279) (93) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (124) (125) (129) (125) (126) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (124) (93) (46 47) (46 47) (46 47) (46 47) (185) (804 804 804) (186) (125) (129) (125) (125) (128) (124) (125) (129) (125) (126) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (47 46) (47 46) (47 46) (46 46) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (554) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (554) (129) (125) (125) (128) (125) (279) (92) (278) (93) (279) (93) (278) (93) (279) (93) (279) (93) (278) (93) (279) (92) (278) (93) (125) (128) (125) (125) (129) (125) (186) (125) (129) (125) (125) (128) (125) (186) (125) (129) (125) (125) (128) (125) (278) (93) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (589) (93) (279) (93) (125) (128) (125) (125) (129) (125) (278) (93) (125) (128) (125) (125) (129) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (93) (47 46) (46 46) (46 47) (46 47) (93) (93) (47 46) (46 46) (46 47) (46 47) (125) (128) (125) (279) (93) (47 46) (47 46) (47 46) (46 46) (125) (129) (125) (278) (93) (46 47) (46 47) (47 46) (47 46) (125) (129) (125) (125) (128) (125) (125) (129) (125) (33 32 28) (125 32) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (32 32 29) (125 32) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (93) (47 46) (46 46) (46 47) (46 47) (185) (803 803 803) (146) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (46 47) (47 46) (47 46) (47 46) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (553) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (554) (129) (125) (125) (128) (125) (279) (93) (278) (93) (279) (92) (278) (93) (279) (93) (278) (93) (279) (93) (279) (93) (278) (93) (125) (129) (125) (125) (129) (125) (186) (125) (129) (125) (125) (128) (125) (186) (125) (128) (125) (125) (129) (125) (278) (93) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (589) (93) (278) (93) (125) (128) (125) (125) (129) (125) (278) (93) (125) (129) (125) (125) (129) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (92) (47 46) (47 46) (46 46) (46 47) (93) (92) (47 46) (47 46) (46 46) (46 47) (125) (128) (125) (278) (93) (46 47) (47 46) (47 46) (47 46) (125) (129) (125) (278) (93) (46 47) (46 47) (46 47) (47 46) (125) (129) (125) (125) (128) (125) (125) (129) (125) (32 32 29) (125 32) (125) (554) (128) (125) (125) (129) (125) (125) (129) (125) (32 33 29) (125 32) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (128) (132) (129) (95) (48 48) (47 48) (48 47) (63 53) (253) (1945 1945 1945))) :lvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (78 0) (78 53 25 0) (78 53 25 0) (54 0) (0) (0) (0) (0) (0) (54 0) (54 0) (53 0) (53 0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (53 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (78 0) (78 53 25 0) (78 53 25 0) (54 0) (0) (0) (0) (0) (0) (54 0) (54 0) (53 0) (53 0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (54 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (53 0) (53 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (53 0) (53 0) (53 0) (54 0) (0) (0) (0) (0) (0) (54 0) (54 0) (53 0) (53 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (67 32 0) (36 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (68 33 0) (36 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (54 0) (53 0) (53 0) (53 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (53 0) (54 0) (54 0) (0) (0) (53 0) (53 0) (54 0) (54 0) (0) (0) (0) (0) (0) (54 0) (53 0) (53 0) (53 0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (53 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (68 33 0) (36 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (68 32 0) (36 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (55 0) (56 0) (55 0) (63 0) (0) (0 0 0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1 1 1) (1 1 1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1 1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1 1 1) (1 1 1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1 1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1 1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0 0 0) (0 0 0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0 0 0) (0 0 0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6200) (6400) (6500) (6700) (6900) (7000) (6100) (7000) (6900) (6700) (6500) (6400) (6500) (6900) (7400) (6700) (7000) (7600) (7400) (7600) (7700) (7900) (8100) (8200) (7300) (8200) (8100) (7900) (7700) (7600) (7700) (7400) (7600) (7700) (7900) (8100) (7000) (8100) (7900) (7700) (7600) (7400) (7600) (7200) (7400) (7600) (7700) (7900) (6900) (7900) (7700) (7600) (7400) (7200) (7400) (7600) (7700) (7400) (7600) (7700) (6700) (7200) (7400) (7600) (7200) (7400) (7600) (6500) (7000) (6900) (6700) (7200) (7000) (6900) (6700) (6500) (6400) (6500) (6700) (6900 6700) (6700) (6500) (6500) (7200) (7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7200) (7000) (6900) (6700) (6500) (6400) (7200) (6200) (6400) (6600) (6700) (6900) (7000) (6900) (6700) (6500) (6400) (6200) (7000) (6000) (6200) (6400) (6500) (6700) (6900) (7100) (7200) (7400) (7600) (7700) (6800) (7700) (7600) (7400) (7200) (7100) (7200) (7100) (7400) (7200) (7100) (6900) (6800) (6900) (6800) (6600) (6400) (6200) (6000) (6200) (6400) (6600) (6800) (6900) (6200) (7200) (7100) (6900) (6800) (6600) (6400) (6600) (6800) (6900) (7100) (7200) (6600) (7600) (7400) (7200) (7100) (6900) (6800) (6900) (7100) (7200) (7400) (7600) (6900) (7700) (7600) (7400) (7200) (7100) (8100) (8000) (7800) (7600) (8100) (7400) (7200 7100) (7100) (6900) (6900) (6900) (7000) (7200) (6200) (6600) (6900) (7000) (6700) (6900) (7000) (7200) (7400) (6400) (7400) (7200) (7000) (6900) (6700) (6900) (7700) (7600) (7700) (6700) (7600) (7400) (7600) (7700) (7900) (8100) (8200) (7300) (8200) (8100) (7900) (7700) (7600) (7700) (7400) (6700) (7400) (7300) (7600) (6900) (7300) (7400) (7100) (7300) (7400) (7400) (7200) (7000) (6900) (6700) (6500) (7000) (6100) (6200) (6400) (6500) (6700) (6900) (7400) (6500) (6400) (6200) (6200))) :lonset (quote (0 152 303 455 606 758 909 1061 1212 1364 1515 1667 1818 2121 2424 2727 3030 3333 3636 3788 3939 4091 4242 4394 4545 4697 4848 5000 5152 5303 5455 5606 5758 5909 6061 6212 6364 6515 6667 6818 6970 7121 7273 7424 7576 7727 7879 8030 8182 8333 8485 8636 8788 8939 9091 9242 9394 9545 9697 9848 10000 10909 11061 11212 11364 11515 11667 11818 12424 13030 13333 13636 13788 13939 14091 14242 14394 14545 14697 14848 15000 15303 15455 15758 16061 16364 16515 16667 16818 16970 17121 17273 17424 17576 17727 17879 18030 18182 18333 18485 18636 18788 18939 19091 19242 19394 19545 19697 19848 20000 20152 20303 20455 20606 20758 20909 21061 21212 21364 21515 21667 21818 21970 22121 22273 22424 22576 22727 22879 23030 23182 23333 23485 23636 23788 23939 24091 24242 24394 24545 24697 24848 25000 25152 25303 25455 25606 25758 25909 26061 26212 26364 26515 26667 26818 26970 27121 27273 27424 27576 27727 27879 28030 28182 28333 28485 28636 28788 28939 29091 29242 29394 29545 29697 29849 30000 30152 30303 30455 30606 30758 30909 31061 31212 31364 31515 31667 31818 31970 32121 32273 32424 32879 33030 33182 33485 33636 34091 34242 34394 34545 34849 35152 35455 35606 35758 35909 36061 36212 36364 36515 36667 36818 36970 37121 37273 37576 37727 37879 38182 38485 39091 39242 39394 39545 39697 39849 40000 40152 40303 40455 40606 40758 40909 41212 41515 41970 42121 42273 42424 42576 42727 42879 43030 43485 43636 43788 43939 44091 44242 44394 44545 44697 44849 45000 45152 45303 45455 45606 45758 46061 46212 46364 48182)) :ldur (quote ((152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (303) (303) (303) (303) (303) (303) (152) (151) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (303) (152) (151) (152) (151) (152) (151) (303) (606) (303) (303) (152) (151) (152) (151) (152) (151) (152) (151) (76 76) (303) (152) (303) (303) (303) (84 75) (83 83) (84 83) (83 84) (84 83) (83 84) (84 83) (83 84) (83 83) (83 84) (83 83) (83 84) (83 83) (83 84) (83 83) (83 84) (83 83) (83 84) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (455) (151) (76 76) (303) (151) (455) (151) (152) (151) (304) (303) (303) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (303) (151) (152) (303) (303) (303) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (303) (303) (455) (151) (152) (151) (152) (151) (152) (151) (455) (151) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (303) (151) (152) (1818))) :lvel (quote ((64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64 64) (64) (64) (64) (64) (64) (64 64) (48 48) (49 48) (49 49) (50 50) (51 51) (52 51) (52 52) (53 53) (54 53) (54 54) (55 55) (56 55) (57 56) (57 57) (58 58) (59 58) (59 59) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64 64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (76 0) (0) (0) (0) (0) (0) (75 0) (76 0) (75 0) (76 0) (75 0) (76 0) (75 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (76 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 1 0 (om-make-point 400 20) (om-make-point 370 280) 0 1000 nil 1 (quote :midi-player) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1 1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (list (quote g) (quote g) (quote g)) 24 2)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "list of chord-seqs" (om-load-patch-abs1 "list of chord-seqs" (quote ((let ((box (om-load-boxcall (quote genfun) "X-APPEND" (quote x-append) (quote ((om-load-inputfun (quote input-funbox) "first element" "L1?" nil) (om-load-inputfun (quote input-funbox) "second element" "L2?" nil))) (om-make-point 619 480) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LIST 2" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote a)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote b)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote c)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote d)))) (om-make-point 808 408) (om-make-point 432 43) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "var7.mid" (quote midifile) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil))) (om-make-point 1252 80) (om-make-point 50 72) (let ((newobj (load-midi (om-make-pathname :directory (quote (:absolute "home" "andersvi" "Musikk" "MIDIFILER" "BACH" "bach" "gold")) :device nil :host nil :name "var7" :type "mid")))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "var7.mid") (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (outport player deltapict zoom obj-mode cmnpref notechancolor? grillestep mode winsize winpos show-stems scale)) (list 0 (quote :midi-player) (om-make-point 0 0) 1 0 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0 (om-make-point 370 280) (om-make-point 10 40) (quote t) nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 1172 220) (om-make-point 130 90) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7100) (6900) (7100) (6200) (6700) (7100) (7100 6900) (6900) (6700) (6900) (7400) (7800 7900) (7900) (7800) (7900) (6900) (7600) (7900) (7900 7800) (7800) (7600) (7800) (7400) (7800 7600) (8100 7900) (8300) (7900) (7400) (7600) (7900 7800) (8300 8100) (8400) (8100) (7600) (7800) (7400) (7900) (6900) (7100) (7200) (7200) (7100) (6900) (6700) (6600) (6700) (7400) (7800 7900) (7900) (8100) (7900) (7800) (7600) (7600 7800) (7800) (7900) (7800) (7600) (7300) (7400) (7400 7300) (7300) (7400) (7600) (6900) (7300 7100) (7600 7400) (7800) (7400) (6900) (7100) (7400 7300) (7800 7600) (7900) (7600) (7100) (7300) (6900) (8100) (7400) (7600) (7300) (7300) (7400) (7800) (7600) (7800) (6900) (7400) (7800) (7900) (7800) (7900) (8300) (7600) (7900 7800) (8300 8100) (8400) (8300) (8100) (7900) (7800) (7600) (7600 7500) (7500) (7300) (7500) (7100) (8300) (7800) (7900) (7500) (7600) (7200) (7600) (8000) (8100) (8100 8300) (7800 7900) (7900) (8100) (8300) (7600) (7800) (7500) (7600) (7100) (6700) (6400) (7100) (7100) (6800) (6900) (7400) (7600) (7400) (7200) (7100) (7200) (7600) (7400) (7600) (7900) (7800) (7900) (8100) (7900) (7800) (7600) (8100) (8300) (7900) (7900 7800) (7800) (7600) (7800) (7400) (7800 7600) (8100 7900) (8300) (7900) (7400) (7600) (7800) (8100 7900) (8400 8300) (8100) (7600) (7800) (7400) (8600) (7900) (8100) (7800) (7900))) :lonset (quote (42 611 792 1167 1711 1904 2180 2298 2842 3023 3379 4480 4604 5117 5292 5673 6230 6417 6661 6792 7329 7492 7879 9773 9954 10148 10704 10904 11273 12042 12230 12404 12979 13129 13523 14104 14273 14667 15211 15398 15792 16179 17448 17648 17830 18017 18761 19117 19267 20636 20817 20986 21154 21330 21480 23111 23292 23630 24198 24380 24611 24761 25317 25504 25886 27792 27979 28167 28729 28917 29292 30029 30217 30398 30948 31154 31517 32073 32261 32642 33211 33417 33780 34154 36017 36580 36804 37136 37730 37880 38261 38817 39017 39380 40542 41292 41480 41667 41854 42042 42230 42417 42604 42817 42992 43342 43530 43917 45604 45792 46167 46711 46898 47292 47854 48042 48461 49167 49354 49504 50104 50292 50667 51204 51404 51779 52336 52542 52923 53667 54017 54604 54792 55167 55542 55729 55917 56104 56292 56823 57017 57386 57967 58167 58517 58886 59067 59261 59479 59636 60192 60379 60623 60761 61304 61504 61886 63792 63979 64167 64711 64898 65261 66030 66136 66317 66980 67154 67542 68092 68292 68648 69230 69404 69792 72042)) :ldur (quote ((588) (162) (375) (637) (206) (263) (82 50) (575) (188) (344) (1107) (62 50) (526) (150) (350) (544) (187) (237) (87 62) (569) (157) (387) (1863) (113 138) (126 119) (594) (194) (350) (750) (94 94) (94 93) (563) (188) (413) (588) (169) (338) (631) (193) (288) (394) (1307) (200) (213) (156) (737) (312) (100 75) (1400) (206) (206) (212) (176) (100 87) (1631) (206) (325) (600) (182) (237) (112 69) (569) (175) (375) (1850) (93 94) (94 94) (562) (213) (387) (681) (144 69) (100 94) (556) (194) (400) (569) (200) (381) (575) (225) (319) (406) (1538) (587) (187) (332) (575) (200) (374) (593) (213) (363) (1187) (731) (94 94) (94 93) (187) (188) (188) (187) (187) (188) (113 87) (362) (169) (368) (1500) (188) (375) (544) (187) (369) (562) (194) (362) (681) (93 94) (94 94) (588) (188) (375) (575) (194) (394) (582) (218) (387) (763) (287) (525) (213) (369) (375) (225) (207) (169) (232) (462) (181) (337) (543) (187) (350) (369) (206) (225) (181) (213) (568) (206) (238) (93 63) (562) (213) (388) (1868) (93 94) (94 94) (562) (181) (363) (800) (87) (100 131) (587 100) (168) (369) (525) (212) (344) (600) (200) (388) (2250))) :lvel (quote ((101) (89) (104) (91) (95) (102) (97 84) (84) (104) (88) (100) (106 100) (91) (96) (93) (80) (92) (100) (101 88) (90) (90) (101) (100) (93 97) (102 88) (121) (97) (92) (113) (85 101) (97 95) (115) (101) (97) (99) (88) (106) (101) (92) (102) (109) (100) (88) (77) (99) (101) (109) (112 109) (104) (97) (86) (89) (96) (92 88) (97) (89) (99) (109) (93) (92) (89 104) (102) (98) (98) (95) (85 82) (86 84) (119) (102) (92) (117) (78 101) (79 96) (106) (100) (90) (92) (81) (104) (97) (91) (92) (92) (75) (86) (92) (73) (81) (82) (94) (93) (94) (93) (104) (97) (90 104) (91 96) (96) (97) (98) (92) (93) (85) (97 99) (89) (80) (101) (91) (93) (93) (93) (84) (97) (104) (91) (112) (107) (74 93) (75 65) (90) (84) (86) (86) (96) (102) (90) (76) (50) (88) (91) (93) (84) (88) (88) (91) (82) (84) (67) (86) (91) (85) (86) (100) (93) (98) (78) (85) (97) (66) (85) (92) (81) (85 75) (80) (67) (86) (84) (79 91) (89 73) (113) (91) (93) (98) (93) (89 69) (97 91) (86) (88) (110) (91) (93) (90) (92) (94) (88))) :loffset (quote ((0) (0) (0) (0) (0) (0) (74 0) (0) (0) (0) (0) (62 0) (0) (0) (0) (0) (0) (0) (81 0) (0) (0) (0) (0) (81 0) (100 0) (0) (0) (0) (0) (94 0) (93 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (75 0) (0) (0) (0) (0) (0) (74 0) (0) (0) (0) (0) (0) (0) (75 0) (0) (0) (0) (0) (94 0) (94 0) (0) (0) (0) (0) (94 0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (94 0) (93 0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (94 0) (94 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (63 0) (0) (0) (0) (0) (94 0) (94 0) (0) (0) (0) (0) (0) (94 0) (100 0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5500 5400 5500) (4300) (5400 5500) (5300 5500) (5400 5500 5400) (5200) (5000) (5200) (6200) (6100) (5700) (6200) (6400) (6000) (5900) (6000) (5700) (5500) (5700) (5900) (6000) (6200) (5900) (5700) (5900) (6000) (6200) (6000) (5900) (6000) (6200) (5500) (5400) (5500) (5000) (5700) (6000) (5900 6000 5900) (5700) (5900) (5200) (5900) (6200) (6200 6100) (6100) (5900) (5700) (6200) (6100) (6200) (5500) (5900) (6200) (6700) (6900) (6700) (6600) (6400) (6600) (6700) (6900) (6200) (5700) (5400) (5000) (5200) (5400) (5500) (5700) (5400) (5200) (5400) (5500) (5700) (5500) (5400) (5900) (5500) (5700) (5000) (5400) (5700) (6200) (6200) (5000) (6200) (6000) (5900 6000 5900) (5700) (5900) (5500) (5700) (5900) (6000) (6200) (5900) (5700) (5900) (6000) (5900) (4700) (5900) (5700) (5900) (5500) (5900 5700) (6300 6100) (6400) (5900) (5500) (5700) (6000 5900) (6400 6200) (6500) (6400) (6300) (6400) (5500) (6000) (5700) (5900) (5200) (6400) (6200) (6200 6000) (6000) (5900) (6000) (5600) (5900) (5200) (5700) (6000) (5900) (6000) (5900) (5700) (5900) (6400) (6200) (6200 6100) (6100) (5900) (6100) (6200) (6400) (6000) (5900) (6000) (5700) (5500) (5700) (5900) (6000) (6200) (5900) (5700) (5900) (6000) (6200) (6000) (5900) (6400) (6000) (6200) (5500) (5000) (4700) (4300))) :lonset (quote (42 792 1136 1267 3292 3979 4167 4542 5292 5667 6417 6792 8480 8667 9011 9598 9786 10154 10711 10904 11267 11830 12023 12373 12967 13154 13523 14067 14254 14667 15417 15792 16354 16542 16917 17480 17642 17948 18592 18780 19142 19717 19911 20192 20304 20848 21030 21417 21980 22167 22530 23080 23254 23623 25161 25336 25517 25698 25886 26448 26667 27011 27579 27761 28136 28698 28886 29267 29848 30042 30423 30954 31142 31504 32061 32248 32623 33211 33417 33767 34323 34511 34917 36042 36754 37130 37880 38180 38836 39017 39417 39980 40167 40530 41086 41280 41642 42211 42398 42761 43523 43917 44480 44667 45004 45792 45980 46167 46730 46917 47292 47998 48192 48417 48980 49167 49542 50292 50667 51230 51417 51786 53461 53642 53923 54029 54579 54754 55111 55711 55892 56273 56836 57023 57386 57961 58142 58511 59086 59261 59542 59648 60217 60386 60792 62461 62654 63023 63579 63773 64161 64711 64898 65254 65842 66030 66411 66961 67148 67504 68104 68292 68667 69204 69398 69767 70330 70511 70917 72042)) :ldur (quote ((637 69 25) (375) (75 75) (7 2006) (581 56 44) (188) (375) (750) (375) (750) (375) (1500) (187) (375) (600) (194) (375) (538) (206) (376) (587) (212) (375) (594) (206) (382) (569) (194) (382) (750) (375) (562) (188) (375) (563) (187) (288) (593 69 32) (194) (343) (606) (181) (275) (69 44) (569) (175) (350) (563) (187) (375) (581) (193) (350) (1531) (187) (206) (206) (188) (568) (200) (375) (568) (200) (375) (593) (200) (393) (600) (206) (381) (531) (207) (381) (569) (181) (350) (613) (175) (375) (594) (207) (381) (1125) (750) (382) (762) (293) (581 75 43) (194) (369) (563) (187) (375) (574) (212) (387) (588) (206) (369) (743) (357) (563) (187) (375) (788) (94 94) (107 100) (563) (187) (375) (794) (144 75) (137 106) (563) (187) (375) (750) (375) (563) (187) (375) (1681) (200) (281) (68 50) (575) (188) (350) (618) (181) (375) (575) (200) (356) (600) (187) (381) (606) (168) (275) (68 50) (594) (187) (362) (1744) (218) (394) (588) (200) (394) (600) (212) (369) (594) (212) (393) (550) (206) (369) (569) (188) (350) (606) (194) (375) (594) (200) (387) (1125))) :lvel (quote ((96 112 115) (97) (102 102) (59 70) (86 93 94) (83) (95) (104) (113) (104) (98) (109) (100) (104) (100) (96) (93) (97) (97) (98) (102) (93) (98) (109) (101) (101) (93) (93) (102) (102) (104) (96) (104) (98) (100) (97) (107) (100 96 90) (98) (102) (101) (96) (100) (106 93) (97) (97) (90) (107) (101) (97) (97) (98) (104) (109) (95) (90) (94) (97) (89) (97) (86) (91) (84) (97) (92) (101) (108) (101) (95) (101) (106) (96) (93) (96) (98) (106) (102) (89) (96) (82) (110) (107) (107) (111) (95) (111) (91) (84 95 91) (90) (90) (92) (93) (98) (100) (92) (98) (102) (90) (93) (102) (97) (102) (91) (97) (93) (76 76) (104 99) (115) (98) (78) (102) (98 100) (98 96) (78) (96) (102) (101) (93) (97) (95) (91) (98) (111) (100) (97 101) (90) (96) (93) (93) (98) (86) (100) (104) (100) (100) (95) (98) (95) (93) (93) (95 99) (86) (85) (90) (101) (91) (92) (91) (88) (78) (89) (95) (97) (104) (92) (91) (98) (89) (96) (95) (84) (95) (102) (84) (96) (85) (93) (90) (88))) :loffset (quote ((88 25 0) (0) (62 0) (6 0) (94 69 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (82 44 0) (0) (0) (0) (0) (0) (69 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (100 56 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (94 0) (93 0) (0) (0) (0) (0) (100 0) (94 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (63 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (69 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((4 4 4) (4) (4 4) (4 4) (4 4 4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4 4 4) (4) (4) (4) (4) (4) (4 4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4 4 4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4 4) (4 4) (4) (4) (4) (4) (4 4) (4 4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4 4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4 4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4))) :legato 0)))) (load-port-info newobj (quote ((0 0 0) (0) (0 0) (0 0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (((0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0 0 0) (0) (0 0) (0 0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 2 24 (list (quote g) (quote g)) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1 1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :midi-player) 1 nil 1000 0 (om-make-point 370 280) (om-make-point 400 20) 0 1 (quote :normal) (quote t) nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FIRST" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 1232 340) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "cou1.mid" (quote midifile) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil))) (om-make-point 1117 84) (om-make-point 50 72) (let ((newobj (load-midi (om-make-pathname :directory (quote (:absolute "home" "andersvi" "Musikk" "MIDIFILER" "BACH" "bach" "partitas")) :device nil :host nil :name "cou1" :type "mid")))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "cou1.mid") (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (outport player deltapict zoom obj-mode cmnpref notechancolor? grillestep mode winsize winpos show-stems scale)) (list 0 (quote :midi-player) (om-make-point 0 0) 1 0 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0 (om-make-point 370 280) (om-make-point 10 40) (quote t) nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 1037 224) (om-make-point 130 90) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7000) (7000) (7400) (6900) (7000) (6500) (7000) (7400) (7700) (6900) (7000) (7400) (6900) (7000) (6700) (7000) (7500) (7900) (6900) (7000) (7700) (7200) (7400) (7000) (7400) (7700) (8200) (7400) (7900) (6900) (7200) (7700) (6700) (7000) (7500) (6500) (6900) (7400) (7000) (7400) (7700) (7400) (7200) (7000) (7400) (6900) (7000) (6700) (7000) (7400) (7900) (8200) (7600) (7200) (7600) (7900) (7600) (7400) (7200) (7600) (7100) (7200) (6900) (7200) (7600) (8100) (8400) (7700) (7400) (7700) (8100) (7400) (7200) (7000) (7400) (7900) (7200) (7000) (6900) (7000) (6900) (6700) (7000) (7600) (6900) (6700) (6500) (6700) (6500) (6400) (6700) (7200) (6500) (6400) (6200) (6400) (7600) (7700 7600) (7700 7600 7700 7600) (7700 7600 7700 7600) (7600 7400) (7700) (7200) (6900) (6500) (7700) (7900 7700) (7900 7700) (7900 7700) (7700 7600) (7900) (7600) (7000) (6700) (7900) (8100 7900) (8100 7900) (8100 7900) (7900 7700) (8000) (7600) (7700) (7400) (7700) (8000) (8300) (8400) (7700) (7600) (7400) (7200) (7900) (7600) (7200) (7000) (6900) (6700) (6900) (7200) (6700) (6900) (6500) (6900) (7200) (7700) (6700) (6500) (6900) (6400) (6500) (6200) (6500) (6900) (7400) (6400) (6200) (6500) (6000) (6200) (5800) (6200) (6500) (7000) (6000) (5800) (6700) (5800) (6700) (6000 5800) (6000 5800) (6000 5800) (6000 5800) (5800) (5800) (6700) (5700) (5800) (5700) (6000) (5800) (6000) (6500) (6400) (7000) (6900) (6700) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6200) (7000) (6700) (6400) (6400 6500) (6400 6500) (6400 6500) (6400 6500) (6500) (6500 6000 5700) (7000) (7000) (7400) (6900) (7000) (6500) (7000) (7400) (7700) (6900) (7000) (7400) (6900) (7000) (6700) (7000) (7500) (7900) (6900) (7000) (7700) (7200) (7400) (7000) (7400) (7700) (8200) (7400) (7900) (6900) (7200) (7700) (6700) (7000) (7500) (6500) (6900) (7400) (7000) (7400) (7700) (7400) (7200) (7000) (7400) (6900) (7000) (6700) (7000) (7400) (7900) (8200) (7600) (7200) (7600) (7900) (7600) (7400) (7200) (7600) (7100) (7200) (6900) (7200) (7600) (8100) (8400) (7700) (7400) (7700) (8100) (7400) (7200) (7000) (7400) (7900) (7200) (7000) (6900) (7000) (6900) (6700) (7000) (7600) (6900) (6700) (6500) (6700) (6500) (6400) (6700) (7200) (6500) (6400) (6200) (6400) (7600) (7700 7600) (7700 7600 7700 7600) (7700 7600 7700 7600) (7600 7400) (7700) (7200) (6900) (6500) (7700) (7900 7700) (7900 7700) (7900 7700) (7700 7600) (7900) (7600) (7000) (6700) (7900) (8100 7900) (8100 7900) (8100 7900) (7900 7700) (8000) (7600) (7700) (7400) (7700) (8000) (8300) (8400) (7700) (7600) (7400) (7200) (7900) (7600) (7200) (7000) (6900) (6700) (6900) (7200) (6700) (6900) (6500) (6900) (7200) (7700) (6700) (6500) (6900) (6400) (6500) (6200) (6500) (6900) (7400) (6400) (6200) (6500) (6000) (6200) (5800) (6200) (6500) (7000) (6000) (5800) (6700) (5800) (6700) (6000 5800) (6000 5800) (6000 5800) (6000 5800) (5800) (5800) (6700) (5700) (5800) (5700) (6000) (5800) (6000) (6500) (6400) (7000) (6900) (6700) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6200) (7000) (6700) (6400) (6400 6500) (6400 6500) (6400 6500) (6400 6500) (6500) (6500 6000 5700) (6500) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6700) (6900) (7200) (6700) (6900) (6600) (6900) (7200) (7500) (7000) (7200) (7500) (7000) (7200) (6900) (7200) (7800) (8100) (7400) (8200) (8400) (7500) (8100) (8200) (7400) (7900) (8100) (7200) (7900 7800) (7900 7800) (7900 7800) (7900 7800) (7800) (7400) (7800) (8100) (7400) (7200) (7000) (7400) (6900) (7000) (6700) (7000) (7400) (7900) (8200) (7500) (7200) (7500) (7900) (7200) (7000) (6900) (7200) (6700) (6900) (6500) (6900) (7200) (7700) (8100) (7400) (7000) (7400) (7700) (7000) (6800) (6700) (7700) (7500) (8200) (8000) (7400) (6300) (7400) (7200) (7900) (7700) (7100) (6000) (7000) (6900) (7500) (7400) (6700) (6600) (6900) (7200) (7500) (7400) (7200) (8100) (6200) (6700) (7000) (7400) (7200) (7000) (8200) (6100) (6400) (6700) (7000) (6900) (6700) (7600) (6700) (6600) (6700) (6900) (6200) (6600) (6900) (7200) (7000) (6900) (7900) (7700) (7500) (7400) (7200) (7000) (6900) (7200) (6600) (6700) (7000) (6200) (6300) (6500) (6800) (6300) (6500) (6800) (7400) (7700) (6800) (6700) (7000) (6500) (6700) (7000) (7500) (7900) (7700) (7500) (7400) (7500) (7700) (6700) (6900) (7000) (7000) (7000 6900) (7000 6900) (7000 6900) (7000 6900) (6900) (6900) (7000 6900) (7000 6900) (7000 6900) (6900 6700) (7000) (6500) (6200) (5800) (7000) (7200 7000) (7200 7000) (7200 7000) (7000 6900) (7200) (6900) (6300) (6000) (7200) (7400 7200) (7400 7200) (7400 7200) (7200 7000) (7300) (6900) (7000) (6700) (7000) (7300) (7600) (7700) (7000) (6900 7000 6900) (6700 7000) (6500) (7500) (7400) (7200) (7300) (7900) (7200) (7300) (6900) (7000) (6300 6500 6300) (6200 6500) (6300) (6200) (6500) (6000) (6200) (5800) (6200) (6500) (7000) (6300) (6500) (7000) (6300) (6500) (6200) (6500) (7000) (7400) (6900) (7000) (7400) (6900) (7000) (6500) (7000) (7400) (7700) (6800) (6700) (7500) (7200) (6900) (6900 7000) (6900 7000) (6900 7000) (6900 7000) (7000) (7000 6500 6200) (6500) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6700) (6900) (7200) (6700) (6900) (6600) (6900) (7200) (7500) (7000) (7200) (7500) (7000) (7200) (6900) (7200) (7800) (8100) (7400) (8200) (8400) (7500) (8100) (8200) (7400) (7900) (8100) (7200) (7900 7800) (7900 7800) (7900 7800) (7900 7800) (7800) (7400) (7800) (8100) (7400) (7200) (7000) (7400) (6900) (7000) (6700) (7000) (7400) (7900) (8200) (7500) (7200) (7500) (7900) (7200) (7000) (6900) (7200) (6700) (6900) (6500) (6900) (7200) (7700) (8100) (7400) (7000) (7400) (7700) (7000) (6800) (6700) (7700) (7500) (8200) (8000) (7400) (6300) (7400) (7200) (7900) (7700) (7100) (6000) (7000) (6900) (7500) (7400) (6700) (6600) (6900) (7200) (7500) (7400) (7200) (8100) (6200) (6700) (7000) (7400) (7200) (7000) (8200) (6100) (6400) (6700) (7000) (6900) (6700) (7600) (6700) (6600) (6700) (6900) (6200) (6600) (6900) (7200) (7000) (6900) (7900) (7700) (7500) (7400) (7200) (7000) (6900) (7200) (6600) (6700) (7000) (6200) (6300) (6500) (6800) (6300) (6500) (6800) (7400) (7700) (6800) (6700) (7000) (6500) (6700) (7000) (7500) (7900) (7700) (7500) (7400) (7500) (7700) (6700) (6900) (7000) (7000) (7000 6900) (7000 6900) (7000 6900) (7000 6900) (6900) (6900) (7000 6900) (7000 6900) (7000 6900) (6900 6700) (7000) (6500) (6200) (5800) (7000) (7200 7000) (7200 7000) (7200 7000) (7000 6900) (7200) (6900) (6300) (6000) (7200) (7400 7200) (7400 7200) (7400 7200) (7200 7000) (7300) (6900) (7000) (6700) (7000) (7300) (7600) (7700) (7000) (6900 7000 6900) (6700 7000) (6500) (7500) (7400) (7200) (7300) (7900) (7200) (7300) (6900) (7000) (6300 6500 6300) (6200 6500) (6300) (6200) (6500) (6000) (6200) (5800) (6200) (6500) (7000) (6300) (6500) (7000) (6300) (6500) (6200) (6500) (7000) (7400) (6900) (7000) (7400) (6900) (7000) (6500) (7000) (7400) (7700) (6800) (6700) (7500) (7200) (6900) (6900 7000) (6900 7000) (6900 7000) (6900 7000) (7000) (7000 6500 6200))) :lonset (quote (461 643 782 925 1071 1211 1354 1500 1639 1782 1929 2068 2211 2357 2496 2639 2786 2925 3068 3214 3354 3496 3643 3782 3925 4071 4211 4354 4500 4639 4782 4929 5068 5211 5357 5496 5639 5786 6354 6496 6643 6782 6925 7071 7211 7354 7500 7639 7782 7929 8068 8211 8357 8925 9068 9214 9354 9496 9643 9782 9925 10071 10211 10354 10500 10639 10782 10929 11496 11639 11786 12354 12496 12643 12782 12925 13071 13211 13354 13639 13782 13929 14068 14211 14357 14496 14639 14925 15068 15214 15354 15496 15643 15782 15925 16071 16821 16929 17036 17143 17250 17357 17496 17639 17786 18107 18214 18321 18429 18536 18643 18782 18925 19071 19393 19500 19607 19714 19821 19929 20068 20211 20357 20496 20639 20786 20925 21068 21214 21354 21496 21643 21782 21925 22071 22211 22354 22500 22639 22782 22929 23068 23211 23357 23496 23639 23786 23925 24068 24214 24354 24496 24643 24782 24925 25071 25211 25354 25500 25639 25782 25929 26068 26211 26357 27107 27214 27536 27643 27750 27857 27964 28071 28393 28500 28639 28782 28929 29068 29211 29357 29496 29639 29786 29925 30068 30214 30354 30496 30643 30782 30925 31071 31211 31354 31500 31639 31782 31929 32068 32211 32357 32496 32639 32786 32925 33068 33214 33354 33496 33643 33782 33925 34071 34211 34354 34500 34607 34714 34821 34929 35143 35357 36468 36643 36782 36925 37071 37211 37354 37500 37639 37782 37929 38068 38211 38357 38496 38639 38786 38925 39068 39214 39354 39496 39643 39782 39925 40071 40211 40354 40500 40639 40782 40929 41068 41211 41357 41496 41639 41786 42354 42496 42643 42782 42925 43071 43211 43354 43500 43639 43782 43929 44068 44211 44357 44925 45068 45214 45354 45496 45643 45782 45925 46071 46211 46354 46500 46639 46782 46929 47496 47639 47786 48354 48496 48643 48782 48925 49071 49211 49354 49639 49782 49929 50068 50211 50357 50496 50639 50925 51068 51214 51354 51496 51643 51782 51925 52071 52821 52929 53036 53143 53250 53357 53496 53639 53786 54107 54214 54321 54429 54536 54643 54782 54925 55071 55393 55500 55607 55714 55821 55929 56068 56211 56357 56496 56639 56786 56925 57068 57214 57354 57496 57643 57782 57925 58071 58211 58354 58500 58639 58782 58929 59068 59211 59357 59496 59639 59786 59925 60068 60214 60354 60496 60643 60782 60925 61071 61211 61354 61500 61639 61782 61929 62068 62211 62357 63107 63214 63536 63643 63750 63857 63964 64071 64393 64500 64639 64782 64929 65068 65211 65357 65496 65639 65786 65925 66068 66214 66354 66496 66643 66782 66925 67071 67211 67354 67500 67639 67782 67928 68068 68211 68357 68496 68639 68786 68925 69068 69214 69354 69496 69643 69782 69925 70071 70211 70354 70500 70607 70714 70821 70928 71143 71357 72428 72643 72782 72925 73071 73211 73354 73500 73639 73782 73928 74068 74211 74357 74496 74639 74786 74925 75068 75214 75354 75496 75643 75782 75925 76071 76211 76353 76500 76639 76782 76928 77068 77211 77357 77496 77639 77786 77893 78000 78107 78214 78353 78496 78643 78782 78925 79071 79211 79353 79500 79639 79782 79928 80068 80211 80357 80925 81068 81214 81353 81496 81643 81782 81925 82071 82211 82353 82500 82639 82782 82928 83496 83639 83786 83925 84068 84214 84536 84643 84964 85071 85393 85500 85821 85928 86250 86357 86678 86786 87107 87214 87536 87643 87964 88071 88211 88353 88500 88639 88782 88928 89357 89496 89639 89786 89925 90068 90214 90643 90782 90925 91071 91211 91353 91500 91821 91928 92068 92211 92357 92496 92639 92786 92925 93068 93214 93353 93496 93643 93782 93925 94071 94211 94353 94500 95250 95357 95678 95786 95925 96068 96214 96353 96496 96643 96964 97071 97211 97353 97500 97639 97782 97928 98496 98639 98786 98925 99068 99214 99353 99496 99643 99750 99857 99964 100071 100178 100393 100500 100607 100714 100821 100928 101068 101211 101357 101678 101786 101893 102000 102107 102214 102353 102496 102643 102964 103071 103178 103286 103393 103500 103639 103782 103928 104068 104211 104357 104496 104639 104786 104889 105068 105214 105782 105925 106071 106211 106353 106500 106639 106782 106928 107032 107211 107357 107496 107639 107786 107925 108068 108214 108353 108496 108643 108782 108925 109071 109211 109353 109500 109639 109782 109928 110068 110211 110357 110496 110639 110786 110925 111068 111214 111353 111496 111643 111750 111857 111964 112071 112286 112500 113607 113786 113925 114068 114214 114353 114496 114643 114782 114925 115071 115211 115353 115500 115639 115782 115928 116068 116211 116357 116496 116639 116786 116925 117068 117214 117353 117496 117643 117782 117925 118071 118211 118353 118500 118639 118782 118928 119036 119143 119250 119357 119496 119639 119786 119925 120068 120214 120353 120496 120643 120782 120925 121071 121211 121353 121500 122068 122211 122357 122496 122639 122786 122925 123068 123214 123353 123496 123643 123782 123925 124071 124639 124782 124928 125068 125211 125357 125678 125786 126107 126214 126536 126643 126964 127071 127393 127500 127821 127928 128250 128357 128678 128786 129107 129214 129353 129496 129643 129782 129925 130071 130500 130639 130782 130928 131068 131211 131357 131786 131925 132068 132214 132353 132496 132643 132964 133071 133211 133353 133500 133639 133782 133928 134068 134211 134357 134496 134639 134786 134925 135068 135214 135353 135496 135643 136393 136500 136821 136928 137068 137211 137357 137496 137639 137786 138107 138214 138353 138496 138643 138782 138925 139071 139639 139782 139928 140068 140211 140357 140496 140639 140786 140893 141000 141107 141214 141321 141536 141643 141750 141857 141964 142071 142211 142353 142500 142821 142928 143036 143143 143250 143357 143496 143639 143786 144107 144214 144321 144428 144536 144643 144782 144925 145071 145211 145353 145500 145639 145782 145928 146032 146211 146357 146925 147068 147214 147353 147496 147643 147782 147925 148071 148175 148353 148500 148639 148782 148928 149068 149211 149357 149496 149639 149786 149925 150068 150214 150353 150496 150643 150782 150925 151071 151211 151353 151500 151639 151782 151928 152068 152211 152357 152500 152647 152798 152908 153018 153129 153239 153520 153811 155756)) :ldur (quote ((128) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (553) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (553) (129) (125) (553) (128) (125) (125) (129) (125) (125) (128) (271) (129) (125) (125) (128) (125) (125) (129) (272) (129) (125) (125) (128) (125) (125) (129) (125) (590) (93) (25 75) (25 22 25 21) (25 22 25 21) (46 46) (125) (129) (125) (278) (93) (46 47) (46 47) (47 46) (47 46) (125) (129) (125) (279) (93) (46 46) (46 47) (46 47) (46 47) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (707) (93) (279) (93) (47 46) (46 46) (46 47) (46 47) (279) (93) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (93) (46 47) (46 47) (46 47) (47 46) (186) (804 804 804) (143) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (553) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (553) (129) (125) (553) (128) (125) (125) (129) (125) (125) (128) (271) (129) (125) (125) (128) (125) (125) (129) (272) (129) (125) (125) (128) (125) (125) (129) (125) (590) (93) (25 75) (25 22 25 21) (25 22 25 21) (46 46) (125) (129) (125) (278) (93) (46 47) (46 47) (47 46) (47 46) (125) (129) (125) (279) (93) (46 46) (46 47) (46 47) (46 47) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (707) (93) (279) (93) (47 46) (46 46) (46 47) (46 47) (279) (93) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (124) (125) (129) (125) (126) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (124) (93) (46 47) (46 47) (46 47) (46 47) (185) (804 804 804) (186) (125) (129) (125) (125) (128) (124) (125) (129) (125) (126) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (47 46) (47 46) (47 46) (46 46) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (554) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (554) (129) (125) (125) (128) (125) (279) (92) (278) (93) (279) (93) (278) (93) (279) (93) (279) (93) (278) (93) (279) (92) (278) (93) (125) (128) (125) (125) (129) (125) (186) (125) (129) (125) (125) (128) (125) (186) (125) (129) (125) (125) (128) (125) (278) (93) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (589) (93) (279) (93) (125) (128) (125) (125) (129) (125) (278) (93) (125) (128) (125) (125) (129) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (93) (47 46) (46 46) (46 47) (46 47) (93) (93) (47 46) (46 46) (46 47) (46 47) (125) (128) (125) (279) (93) (47 46) (47 46) (47 46) (46 46) (125) (129) (125) (278) (93) (46 47) (46 47) (47 46) (47 46) (125) (129) (125) (125) (128) (125) (125) (129) (125) (33 32 28) (125 32) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (32 32 29) (125 32) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (93) (47 46) (46 46) (46 47) (46 47) (185) (803 803 803) (146) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (46 47) (47 46) (47 46) (47 46) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (553) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (554) (129) (125) (125) (128) (125) (279) (93) (278) (93) (279) (92) (278) (93) (279) (93) (278) (93) (279) (93) (279) (93) (278) (93) (125) (129) (125) (125) (129) (125) (186) (125) (129) (125) (125) (128) (125) (186) (125) (128) (125) (125) (129) (125) (278) (93) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (589) (93) (278) (93) (125) (128) (125) (125) (129) (125) (278) (93) (125) (129) (125) (125) (129) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (92) (47 46) (47 46) (46 46) (46 47) (93) (92) (47 46) (47 46) (46 46) (46 47) (125) (128) (125) (278) (93) (46 47) (47 46) (47 46) (47 46) (125) (129) (125) (278) (93) (46 47) (46 47) (46 47) (47 46) (125) (129) (125) (125) (128) (125) (125) (129) (125) (32 32 29) (125 32) (125) (554) (128) (125) (125) (129) (125) (125) (129) (125) (32 33 29) (125 32) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (128) (132) (129) (95) (48 48) (47 48) (48 47) (63 53) (253) (1945 1945 1945))) :lvel (quote ((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100 100) (100 100 100 100) (100 100 100 100) (100 100) (100) (100) (100) (100) (100) (100 100) (100 100) (100 100) (100 100) (100) (100) (100) (100) (100) (100 100) (100 100) (100 100) (100 100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100 100) (100 100) (100 100) (100 100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100 100) (100 100) (100 100) (100 100) (100) (100 100 100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100 100) (100 100 100 100) (100 100 100 100) (100 100) (100) (100) (100) (100) (100) (100 100) (100 100) (100 100) (100 100) (100) (100) (100) (100) (100) (100 100) (100 100) (100 100) (100 100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100 100) (100 100) (100 100) (100 100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100 100) (100 100) (100 100) (100 100) (100) (100 100 100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100 100) (100 100) (100 100) (100 100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100 100) (100 100) (100 100) (100 100) (100) (100) (100 100) (100 100) (100 100) (100 100) (100) (100) (100) (100) (100) (100 100) (100 100) (100 100) (100 100) (100) (100) (100) (100) (100) (100 100) (100 100) (100 100) (100 100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100 100 100) (100 100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100 100 100) (100 100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100 100) (100 100) (100 100) (100 100) (100) (100 100 100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100 100) (100 100) (100 100) (100 100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100 100) (100 100) (100 100) (100 100) (100) (100) (100 100) (100 100) (100 100) (100 100) (100) (100) (100) (100) (100) (100 100) (100 100) (100 100) (100 100) (100) (100) (100) (100) (100) (100 100) (100 100) (100 100) (100 100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100 100 100) (100 100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100 100 100) (100 100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100 100) (100 100) (100 100) (100 100) (100) (100 100 100))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (78 0) (78 53 25 0) (78 53 25 0) (54 0) (0) (0) (0) (0) (0) (54 0) (54 0) (53 0) (53 0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (53 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (78 0) (78 53 25 0) (78 53 25 0) (54 0) (0) (0) (0) (0) (0) (54 0) (54 0) (53 0) (53 0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (54 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (53 0) (53 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (53 0) (53 0) (53 0) (54 0) (0) (0) (0) (0) (0) (54 0) (54 0) (53 0) (53 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (67 32 0) (36 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (68 33 0) (36 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (54 0) (53 0) (53 0) (53 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (53 0) (54 0) (54 0) (0) (0) (53 0) (53 0) (54 0) (54 0) (0) (0) (0) (0) (0) (54 0) (53 0) (53 0) (53 0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (53 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (68 33 0) (36 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (68 32 0) (36 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (55 0) (56 0) (55 0) (63 0) (0) (0 0 0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1 1 1) (1 1 1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1 1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1 1 1) (1 1 1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1 1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1 1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0 0 0) (0 0 0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0 0 0) (0 0 0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6200) (5800) (6200) (5500) (6300) (5800) (6300) (5000) (6500) (6200) (6500) (6300) (5100) (5000) (6200) (6000) (4800) (4600) (5000) (4500) (4600) (4100) (4600) (5000) (5300) (4500) (4300) (5000) (4600) (4300) (4800) (5200) (4700) (4800) (4300) (4800) (5200) (5500) (4600) (4500) (5200) (4800) (4500) (5000) (5300) (4800) (5000) (4500) (5000) (5300) (5700) (4800) (4600) (5700) (5500) (4600) (4500) (5300) (4300) (5300) (5200) (4300) (4100) (5000) (4000) (5000) (4800) (4000) (3800) (4700) (3600) (4000) (4300) (4800) (5200) (5500) (4600) (4500) (4300) (3600) (4100) (4500) (4800) (5300) (5700) (4800) (4600) (4500) (3600) (4300) (4800) (5200) (5500) (5800) (5200) (5000) (4800) (4700 3600) (4800 3600) (4800) (5000) (5200) (5300) (5700) (6000) (5300) (5700) (6000) (5200) (5700) (6000) (5000) (5300) (5700) (5000) (5300) (5700) (4800) (5300) (5700) (4600) (5000) (5300) (4600) (5000) (5300) (4500) (5000) (5300) (4300) (4600) (5000) (4300) (4600) (5000) (4100) (4600) (5000) (4000) (4300) (4800) (5200) (5500) (5300) (5200) (5000) (4800) (5300) (5000) (4500) (4600) (4800) (3600) (4100) (4800) (4500) (4800) (4100) (4500) (3800) (4800) (4500) (4800) (4100) (4500) (3300) (4800) (4500) (4800) (4100) (4500) (3400) (4600) (4800) (3600) (4100) (5800) (6200) (5800) (6200) (5500) (6300) (5800) (6300) (5000) (6500) (6200) (6500) (6300) (5100) (5000) (6200) (6000) (4800) (4600) (5000) (4500) (4600) (4100) (4600) (5000) (5300) (4500) (4300) (5000) (4600) (4300) (4800) (5200) (4700) (4800) (4300) (4800) (5200) (5500) (4600) (4500) (5200) (4800) (4500) (5000) (5300) (4800) (5000) (4500) (5000) (5300) (5700) (4800) (4600) (5700) (5500) (4600) (4500) (5300) (4300) (5300) (5200) (4300) (4100) (5000) (4000) (5000) (4800) (4000) (3800) (4700) (3600) (4000) (4300) (4800) (5200) (5500) (4600) (4500) (4300) (3600) (4100) (4500) (4800) (5300) (5700) (4800) (4600) (4500) (3600) (4300) (4800) (5200) (5500) (5800) (5200) (5000) (4800) (4700 3600) (4800 3600) (4800) (5000) (5200) (5300) (5700) (6000) (5300) (5700) (6000) (5200) (5700) (6000) (5000) (5300) (5700) (5000) (5300) (5700) (4800) (5300) (5700) (4600) (5000) (5300) (4600) (5000) (5300) (4500) (5000) (5300) (4300) (4600) (5000) (4300) (4600) (5000) (4100) (4600) (5000) (4000) (4300) (4800) (5200) (5500) (5300) (5200) (5000) (4800) (5300) (5000) (4500) (4600) (4800) (3600) (4100) (4800) (4500) (4800) (4100) (4500) (3800) (4800) (4500) (4800) (4100) (4500) (3300) (4800) (4500) (4800) (4100) (4500) (3400) (4600) (4800) (3600) (4100) (5300) (5700) (6000) (6300) (5100) (5400) (5700) (6000) (5000) (5700) (6200) (6600) (6700) (5500) (5300) (6500) (6300) (5100) (5000) (5400) (5700) (6200) (6600) (6900) (7200) (4300) (4600) (5000) (5500) (5800) (6200) (6500) (4800) (5100) (5500) (6000) (6300) (6700) (7000) (4100) (4500) (4800) (5300) (5700) (6000) (6300) (4600) (5000) (5300) (5800) (6200) (6500) (6800) (6300) (6200) (6000) (6300) (6700) (6500) (6200) (5800) (6000) (5800) (5600) (6000) (6300) (6200) (5900) (5500) (5700) (5500) (5400) (5700) (6000) (5800) (5500) (5100) (6000) (5700) (5400) (5500) (5700) (5100) (5000) (4800) (4600) (5500) (5000) (4600) (4800) (5000) (4300) (4200) (4000) (3800) (4900) (3800) (4900) (3800) (4900) (3800) (5100) (5000) (4800) (4600) (5400) (5500) (4800) (5000) (3800) (4300) (4600) (4200) (4300) (3800) (4300) (4600) (5000) (4300) (3800) (4600) (5000) (5300) (4600) (5100) (5500) (5100) (4800) (5100) (4300) (4500) (5300) (5800) (5000) (5100) (4800) (4100) (4500) (4800) (5300) (5700) (6000) (5100) (5000) (4800) (4100) (4600) (5000) (5300) (5800) (6200) (5300) (5100) (5000) (4100) (4800) (5300) (5700) (6000) (6300) (5700) (5500) (5300) (5200 4100) (5300 4100) (4500) (4800) (5300) (5500) (5700) (5800) (5700) (5800) (5200) (5300) (4100) (4600) (5000) (5100) (5300) (5000) (4800) (4600) (5000) (5500) (4300) (3800) (4600) (4800) (5000) (4800) (4600) (5300) (5000) (4600) (3900) (5100) (5300) (4100) (4600) (5300) (5700) (6000) (6300) (5100) (5400) (5700) (6000) (5000) (5700) (6200) (6600) (6700) (5500) (5300) (6500) (6300) (5100) (5000) (5400) (5700) (6200) (6600) (6900) (7200) (4300) (4600) (5000) (5500) (5800) (6200) (6500) (4800) (5100) (5500) (6000) (6300) (6700) (7000) (4100) (4500) (4800) (5300) (5700) (6000) (6300) (4600) (5000) (5300) (5800) (6200) (6500) (6800) (6300) (6200) (6000) (6300) (6700) (6500) (6200) (5800) (6000) (5800) (5600) (6000) (6300) (6200) (5900) (5500) (5700) (5500) (5400) (5700) (6000) (5800) (5500) (5100) (6000) (5700) (5400) (5500) (5700) (5100) (5000) (4800) (4600) (5500) (5000) (4600) (4800) (5000) (4300) (4200) (4000) (3800) (4900) (3800) (4900) (3800) (4900) (3800) (5100) (5000) (4800) (4600) (5400) (5500) (4800) (5000) (3800) (4300) (4600) (4200) (4300) (3800) (4300) (4600) (5000) (4300) (3800) (4600) (5000) (5300) (4600) (5100) (5500) (5100) (4800) (5100) (4300) (4500) (5300) (5800) (5000) (5100) (4800) (4100) (4500) (4800) (5300) (5700) (6000) (5100) (5000) (4800) (4100) (4600) (5000) (5300) (5800) (6200) (5300) (5100) (5000) (4100) (4800) (5300) (5700) (6000) (6300) (5700) (5500) (5300) (5200 4100) (5300 4100) (4500) (4800) (5300) (5500) (5700) (5800) (5700) (5800) (5200) (5300) (4100) (4600) (5000) (5100) (5300) (5000) (4800) (4600) (5000) (5500) (4300) (3800) (4600) (4800) (5000) (4800) (4600) (5300) (5000) (4600) (3900) (5100) (5300) (4100) (4600))) :lonset (quote (1393 1500 1821 1929 2679 2786 3107 3214 3964 4071 4393 4500 4821 4929 5250 5357 5679 5786 5925 6068 6214 6354 6496 6643 6782 6925 7071 7821 7929 8250 8357 8496 8639 8786 8925 9068 9214 9354 9496 9643 10393 10500 10821 10929 11068 11211 11357 11496 11639 11786 11925 12068 12214 12536 12643 12964 13071 13393 13500 13821 13929 14250 14357 14679 14786 15107 15214 15536 15643 15964 16071 16211 16354 16500 16639 16782 16929 17068 17211 17357 17496 17639 17786 17925 18068 18214 18354 18496 18643 18782 18925 19071 19211 19354 19500 19639 19782 19929 21214 21964 22071 22393 22500 22639 22782 22929 23068 23211 23357 23496 23639 23786 23925 24068 24214 24354 24496 24643 24782 24925 25071 25211 25354 25500 25639 25782 25929 26068 26211 26357 26496 26639 26786 26925 27068 27214 27354 27496 27643 27782 27925 28071 28211 28354 28500 28639 28782 28929 29250 29357 29679 29786 30107 30214 30536 30643 30964 31071 31393 31500 31821 31929 32250 32357 32679 32786 33107 33214 33536 33643 33964 34071 34393 34500 34929 35357 36643 37393 37500 37821 37929 38679 38786 39107 39214 39964 40071 40393 40500 40821 40929 41250 41357 41679 41786 41925 42068 42214 42354 42496 42643 42782 42925 43071 43821 43929 44250 44357 44496 44639 44786 44925 45068 45214 45354 45496 45643 46393 46500 46821 46929 47068 47211 47357 47496 47639 47786 47925 48068 48214 48536 48643 48964 49071 49393 49500 49821 49929 50250 50357 50679 50786 51107 51214 51536 51643 51964 52071 52211 52354 52500 52639 52782 52929 53068 53211 53357 53496 53639 53786 53925 54068 54214 54354 54496 54643 54782 54925 55071 55211 55354 55500 55639 55782 55929 57214 57964 58071 58393 58500 58639 58782 58929 59068 59211 59357 59496 59639 59786 59925 60068 60214 60354 60496 60643 60782 60925 61071 61211 61354 61500 61639 61782 61929 62068 62211 62357 62496 62639 62786 62925 63068 63214 63354 63496 63643 63782 63925 64071 64211 64354 64500 64639 64782 64929 65250 65357 65679 65786 66107 66214 66536 66643 66964 67071 67393 67500 67821 67928 68250 68357 68678 68786 69107 69214 69536 69643 69964 70071 70393 70500 70928 71357 72643 73393 73500 73821 73928 74678 74786 75107 75214 75964 76071 76393 76500 76821 76928 77250 77357 77678 77786 77925 78068 78214 78353 78496 78643 79071 79211 79353 79500 79639 79782 79928 80357 80496 80639 80786 80925 81068 81214 81643 81782 81925 82071 82211 82353 82500 82928 83068 83211 83357 83496 83639 83786 84353 84496 84643 84782 84925 85071 85211 85353 85639 85782 85928 86068 86211 86357 86496 86639 86925 87068 87214 87353 87496 87643 87782 87925 88211 88353 88500 88639 88782 88928 89068 89211 89357 89496 89639 89786 89925 90068 90214 90353 90496 90643 90964 91071 91393 91500 91821 91928 92678 92786 93107 93214 93536 93643 93964 94071 94393 94500 94639 94782 94928 95068 95211 95357 95496 95639 95786 96536 96643 96782 96925 97071 97639 97782 97928 98068 98211 98357 98678 98786 99107 99214 99536 99643 99782 99925 100071 100211 100353 100500 100639 100782 100928 101068 101211 101357 101496 101639 101786 101925 102068 102214 102353 102496 102643 102782 102925 103071 103211 103353 103500 104786 105353 105496 105643 105782 105925 106071 106393 106500 106821 106928 107250 107357 107496 107639 107786 107925 108068 108214 108353 108496 108643 109928 110068 110211 110357 110496 110639 110786 110925 111068 111214 111536 111643 112071 112500 113786 114536 114643 114964 115071 115821 115928 116250 116357 117107 117214 117536 117643 117964 118071 118393 118500 118821 118928 119068 119211 119357 119496 119639 119786 120214 120353 120496 120643 120782 120925 121071 121500 121639 121782 121928 122068 122211 122357 122786 122925 123068 123214 123353 123496 123643 124071 124211 124353 124500 124639 124782 124928 125496 125639 125786 125925 126068 126214 126353 126496 126782 126925 127071 127211 127353 127500 127639 127782 128068 128211 128357 128496 128639 128786 128925 129068 129353 129496 129643 129782 129925 130071 130211 130353 130500 130639 130782 130928 131068 131211 131357 131496 131639 131786 132107 132214 132536 132643 132964 133071 133821 133928 134250 134357 134678 134786 135107 135214 135536 135643 135782 135925 136071 136211 136353 136500 136639 136782 136928 137678 137786 137925 138068 138214 138782 138925 139071 139211 139353 139500 139821 139928 140250 140357 140678 140786 140925 141068 141214 141353 141496 141643 141782 141925 142071 142211 142353 142500 142639 142782 142928 143068 143211 143357 143496 143639 143786 143925 144068 144214 144353 144496 144643 145928 146496 146639 146786 146925 147068 147214 147536 147643 147964 148071 148393 148500 148639 148782 148928 149068 149211 149357 149496 149639 149786 151071 151211 151353 151500 151639 151782 151928 152068 152211 152357 152688 152798 153239 153811 155756)) :ldur (quote ((93) (279) (93) (589) (92) (278) (93) (590) (93) (279) (93) (279) (93) (278) (93) (279) (92) (125) (129) (125) (125) (128) (125) (125) (129) (125) (708) (93) (278) (93) (125) (129) (125) (125) (129) (125) (125) (128) (125) (707) (93) (279) (93) (125) (128) (125) (125) (129) (125) (125) (129) (125) (279) (93) (278) (93) (279) (93) (279) (93) (278) (93) (279) (92) (278) (93) (279) (93) (278) (93) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (375 375) (375 375) (93) (279) (93) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (278) (93) (279) (92) (278) (93) (279) (93) (278) (93) (279) (93) (279) (93) (278) (93) (279) (92) (278) (93) (279) (93) (278) (93) (279) (93) (375) (375) (804) (589) (93) (279) (93) (589) (92) (278) (93) (590) (93) (279) (93) (279) (93) (278) (93) (279) (92) (125) (129) (125) (125) (128) (125) (125) (129) (125) (708) (93) (278) (93) (125) (129) (125) (125) (129) (125) (125) (128) (125) (707) (93) (279) (93) (125) (128) (125) (125) (129) (125) (125) (129) (125) (279) (93) (278) (93) (279) (93) (279) (93) (278) (93) (279) (92) (278) (93) (279) (93) (278) (93) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (375 375) (375 375) (93) (279) (93) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (278) (93) (279) (92) (278) (93) (279) (92) (278) (93) (279) (93) (278) (93) (279) (93) (279) (93) (278) (93) (279) (92) (278) (93) (279) (93) (375) (376) (804) (589) (93) (278) (93) (590) (93) (278) (93) (590) (93) (279) (93) (278) (93) (279) (93) (279) (93) (125) (128) (125) (125) (129) (125) (185) (125) (128) (125) (125) (129) (125) (186) (125) (129) (125) (125) (128) (125) (186) (125) (129) (125) (125) (128) (125) (186) (125) (128) (125) (125) (129) (125) (185) (129) (125) (125) (129) (125) (125) (128) (272) (129) (125) (125) (128) (125) (125) (129) (272) (128) (125) (125) (129) (125) (125) (129) (271) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (278) (93) (279) (93) (278) (93) (590) (93) (278) (93) (279) (92) (278) (93) (279) (93) (125) (129) (125) (125) (128) (125) (125) (129) (125) (375) (92) (125) (129) (125) (554) (129) (125) (125) (128) (125) (279) (93) (278) (93) (279) (92) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (375 375) (375 553) (129) (125) (125) (129) (125) (279) (93) (278) (93) (279) (93) (125) (129) (125) (125) (128) (125) (125) (129) (125) (375) (125) (128) (125) (125) (129) (125) (125) (128) (125) (279) (92) (375) (375) (803) (589) (92) (278) (93) (590) (93) (279) (93) (589) (93) (279) (92) (278) (93) (279) (93) (278) (93) (125) (128) (125) (125) (129) (125) (185) (125) (129) (125) (125) (129) (125) (186) (125) (129) (125) (125) (128) (125) (186) (125) (128) (125) (125) (129) (125) (185) (125) (128) (125) (125) (129) (125) (186) (129) (125) (125) (128) (125) (125) (129) (272) (129) (125) (125) (128) (125) (125) (129) (271) (128) (125) (125) (129) (125) (125) (128) (271) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (278) (93) (279) (92) (278) (93) (590) (93) (279) (93) (279) (93) (278) (93) (279) (92) (125) (129) (125) (125) (128) (125) (125) (129) (125) (375) (93) (125) (128) (125) (554) (129) (125) (125) (128) (125) (278) (93) (279) (93) (279) (93) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (375 375) (375 554) (129) (125) (125) (128) (125) (279) (92) (278) (93) (279) (93) (125) (129) (125) (125) (128) (125) (125) (129) (125) (375) (125) (128) (125) (125) (129) (125) (125) (128) (125) (286) (95) (386) (500) (1945))) :lvel (quote ((80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80 80) (80 80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80 80) (80 80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (88) (88) (88) (86) (90) (90) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80 80) (80 80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (90) (90) (90) (88) (88) (88) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80 80) (80 80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80) (80))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2 2) (2 2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2 2) (2 2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2 2) (2 2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2 2) (2 2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0 0 0) (0 0 0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0 0 0) (0 0 0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 2 24 (list (quote g) (quote g)) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1 1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :midi-player) 1 nil 1000 0 (om-make-point 370 280) (om-make-point 400 20) 0 1 (quote :normal) (quote t) nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FIRST" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 1097 344) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "var6c2.mid" (quote midifile) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil))) (om-make-point 976 82) (om-make-point 50 72) (let ((newobj (load-midi (om-make-pathname :directory (quote (:absolute "home" "andersvi" "Musikk" "MIDIFILER" "BACH" "bach" "gold")) :device nil :host nil :name "var6c2" :type "mid")))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "var6c2.mid") (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (outport player deltapict zoom obj-mode cmnpref notechancolor? grillestep mode winsize winpos show-stems scale)) (list 0 (quote :midi-player) (om-make-point 0 0) 1 0 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0 (om-make-point 370 280) (om-make-point 10 40) (quote t) nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 896 222) (om-make-point 130 90) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8100) (7900) (7800) (7600) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6000) (5900) (5700) (5900) (5700) (6000) (5900) (5700) (5500) (5700) (6900) (6700) (6600) (6400) (6200) (6100) (6400) (6900) (7100) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6100) (6400) (6200) (6100) (6200) (6000) (5900) (5700) (5500) (5400) (5500) (8100) (7900) (7800) (7600) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6000) (5900) (5700) (5900) (5700) (6000) (5900) (5700) (5500) (5700) (6900) (6700) (6600) (6400) (6200) (6100) (6400) (6900) (7100) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6100) (6400) (6200) (6100) (6200) (8300) (8100) (7900) (7800) (7600) (7500) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6300) (6600) (6400) (6300) (6400) (6200) (6000) (5900) (5700) (5600) (5700) (6200) (5900) (6000) (5700) (6000) (6400) (6600) (6300) (6400) (6000) (6400) (6700) (6900) (6700) (6600) (6900) (6700) (6600) (6700) (6600) (6400) (6200) (6000) (5900) (5700) (8300) (8100) (7900) (7800) (7600) (7500) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6300) (6600) (6400) (6300) (6400) (6200) (6000) (5900) (5700) (5600) (5700) (6200) (5900) (6000) (5700) (6000) (6400) (6600) (6300) (6400) (6000) (6400) (6700) (6900) (6700) (6600) (6900) (6700) (6600) (6700))) :lonset (quote (792 1792 1917 2042 2167 2292 3292 3417 3542 3667 3792 4792 4917 5042 5167 5292 6167 6292 6417 6542 6667 6792 7042 7792 7917 8042 8167 8292 8417 8542 8667 8792 9292 9417 9542 9667 9792 10667 10792 10917 11042 11167 11292 11417 11542 11667 11792 11917 12042 12792 13792 13917 14042 14167 14292 15292 15417 15542 15667 15792 16792 16917 17042 17167 17292 18167 18292 18417 18542 18667 18792 19042 19792 19917 20042 20167 20292 20417 20542 20667 20792 21292 21417 21542 21667 21792 22667 22792 22917 23042 23167 23292 24792 25792 25917 26042 26167 26292 26542 27292 27417 27542 27667 27792 28667 28792 28917 29042 29167 29292 29417 29542 29667 29792 29917 30042 30792 31667 31792 31917 32042 32167 32292 33167 33292 33417 33542 33667 33792 34667 34792 34917 35042 35167 35292 35417 35542 35667 35792 35917 36042 36792 37792 37917 38042 38167 38292 38542 39292 39417 39542 39667 39792 40667 40792 40917 41042 41167 41292 41417 41542 41667 41792 41917 42042 42792 43667 43792 43917 44042 44167 44292 45167 45292 45417 45542 45667 45792 46667 46792 46917 47042 47167 47292 48042)) :ldur (quote ((996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (246) (746) (121) (125) (125) (121) (121) (121) (121) (121) (496) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (246) (996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (246) (746) (121) (125) (125) (121) (121) (121) (121) (121) (496) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (750) (996) (121) (121) (121) (121) (246) (746) (121) (121) (121) (121) (871) (125) (125) (125) (125) (121) (121) (121) (121) (121) (121) (121) (496) (750) (121) (121) (125) (125) (125) (871) (121) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (246) (996) (121) (121) (121) (121) (246) (746) (121) (121) (121) (121) (871) (125) (125) (125) (125) (121) (121) (121) (121) (121) (121) (121) (496) (750) (121) (121) (125) (125) (125) (871) (121) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (750))) :lvel (quote ((111) (107) (112) (102) (97) (109) (119) (104) (100) (110) (109) (107) (104) (101) (107) (121) (102) (102) (107) (101) (97) (115) (124) (106) (100) (100) (111) (112) (111) (89) (111) (113) (97) (102) (104) (110) (111) (100) (104) (101) (98) (106) (109) (101) (85) (98) (90) (99) (97) (111) (107) (112) (102) (97) (109) (119) (104) (100) (110) (109) (107) (104) (101) (107) (121) (102) (102) (107) (101) (97) (115) (124) (106) (100) (100) (111) (112) (111) (89) (111) (113) (97) (102) (104) (110) (111) (100) (104) (101) (98) (106) (109) (115) (111) (93) (110) (107) (119) (104) (106) (100) (93) (100) (123) (107) (100) (106) (102) (102) (113) (104) (104) (96) (102) (97) (104) (89) (71) (93) (54) (104) (111) (108) (108) (109) (95) (109) (104) (117) (98) (94) (96) (95) (97) (101) (101) (96) (91) (100) (95) (101) (115) (111) (93) (110) (107) (119) (104) (106) (100) (93) (100) (123) (107) (100) (106) (102) (102) (113) (104) (104) (96) (102) (97) (104) (89) (71) (93) (54) (104) (111) (108) (108) (109) (95) (109) (104) (117) (98) (94) (96) (95) (97) (101))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7900) (7800) (7600) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6000) (5900) (5700) (5500) (5700) (5500) (5900) (5700) (5500) (5400) (5500) (6700) (6600) (6400) (6200) (6000) (5900) (6200) (6700) (6900) (7000) (6900) (6700) (6600) (6400) (6200) (6100) (5900) (6200) (6100) (5900) (6100) (5900) (5700) (5500) (5400) (5200) (5400) (7900) (7800) (7600) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6000) (5900) (5700) (5500) (5700) (5500) (5900) (5700) (5500) (5400) (5500) (6700) (6600) (6400) (6200) (6000) (5900) (6200) (6700) (6900) (7000) (6900) (6700) (6600) (6400) (6200) (6100) (5900) (6200) (6100) (5900) (6100) (5900) (5700) (5500) (5400) (5200) (5400) (8100) (7900) (7800) (7600) (7400) (7300) (7200) (7100) (6900) (6800) (6600) (6400) (6300) (6100) (6400) (6300) (6100) (6300) (6100) (5900) (5700) (5500) (5400) (5500) (6000) (5700) (5900) (5500) (5900) (6200) (6400) (6100) (6200) (5900) (6200) (6600) (6700) (6600) (6400) (6700) (6600) (6400) (6600) (6400) (6200) (6000) (5900) (5700) (5500) (8100) (7900) (7800) (7600) (7400) (7300) (7200) (7100) (6900) (6800) (6600) (6400) (6300) (6100) (6400) (6300) (6100) (6300) (6100) (5900) (5700) (5500) (5400) (5500) (6000) (5700) (5900) (5500) (5900) (6200) (6400) (6100) (6200) (5900) (6200) (6600) (6700) (6600) (6400) (6700) (6600) (6400) (6600) (6400) (6200) (6000) (5900) (5700) (5900))) :lonset (quote (42 1042 1167 1292 1417 1542 2542 2667 2792 2917 3042 4042 4167 4292 4417 4542 5417 5542 5667 5792 5917 6042 6292 7042 7167 7292 7417 7542 7667 7792 7917 8042 8542 8667 8792 8917 9042 9917 10042 10167 10292 10417 10542 10667 10792 10917 11042 11167 11292 12042 13042 13167 13292 13417 13542 14542 14667 14792 14917 15042 16042 16167 16292 16417 16542 17417 17542 17667 17792 17917 18042 18292 19042 19167 19292 19417 19542 19667 19792 19917 20042 20542 20667 20792 20917 21042 21917 22042 22167 22292 22417 22542 22667 22792 22917 23042 23167 23292 24042 25042 25167 25292 25417 25542 25792 26542 26667 26792 26917 27042 27917 28042 28167 28292 28417 28542 28667 28792 28917 29042 29167 29292 30042 30917 31042 31167 31292 31417 31542 32417 32542 32667 32792 32917 33042 33917 34042 34167 34292 34417 34542 34667 34792 34917 35042 35167 35292 36042 37042 37167 37292 37417 37542 37792 38542 38667 38792 38917 39042 39917 40042 40167 40292 40417 40542 40667 40792 40917 41042 41167 41292 42042 42917 43042 43167 43292 43417 43542 44417 44542 44667 44792 44917 45042 45917 46042 46167 46292 46417 46542 46667 46792 46917 47042 47167 47292 48042)) :ldur (quote ((996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (246) (746) (121) (121) (121) (121) (121) (121) (121) (121) (496) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (250) (1000) (121) (121) (121) (121) (996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (246) (746) (121) (121) (121) (121) (121) (121) (121) (121) (496) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (750) (1000) (121) (121) (121) (121) (246) (746) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (250) (871) (121) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (250) (1000) (121) (121) (121) (121) (246) (746) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (250) (871) (121) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (750))) :lvel (quote ((117) (119) (106) (106) (102) (115) (107) (102) (119) (119) (117) (115) (104) (96) (95) (111) (88) (104) (96) (98) (106) (104) (123) (110) (106) (98) (102) (106) (101) (71) (98) (123) (100) (97) (104) (101) (107) (110) (90) (109) (115) (102) (119) (111) (104) (97) (110) (97) (123) (102) (119) (106) (106) (102) (115) (107) (102) (119) (119) (117) (115) (104) (96) (95) (111) (88) (104) (96) (98) (106) (104) (123) (110) (106) (98) (102) (106) (101) (71) (98) (123) (100) (97) (104) (101) (107) (110) (90) (109) (115) (102) (119) (111) (104) (97) (110) (97) (123) (123) (95) (90) (86) (82) (106) (115) (98) (81) (93) (99) (104) (67) (108) (117) (110) (99) (108) (102) (74) (97) (96) (102) (100) (115) (95) (106) (96) (106) (104) (111) (101) (106) (100) (102) (99) (111) (112) (102) (102) (110) (98) (104) (102) (100) (106) (101) (98) (106) (106) (95) (90) (86) (82) (106) (115) (98) (81) (93) (99) (104) (67) (108) (117) (110) (99) (108) (102) (74) (97) (96) (102) (100) (115) (95) (106) (96) (106) (104) (111) (101) (106) (100) (102) (99) (111) (112) (102) (102) (110) (98) (104) (102) (100) (106) (101) (98) (106))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((4300) (4200) (4300) (4500) (4700) (4300) (5000) (4800) (5000) (5200) (5400) (5000) (5500) (5400) (5200) (5400) (5500) (5200) (5700) (5500) (5400) (5500) (5700) (5400) (5900) (5700) (5500) (5700) (5900) (5500) (6000) (5900) (5700) (5500) (5400) (5200) (5400) (5200) (5400) (5000) (5200) (5400) (5500) (5200) (5000) (4800) (4700) (4500) (4300) (5400) (5200) (5000) (4800) (4700) (4900) (4500) (5000) (5200) (5400) (5000) (5500) (5400) (5200) (5400) (5500) (5200) (5700) (5500) (5400) (5500) (5700) (5400) (5900) (5700) (5500) (5700) (5900) (5700) (5600) (4400) (4500) (3300) (3800) (5000) (4800) (4700) (4500) (4300) (4200) (4300) (4500) (4700) (4300) (5000) (4800) (5000) (5200) (5400) (5000) (5500) (5400) (5200) (5400) (5500) (5200) (5700) (5500) (5400) (5500) (5700) (5400) (5900) (5700) (5500) (5700) (5900) (5500) (6000) (5900) (5700) (5500) (5400) (5200) (5400) (5200) (5400) (5000) (5200) (5400) (5500) (5200) (5000) (4800) (4700) (4500) (4300) (5400) (5200) (5000) (4800) (4700) (4900) (4500) (5000) (5200) (5400) (5000) (5500) (5400) (5200) (5400) (5500) (5200) (5700) (5500) (5400) (5500) (5700) (5400) (5900) (5700) (5500) (5700) (5900) (5700) (5600) (4400) (4500) (3300) (3800) (4200) (4500) (5000) (4900) (5000) (5200) (5400) (5000) (5500) (5400) (5200) (5400) (5500) (5200) (5700) (5500) (5400) (5500) (5700) (5400) (5900) (5700) (5600) (5700) (5900) (5600) (6000) (5900) (5700) (5900) (6000) (5900) (5800) (4600) (4700) (3500) (4000) (5200) (5000) (4800) (4700) (4500) (4800) (5200) (5500) (5400) (5200) (5400) (4300) (5500) (4500) (5700) (4700) (5900) (4800) (4900) (3700) (4900) (5000) (3800) (5000) (4300) (5500) (5400) (5200) (5500) (5400) (5200) (5000) (5200) (5400) (5000) (5500) (5400) (5200) (5400) (5500) (5200) (5700) (5500) (5400) (5500) (5700) (5400) (5900) (5700) (5600) (5700) (5900) (5600) (6000) (5900) (5700) (5900) (6000) (5900) (5800) (4600) (4700) (3500) (4000) (5200) (5000) (4800) (4700) (4500) (4800) (5200) (5500) (5400) (5200) (5400) (4300) (5500) (4500) (5700) (4700) (5900) (4800) (4900) (3700) (4900) (5000) (3800) (5000) (4300) (5000) (5500))) :lonset (quote (42 167 292 417 542 667 792 917 1042 1167 1292 1417 1542 1667 1792 1917 2042 2167 2292 2417 2542 2667 2792 2917 3042 3167 3292 3417 3542 3667 3792 3917 4042 4167 4292 4417 4542 4667 4792 4917 5042 5167 5292 5417 5542 5667 5792 5917 6042 6167 6292 6417 6542 6667 6792 6917 7042 7167 7292 7417 7542 7667 7792 7917 8042 8167 8292 8417 8542 8667 8792 8917 9042 9167 9292 9417 9542 9667 9792 10042 10542 10792 11292 11542 11667 11792 11917 12042 12167 12292 12417 12542 12667 12792 12917 13042 13167 13292 13417 13542 13667 13792 13917 14042 14167 14292 14417 14542 14667 14792 14917 15042 15167 15292 15417 15542 15667 15792 15917 16042 16167 16292 16417 16542 16667 16792 16917 17042 17167 17292 17417 17542 17667 17792 17917 18042 18167 18292 18417 18542 18667 18792 18917 19042 19167 19292 19417 19542 19667 19792 19917 20042 20167 20292 20417 20542 20667 20792 20917 21042 21167 21292 21417 21542 21667 21792 22042 22542 22792 23292 23542 23792 24042 24167 24292 24417 24542 24667 24792 24917 25042 25167 25292 25417 25542 25667 25792 25917 26042 26167 26292 26417 26542 26667 26792 26917 27042 27167 27292 27417 27542 27667 27792 28042 28542 28792 29292 29542 29667 29792 29917 30042 30167 30292 30417 30542 30667 30792 31042 31542 31792 32292 32542 33042 33292 33792 34042 34292 34542 34792 35042 35292 35542 35667 35792 35917 36042 36167 36292 36417 36542 36667 36792 36917 37042 37167 37292 37417 37542 37667 37792 37917 38042 38167 38292 38417 38542 38667 38792 38917 39042 39167 39292 39417 39542 39667 39792 40042 40542 40792 41292 41542 41667 41792 41917 42042 42167 42292 42417 42542 42667 42792 43042 43542 43792 44292 44542 45042 45292 45792 46042 46292 46542 46792 47042 47292 47542 47792 48038)) :ldur (quotelvel (quote ((101) (110) (102) (100) (106) (92) (104) (104) (106) (96) (112) (97) (109) (119) (107) (101) (97) (95) (101) (97) (110) (98) (97) (115) (104) (104) (97) (95) (107) (98) (88) (91) (96) (85) (102) (91) (110) (85) (101) (97) (101) (102) (96) (97) (96) (104) (107) (101) (111) (110) (90) (104) (97) (104) (104) (100) (95) (98) (104) (93) (113) (101) (100) (101) (102) (107) (109) (100) (112) (101) (96) (97) (106) (92) (93) (93) (96) (97) (123) (127) (109) (109) (102) (102) (102) (102) (102) (102) (102) (102) (102) (102) (102) (104) (104) (106) (96) (112) (97) (109) (119) (107) (101) (97) (95) (101) (97) (110) (98) (97) (115) (104) (104) (97) (95) (107) (98) (88) (91) (96) (85) (102) (91) (110) (85) (101) (97) (101) (102) (96) (97) (96) (104) (107) (101) (111) (110) (90) (104) (97) (104) (104) (100) (95) (98) (104) (93) (113) (101) (100) (101) (102) (107) (109) (100) (112) (101) (96) (97) (106) (92) (93) (93) (96) (97) (123) (127) (109) (109) (102) (102) (102) (102) (102) (102) (102) (102) (102) (102) (97) (90) (94) (95) (78) (96) (88) (90) (91) (91) (96) (97) (93) (101) (90) (97) (90) (101) (95) (88) (92) (96) (92) (115) (125) (117) (121) (115) (109) (95) (93) (93) (84) (84) (90) (101) (94) (97) (102) (109) (109) (109) (121) (109) (123) (111) (123) (117) (117) (106) (109) (102) (100) (104) (102) (100) (101) (101) (107) (93) (97) (108) (96) (102) (97) (90) (94) (95) (78) (96) (88) (90) (91) (91) (96) (97) (93) (101) (90) (97) (90) (101) (95) (88) (92) (96) (92) (115) (125) (117) (121) (115) (109) (95) (93) (93) (84) (84) (90) (101) (94) (97) (102) (109) (109) (109) (121) (109) (123) (111) (123) (117) (117) (106) (109) (102) (100) (100) (100))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 2 24 (list (quote g) (quote g) (quote g)) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1 1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :midi-player) 1 nil 1000 0 (om-make-point 370 280) (om-make-point 400 20) 0 1 (quote :normal) (quote t) nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FIRST" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 956 342) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "var2.mid" (quote midifile) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil))) (om-make-point 837 85) (om-make-point 50 72) (let ((newobj (load-midi (om-make-pathname :directory (quote (:absolute "home" "andersvi" "Musikk" "MIDIFILER" "BACH" "bach" "gold")) :device nil :host nil :name "var2" :type "mid")))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "var2.mid") (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (outport player deltapict zoom obj-mode cmnpref notechancolor? grillestep mode winsize winpos show-stems scale)) (list 0 (quote :midi-player) (om-make-point 0 0) 1 0 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0 (om-make-point 370 280) (om-make-point 10 40) (quote t) nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 757 225) (om-make-point 130 90) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6700) (7900) (8100) (7900) (7800) (7900) (8100) (7400) (7200) (7100) (6900) (7100) (7200) (7100) (6900) (7100) (6700) (7600) (7400) (7200) (7800) (8100) (7100) (7900) (7900) (7800) (8300) (8100) (7400) (7600) (7400) (7200) (7100) (7600) (7100) (7400) (7300) (7400) (7600) (7300) (6900) (7400) (6700) (6600) (6700) (6400) (6900) (6700) (6600) (6400) (6200) (6400) (6600) (6700) (6900) (7100) (7400) (7300) (7400) (7300) (7400) (6900) (6700) (6600) (6700) (6400) (6600) (6700) (7900) (8100) (7900) (7800) (7900) (8100) (7400) (7200) (7100) (6900) (7100) (7200) (7100) (6900) (7100) (6700) (7600) (7400) (7200) (7800) (8100) (7900) (7900) (7800) (8300) (8100) (7400) (7600) (7400) (7200) (7100) (7600) (7100) (7400) (7300) (7400) (7600) (7300) (6900) (7400) (6700) (6600) (6700) (6400) (6900) (6700) (6600) (6400) (6200) (6400) (6600) (6700) (6900) (7100) (7400) (7300) (7400) (7300) (7400) (6900) (6700) (6600) (6700) (6400) (6600))) :lonset (quote (4031 5031 6386 6548 6720 6881 7042 8364 8542 8709 8859 9042 9375 9542 9714 9875 10042 10375 10709 11042 11375 11709 12042 12709 13042 13709 14720 15025 15709 16209 16381 16531 16698 17025 17386 17709 18042 18392 18709 19375 19709 20709 21042 22375 22709 23042 23375 23542 23709 23875 24042 24375 24542 24709 24875 25042 25375 25709 26042 27375 28042 29209 29375 29542 29709 29875 30042 36031 37031 38386 38548 38720 38881 39042 40364 40542 40709 40859 41042 41375 41542 41714 41875 42042 42375 42709 43042 43375 43709 44709 45042 45709 46720 47025 47709 48209 48381 48531 48698 49025 49386 49709 50042 50392 50709 51375 51709 52709 53042 54375 54709 55042 55375 55542 55709 55875 56042 56375 56542 56709 56875 57042 57375 57709 58042 59375 60042 61209 61375 61542 61709 61875 62042 64042)) :ldur (quote ((1022) (1394) (195) (183) (189) (183) (333) (189) (183) (144) (194) (350) (189) (200) (178) (178) (333) (334) (333) (333) (334) (333) (667) (333) (639) (333) (328) (695) (511) (177) (167) (167) (355) (356) (356) (355) (356) (317) (689) (334) (333) (333) (1000) (334) (333) (394) (167) (167) (166) (167) (333) (167) (167) (166) (167) (333) (334) (333) (1000) (334) (1000) (166) (167) (167) (166) (167) (2000) (1022) (1394) (195) (183) (189) (183) (333) (189) (183) (144) (194) (350) (189) (200) (178) (178) (333) (334) (333) (333) (334) (333) (333) (639) (333) (328) (695) (511) (177) (167) (167) (355) (356) (356) (355) (356) (317) (689) (334) (333) (333) (1333) (334) (333) (394) (167) (167) (166) (167) (333) (167) (167) (166) (167) (333) (334) (333) (1333) (334) (1000) (166) (167) (167) (166) (167) (2000))) :lvel (quote ((101) (102) (100) (86) (90) (88) (97) (96) (90) (75) (58) (81) (86) (97) (78) (73) (90) (90) (90) (90) (88) (88) (102) (91) (101) (85) (101) (100) (100) (88) (77) (77) (86) (92) (84) (91) (90) (93) (95) (92) (81) (96) (96) (88) (88) (85) (76) (84) (63) (61) (61) (61) (61) (61) (61) (61) (61) (61) (95) (67) (84) (84) (84) (84) (84) (84) (84) (101) (102) (100) (86) (90) (88) (97) (96) (90) (75) (58) (81) (86) (97) (78) (73) (90) (90) (90) (90) (88) (102) (91) (101) (85) (101) (100) (100) (88) (77) (77) (86) (92) (84) (91) (90) (93) (95) (92) (81) (96) (96) (88) (88) (85) (76) (84) (63) (61) (61) (61) (61) (61) (61) (61) (61) (61) (95) (67) (84) (84) (84) (84) (84) (84) (84))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7100) (7200) (7400) (7200) (7400) (7600) (6900) (7100) (7200) (7100) (7200) (7400) (7100) (7200) (7400) (7200) (7400) (7600) (6900) (7100) (7200) (7100) (7200) (7400) (6700) (7900) (8100) (7900) (7800) (7900) (8100) (7400) (7200) (7100) (6900) (7100) (7200) (7100) (6900) (7100) (6700) (7600) (7400) (7200) (7800) (8100) (7100) (7900) (7900) (7800) (8300) (8100) (7400) (7600) (7400) (7200) (7100) (7600) (7100) (7400) (7300) (7400) (7600) (7300) (6900) (7400) (6700) (6600) (6700) (6400) (6900) (6700) (6600) (6400) (6200) (6400) (6600) (6700) (6900) (7100) (7400) (7300) (7400) (7100) (7200) (7400) (7200) (7400) (7600) (6900) (7100) (7200) (7100) (7200) (7400) (7100) (7200) (7400) (7200) (7400) (7600) (6900) (7100) (7200) (7100) (7200) (7400) (6700) (7900) (8100) (7900) (7800) (7900) (8100) (7400) (7200) (7100) (6900) (7100) (7200) (7100) (6900) (7100) (6700) (7600) (7400) (7200) (7800) (8100) (7100) (7900) (7900) (7800) (8300) (8100) (7400) (7600) (7400) (7200) (7100) (7600) (7100) (7400) (7300) (7400) (7600) (7300) (6900) (7400) (6700) (6600) (6700) (6400) (6900) (6700) (6600) (6400) (6200) (6400) (6600) (6700) (6900) (7100) (7400) (7300) (7400))) :lonset (quote (42 1198 1364 1525 1686 1859 2042 3198 3364 3542 3698 3875 4042 5209 5375 5542 5709 5875 6042 7209 7375 7542 7709 7875 8042 9042 10375 10542 10709 10875 11042 12375 12542 12709 12875 13042 13375 13542 13709 13875 14042 14375 14709 15042 15375 15709 16042 16709 17042 17709 18709 19042 19709 20209 20375 20542 20709 21042 21375 21709 22042 22375 22709 23375 23709 24709 25042 26375 26709 27042 27375 27542 27709 27875 28042 28375 28542 28709 28875 29042 29375 29709 30042 32048 33192 33359 33520 33692 33859 34042 35198 35364 35520 35692 35848 36042 37209 37375 37542 37709 37875 38042 39209 39375 39542 39709 39875 40042 41042 42375 42542 42709 42875 43042 44375 44542 44709 44875 45042 45375 45542 45709 45875 46042 46375 46709 47042 47375 47709 48042 48709 49042 49709 50709 51042 51709 52209 52375 52542 52709 53042 53375 53709 54042 54375 54709 55375 55709 56709 57042 58375 58709 59042 59375 59542 59709 59875 60042 60375 60542 60709 60875 61042 61375 61709 62042 64036)) :ldur (quote ((1161) (200) (178) (189) (195) (183) (1167) (200) (184) (178) (166) (167) (1161) (161) (161) (161) (161) (161) (1161) (161) (161) (161) (161) (161) (994) (1328) (161) (161) (161) (161) (994) (161) (161) (161) (161) (328) (161) (161) (161) (161) (328) (328) (327) (328) (328) (327) (661) (327) (661) (327) (327) (661) (494) (161) (161) (161) (327) (328) (328) (327) (328) (328) (661) (328) (327) (327) (1328) (328) (327) (328) (161) (161) (161) (161) (328) (161) (161) (161) (161) (328) (328) (327) (1994) (1150) (206) (189) (205) (200) (189) (1178) (194) (195) (200) (172) (205) (1161) (161) (161) (161) (161) (161) (1161) (161) (161) (161) (161) (161) (994) (1328) (161) (161) (161) (161) (994) (161) (161) (161) (161) (328) (161) (161) (161) (161) (328) (328) (327) (328) (328) (327) (661) (327) (661) (327) (327) (661) (494) (161) (161) (161) (327) (328) (328) (327) (328) (328) (661) (328) (327) (327) (1328) (328) (327) (328) (161) (161) (161) (161) (328) (161) (161) (161) (161) (328) (328) (327) (1994))) :lvel (quote ((121) (88) (81) (89) (83) (92) (93) (92) (97) (96) (96) (97) (121) (100) (93) (101) (96) (98) (111) (107) (93) (88) (98) (95) (107) (123) (101) (95) (99) (104) (107) (106) (107) (95) (89) (109) (107) (98) (86) (91) (107) (121) (92) (119) (115) (121) (84) (119) (77) (85) (124) (117) (100) (107) (98) (72) (109) (111) (107) (111) (108) (109) (104) (102) (117) (96) (96) (96) (96) (107) (100) (106) (97) (97) (109) (115) (92) (101) (91) (107) (101) (97) (115) (107) (92) (92) (97) (89) (101) (104) (98) (92) (93) (97) (98) (121) (100) (93) (101) (96) (98) (111) (107) (93) (88) (98) (95) (107) (123) (101) (95) (99) (104) (107) (106) (107) (95) (89) (109) (107) (98) (86) (91) (107) (121) (92) (119) (115) (121) (84) (119) (77) (85) (124) (117) (100) (107) (98) (72) (109) (111) (107) (111) (108) (109) (104) (102) (117) (96) (96) (96) (96) (107) (100) (106) (97) (97) (109) (115) (92) (101) (91) (107) (101) (97) (115))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((4300) (4700) (5000) (5500) (5900) (5200) (4200) (4500) (5000) (5400) (5700) (5000) (4000) (4300) (4700) (5200) (4700) (4900) (3800) (4200) (4500) (5000) (5400) (4500) (4700) (4500) (4700) (4800) (5000) (4300) (4500) (4700) (4800) (5000) (5200) (5000) (4800) (4700) (4800) (5200) (4200) (4500) (4300) (4200) (4000) (3800) (4300) (4200) (4300) (4500) (4700) (4800) (5000) (5200) (4500) (4700) (4800) (4500) (4700) (4500) (4300) (4200) (4300) (4200) (4000) (3800) (4000) (4200) (4300) (4200) (4300) (4500) (4300) (4200) (4000) (4200) (4300) (4000) (4200) (4300) (4500) (4300) (4500) (4700) (4500) (4300) (4200) (5400) (5500) (5400) (5200) (5400) (4700) (4500) (4700) (4800) (5000) (4700) (4900) (5000) (5200) (5000) (4900) (4700) (4500) (5200) (5000) (4900) (5000) (4700) (4900) (4500) (4700) (4900) (5000) (5200) (5400) (4700) (4900) (5000) (5200) (5400) (5500) (5400) (5200) (5000) (5200) (4600) (4700) (4900) (5000) (4900) (4700) (4500) (4300) (4200) (4300) (4700) (4500) (4300) (4200) (4500) (4300) (4200) (4000) (3800) (4300) (4000) (4500) (3800) (4200) (4500) (5000) (4500) (4200) (3800) (4300) (4700) (5000) (5500) (5900) (5200) (4200) (4500) (5000) (5400) (5700) (5000) (4000) (4300) (4700) (5200) (4700) (4900) (3800) (4200) (4500) (5000) (5400) (4500) (4700) (4500) (4700) (4800) (5000) (4300) (4500) (4700) (4800) (5000) (5200) (5000) (4800) (4700) (4800) (5200) (4200) (4500) (4300) (4200) (4000) (3800) (4300) (4200) (4300) (4500) (4700) (4800) (5000) (5200) (4500) (4700) (4800) (4500) (4700) (4500) (4300) (4200) (4300) (4200) (4000) (3800) (4000) (4200) (4300) (4200) (4300) (4500) (4300) (4200) (4000) (4200) (4300) (4000) (4200) (4300) (4500) (4300) (4500) (4700) (4500) (4300) (4200) (5400) (5500) (5400) (5200) (5400) (4700) (4500) (4700) (4800) (5000) (4700) (4900) (5000) (5200) (5000) (4900) (4700) (4500) (5200) (5000) (4900) (5000) (4700) (4900) (4500) (4700) (4900) (5000) (5200) (5400) (4700) (4900) (5000) (5200) (5400) (5500) (5400) (5200) (5000) (5200) (4600) (4700) (4900) (5000) (4900) (4700) (4500) (4300) (4200) (4300) (4700) (4500) (4300) (4200) (4500) (4300) (4200) (4000) (3800) (4300) (4000) (4500) (3800) (4200) (4500) (5000) (4500) (4200) (3800) (5000))) :lonset (quote (42 375 709 1042 1375 1709 2042 2375 2709 3042 3375 3709 4042 4375 4709 5042 5375 5709 6042 6375 6709 7042 7375 7709 8042 8209 8375 8542 8709 9209 9375 9542 9709 9875 10042 10209 10375 10542 10709 10875 11042 11209 11375 11542 11709 11875 12042 12209 12375 12542 12709 12875 13042 13209 13375 13542 13709 13875 14042 14209 14375 14542 14709 15209 15375 15542 15709 15875 16042 16209 16375 16542 16709 16875 17042 17209 17375 17542 17709 17875 18042 18209 18375 18542 18709 18875 19042 19209 19375 19542 19709 19875 20042 20209 20375 20542 20709 20875 21042 21209 21375 21542 21709 21875 22042 22209 22375 22542 22709 22875 23042 23209 23375 23542 23709 23875 24042 24209 24375 24542 24709 24875 25042 25209 25375 25542 25709 25875 26042 26209 26375 26542 26709 26875 27042 27209 27375 27542 27709 27875 28042 28209 28375 28542 28709 28875 29042 29375 29709 30042 30209 30375 30542 30709 30875 31042 32042 32375 32709 33042 33375 33709 34042 34375 34709 35042 35375 35709 36042 36375 36709 37042 37375 37709 38042 38375 38709 39042 39375 39709 40042 40209 40375 40542 40709 41209 41375 41542 41709 41875 42042 42209 42375 42542 42709 42875 43042 43209 43375 43542 43709 43875 44042 44209 44375 44542 44709 44875 45042 45209 45375 45542 45709 45875 46042 46209 46375 46542 46709 47209 47375 47542 47709 47875 48042 48209 48375 48542 48709 48875 49042 49209 49375 49542 49709 49875 50042 50209 50375 50542 50709 50875 51042 51209 51375 51542 51709 51875 52042 52209 52375 52542 52709 52875 53042 53209 53375 53542 53709 53875 54042 54209 54375 54542 54709 54875 55042 55209 55375 55542 55709 55875 56042 56209 56375 56542 56709 56875 57042 57209 57375 57542 57709 57875 58042 58209 58375 58542 58709 58875 59042 59209 59375 59542 59709 59875 60042 60209 60375 60542 60709 60875 61042 61375 61709 62042 62209 62375 62542 62709 62875 63042 64042 64370)) :ldur (quote ((328) (328) (327) (328) (328) (327) (328) (328) (327) (328) (328) (327) (328) (328) (327) (328) (328) (327) (328) (328) (327) (328) (328) (327) (161) (161) (161) (161) (494) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (166) (161) (161) (161) (161) (161) (161) (161) (161) (494) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (167) (166) (167) (167) (166) (167) (333) (328) (327) (161) (161) (161) (161) (161) (161) (989) (328) (328) (327) (328) (328) (327) (328) (328) (327) (328) (328) (327) (328) (328) (327) (333) (334) (333) (333) (334) (333) (333) (328) (333) (161) (161) (161) (161) (494) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (494) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (161) (166) (167) (333) (334) (333) (167) (166) (167) (167) (166) (167) (1000) (328))) :lvel (quote ((92) (95) (90) (84) (93) (98) (92) (97) (93) (99) (89) (85) (107) (101) (92) (97) (95) (99) (94) (66) (66) (94) (94) (94) (101) (88) (92) (86) (93) (88) (85) (89) (97) (88) (93) (88) (74) (74) (80) (97) (47) (85) (85) (101) (57) (82) (92) (65) (63) (84) (76) (88) (66) (100) (66) (91) (86) (78) (86) (89) (72) (97) (97) (90) (66) (76) (83) (81) (69) (85) (81) (89) (75) (77) (78) (81) (65) (73) (80) (71) (86) (92) (84) (80) (76) (77) (86) (86) (89) (92) (70) (88) (96) (72) (77) (90) (82) (58) (85) (83) (96) (83) (84) (85) (76) (92) (76) (81) (80) (83) (79) (72) (85) (79) (80) (88) (84) (75) (72) (59) (86) (77) (83) (81) (73) (83) (82) (82) (100) (76) (72) (81) (81) (83) (76) (75) (83) (92) (82) (86) (92) (90) (84) (84) (71) (83) (107) (95) (101) (95) (80) (49) (84) (84) (80) (78) (89) (96) (91) (95) (88) (84) (104) (97) (102) (101) (98) (97) (75) (92) (95) (93) (92) (106) (89) (94) (90) (82) (93) (92) (98) (96) (88) (66) (106) (86) (86) (89) (91) (83) (93) (84) (75) (73) (67) (90) (90) (92) (74) (96) (67) (88) (100) (81) (80) (77) (86) (84) (97) (76) (84) (83) (88) (75) (88) (83) (69) (81) (90) (92) (76) (84) (91) (85) (80) (88) (80) (78) (78) (88) (77) (71) (77) (71) (75) (70) (89) (80) (84) (75) (68) (78) (92) (86) (82) (94) (69) (88) (95) (73) (80) (80) (77) (77) (79) (80) (85) (78) (77) (80) (80) (93) (84) (77) (74) (80) (85) (49) (85) (85) (80) (95) (97) (93) (88) (68) (88) (76) (81) (97) (78) (63) (70) (84) (91) (84) (76) (89) (85) (74) (86) (90) (83) (91) (83) (80) (92) (89) (80) (84) (61) (85) (97) (86) (91) (92) (89) (61) (81) (84) (82) (69) (82))) :loffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 2 24 (list (quote g) (quote g) (quote g)) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1 1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :midi-player) 1 nil 1000 0 (om-make-point 370 280) (om-make-point 400 20) 0 1 (quote :normal) (quote t) nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FIRST" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 817 345) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LIST" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote a)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote b)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote c)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote d)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote e)))) (om-make-point 183 425) (om-make-point 355 43) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FIRST" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 680 340) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 620 220) (om-make-point 130 90) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((4200 4300) (4300) (7900 8100) (7900 7800) (7900 8100) (7900 8100) (7900 8100) (7900 8100) (7900 8100) (7900 7800) (8100) (5200 5400) (5400) (5700) (5500) (5400) (5200) (7600) (7400) (7300) (7400) (7600) (6600) (4800 5000) (4800 5000) (5000 4800) (5000 4800) (5000 4800) (4800 4800) (4800 5000) (4800 4700) (4700) (4300) (4700) (5000) (5500) (4700) (4800) (5200) (5500) (6000) (5200) (5500) (5400) (5700) (5000) (5400) (5700) (6200) (5900) (5500) (5900) (6200) (6700) (8100 8300) (8300) (7400 7600) (7600) (6700 6900) (6900) (7900 8100) (8100) (7300 7400) (7400) (6600 6700) (6700) (7800 7900) (7900) (6900 7100) (7100) (6200 6400) (6400) (5400 5500) (5500) (4700 4900) (4900) (4200 4300) (4300) (6400 6200) (6900 6600) (6400 6600) (6200) (6400 6200) (6900 6600) (6400 6600) (6200) (6400 6200) (6900 6600) (6400 6600) (7100 6200) (5300) (5200) (6200 6400) (6400) (6700 6900) (6900) (6100 6200) (6200) (6600 6700) (6700) (5900 6100) (6100) (6400 6600) (6600) (6200) (6100) (6200) (6400 6600) (6200) (6700 6900) (6600) (7400) (7800) (8100) (8600) (8100) (7800) (8100) (7400) (7800) (8100) (7800) (7900) (8100) (7400) (7900) (8300) (7900) (7400) (7900) (7100) (7400) (7900) (7100) (7200) (7400) (6700) (7200) (7600) (7200) (6900) (7200) (6600) (6900) (7200) (6600) (6700) (6900) (6300) (6600) (7100) (6600) (6300) (6600) (5900) (6300) (6600) (6300) (6400) (6600) (5900) (6400) (6700) (6400) (5900) (6400) (5500) (5900) (6400) (6300) (6400) (6700) (6000) (6500) (6900) (6500) (6000) (6500) (5700) (6000) (6500) (6400) (6500) (6900) (6300) (6600) (6900) (6600) (6300) (6600) (5900) (6300) (5400) (5700) (5500) (5400) (5500) (5900) (6400) (5900) (5500) (5900) (5200) (5400) (5500) (5200) (5500) (5900) (6400) (5000 5200) (5200) (5900 6000) (6000) (6700 6900) (6900) (4800 5000) (5000) (5700 5900) (5900) (6600 6700) (6700) (4700 4800) (4800) (5500 5700) (5700) (6400 6600) (6600) (7200 7400) (7400) (7800 7900) (7900) (8100 8300) (8300) (6200) (6500) (6500 6400) (7200 6700) (6500 6700) (6400) (6700 6600) (7200 6900) (6700 6900) (6600) (6900 6700) (7300 7000) (6900 7000) (7400 6700) (7100 7200) (7200) (6900 7100) (7100) (6900 7000) (7000) (6700 6900) (6900) (7200 7400) (7400) (6600 6700) (6900 6700) (7200 7100) (7200 7400) (6900 7100) (6700) (7100) (6200) (6700) (5500))) :lonset (quote (42 200 674 831 989 1147 1305 1463 1621 1779 1937 2568 2726 3358 3516 3674 3831 4463 4779 5095 5410 5568 5726 6358 6516 6674 6831 6989 7147 7305 7463 7621 7937 8253 8568 8884 9200 9516 9831 10147 10463 10779 11095 11410 11726 12042 12358 12674 12989 13305 13621 13937 14253 14568 15358 15516 15989 16147 16621 16779 17252 17410 17884 18042 18516 18674 19147 19305 19779 19937 20410 20568 21042 21200 21674 21831 22305 22463 22858 23016 23174 23331 23489 23647 23805 23963 24121 24279 24437 24595 25305 25937 26726 26884 27042 27200 27358 27516 27674 27831 27989 28147 28305 28463 28621 28779 28937 29095 29252 29410 29568 29726 30358 30516 30674 30831 30989 31147 31305 31463 31621 31779 31937 32095 32252 32410 32568 32726 32884 33042 33200 33358 33516 33674 33831 33989 34147 34305 34463 34621 34779 34937 35095 35252 35410 35568 35726 35884 36042 36200 36358 36516 36674 36831 36989 37147 37305 37463 37621 37779 37937 38095 38252 38410 38568 38726 38884 39042 39200 39358 39516 39674 39831 39989 40147 40305 40463 40621 40779 40937 41095 41252 41410 41568 41726 41884 42042 42200 42358 42516 42674 42831 42989 43147 43305 43463 43621 43779 43937 44095 44252 44410 44568 44726 44884 45042 45200 45358 45516 45989 46147 46621 46779 47252 47410 47884 48042 48516 48674 49147 49305 49779 49937 50410 50568 51042 51200 51674 51831 52305 52463 52937 53095 53726 54358 55068 55226 55384 55542 55700 55858 56016 56173 56331 56489 56647 56805 57042 57200 57358 57516 57673 57831 57989 58147 58305 58463 58621 58779 58937 59095 59252 59410 59568 59726 59884 60042 60358)) :ldur (quote ((79 79) (158) (73 73) (74 74) (74 74) (74 74) (74 74) (74 74) (74 74) (73 74) (316) (74 74) (474) (152) (152) (152) (153) (311) (310) (310) (158) (158) (153) (73 79) (73 73) (73 73) (74 74) (74 74) (74 74) (74 74) (74 74) (310) (310) (310) (311) (311) (310) (310) (311) (311) (311) (310) (310) (311) (311) (311) (310) (310) (311) (311) (316) (316) (310) (316) (73 73) (73) (74 74) (74) (74 74) (152) (74 74) (79) (74 79) (79) (79 79) (78) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79) (79 78) (79) (79 79) (79) (73 73) (73 73) (74 73) (74) (74 74) (74 74) (74 74) (74) (74 74) (73 73) (73 73) (157 73) (153) (158) (79 74) (74) (74 74) (74) (73 73) (73) (74 73) (74) (74 74) (79) (74 74) (79) (153) (152) (158) (73 73) (158) (74 74) (153) (316) (152) (152) (152) (153) (153) (153) (153) (158) (158) (158) (158) (157) (153) (153) (153) (153) (153) (153) (158) (152) (158) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (153) (153) (158) (153) (153) (153) (152) (152) (152) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (158) (153) (153) (153) (158) (153) (152) (152) (152) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (153) (153) (153) (153) (153) (153) (158) (152) (152) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (153) (153) (153) (158) (153) (153) (152) (152) (310) (74 74) (79) (74 74) (79) (74 74) (79) (74 74) (79) (73 73) (78) (74 74) (79) (73 73) (79) (74 74) (153) (74 74) (79) (74 73) (74) (74 74) (153) (73 73) (157) (158) (158) (74 79) (79 79) (79 79) (79) (73 79) (79 73) (78 79) (79) (79 79) (79 79) (79 79) (158 79) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79 79) (79 79) (79 78) (79 79) (158) (158) (158) (158) (316))) :lvel (quote ((108 113) (98) (80 97) (81 85) (80 80) (90 84) (90 93) (77 82) (92 86) (91 96) (121) (119 119) (119) (104) (95) (104) (121) (127) (119) (119) (102) (104) (121) (59 119) (86 86) (80 82) (86 78) (84 88) (82 84) (88 81) (96 96) (123) (101) (123) (119) (113) (107) (115) (113) (98) (109) (102) (100) (110) (104) (109) (119) (107) (111) (102) (102) (102) (111) (121) (94 119) (115) (80 123) (98) (106 106) (101) (100 117) (111) (93 127) (101) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (104 97) (97 92) (98 110) (102) (101 100) (97 97) (100 102) (100) (100 98) (96 97) (95 102) (123 93) (126) (121) (86 109) (104) (100 106) (104) (104 104) (86) (106 107) (106) (102 100) (97) (97 123) (110) (89) (90) (95) (100 112) (98) (104 86) (97) (127) (95) (84) (68) (83) (96) (77) (85) (84) (58) (88) (83) (75) (111) (111) (80) (80) (91) (81) (76) (86) (95) (97) (102) (83) (89) (78) (78) (75) (85) (82) (90) (80) (88) (90) (72) (83) (95) (78) (81) (77) (80) (76) (96) (85) (77) (85) (88) (80) (84) (83) (61) (83) (83) (83) (82) (77) (78) (89) (92) (78) (91) (82) (70) (83) (83) (83) (84) (76) (85) (83) (80) (68) (63) (75) (45) (53) (89) (89) (84) (74) (75) (86) (85) (89) (90) (66) (77) (82) (93) (83) (83) (83) (97) (97) (85) (77) (98) (101 109) (115) (111 108) (108) (96 102) (119) (95 92) (104) (65 92) (111) (68 104) (104) (98 113) (115) (86 96) (117) (80 117) (121) (101 107) (115) (102 111) (113) (91 108) (119) (102) (126) (85 84) (107 95) (107 107) (107) (66 88) (107 92) (88 88) (88) (88 88) (107 88) (88 88) (88 88) (88 88) (88) (88 88) (88) (88 88) (88) (88 88) (88) (88 88) (88) (88 88) (88 88) (88 88) (88 88) (88 88) (88) (88) (88) (88) (88))) :loffset (quote ((79 0) (0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (0) (79 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (78 0) (0) (79 0) (0) (79 0) (79 0) (78 0) (0) (79 0) (79 0) (79 0) (0) (79 0) (79 0) (79 0) (79 0) (0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (78 0) (0) (79 0) (0) (79 0) (0) (0) (0) (0) (79 0) (0) (79 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (78 0) (0) (79 0) (0) (79 0) (0) (0) (0) (79 0) (79 0) (79 0) (0) (79 0) (79 0) (79 0) (0) (79 0) (79 0) (79 0) (79 0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (79 0) (79 0) (78 0) (79 0) (0) (0) (0) (0) (0))) :lchan (quote ((1 1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1) (1) (1) (1 1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0 0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5900) (5500) (5000) (5500) (5900) (5500) (6200) (5900) (5500) (5900) (5700) (5500) (6200) (5700) (5400) (5700) (6200) (5700) (6900) (6600) (6200) (6600) (6400) (6200) (6700) (6400) (5900) (6400) (6700) (6400) (7100) (6700) (6400) (7100) (6900) (6700) (7400) (6900) (6600) (6900) (7400) (6900) (8100) (7800) (7400) (7800) (7600) (7400) (7900) (7400) (7100) (7400) (7900) (7400) (8300) (7900) (7400) (7700) (7600) (7400) (7600) (7200) (6700) (7200) (7600) (7200) (7900) (7600) (7200) (7400) (7200) (7100) (6900) (6600) (6200) (6600) (6900) (6600) (7400) (6900) (6600) (6900) (6700) (6600) (6700) (6200) (5900) (6200) (6700) (6200) (7100) (6700) (7400) (7200) (7100) (6900) (6700) (7800 7900) (7900) (7100 7300) (7300) (6400 6600) (6600) (7600 7800) (7800) (6900 7100) (7100) (6200 6400) (6400) (7400 7600) (7600) (6600 6700) (6700) (5900 6100) (6100) (5000 5200) (5200) (4300 4500) (4500) (4000 4200) (3800) (7400) (7200) (5700 5500) (6200 5900) (5700 5900) (5500) (5700 5500) (6200 5800) (5700 5800) (5500) (5700 5600) (6200 5900) (5700 5900) (5700 5600) (5900 6100) (6100) (5200 5400) (5400) (5700 5900) (5900) (5000 5200) (5200) (5500 5700) (5700) (4900 5000) (5200 5000) (5500 5400) (5500 5700) (5200 5400) (5000) (5400) (4500) (5000) (3800) (5000) (8400 8300) (8400 8600) (8400 8600) (8400 8600) (8400 8600) (8400 8600) (8400 8600) (8400 8300) (8300) (6400 6500) (6500) (6900) (6700) (6500) (6400) (7800) (8100) (7500) (7600) (7800) (7100) (4500 4700) (4500 4300) (4500 4700) (4500 4700) (4500 4700) (4500 4700) (4500 4700) (4500 4300) (4300) (4000) (4300) (4700) (4300) (4000) (4500) (3300) (4500) (4800) (4700) (4500) (4700) (5100) (5400) (5900) (6700) (6400) (6300) (6400) (6700) (7100) (7600) (7500) (7600) (4700 4800) (4800) (5600 5700) (5700) (6200 6400) (6400) (4500 4700) (4700) (5400 5500) (5500) (6000 6200) (6200) (4300 4500) (4500) (5000 5200) (5200) (5900 6000) (6000) (6700 6900) (6900) (7600 7800) (7800) (7900 8100) (8100) (6900 6700) (7400 7100) (6900 7100) (6700) (6900 6700) (7400 7100) (6900 7100) (6700) (6900 6700) (7400 7100) (6900 7100) (7200 6700) (5700) (5200) (5400) (5500 5700) (5700) (6000 6200) (6200) (5400 5500) (5500) (5900 6000) (6000) (5200 5400) (5400) (5400 5900) (5900) (5500) (5400) (5500) (5700 5900) (5500) (6000 6200) (5900) (6700))) :lonset (quote (42 200 358 516 674 831 989 1147 1305 1463 1621 1779 1937 2095 2253 2410 2568 2726 2884 3042 3200 3358 3516 3674 3831 3989 4147 4305 4463 4621 4779 4937 5095 5253 5410 5568 5726 5884 6042 6200 6358 6516 6674 6831 6989 7147 7305 7463 7621 7779 7937 8095 8253 8410 8568 8726 8884 9042 9200 9358 9516 9674 9831 9989 10147 10305 10463 10621 10779 10937 11095 11253 11410 11568 11726 11884 12042 12200 12358 12516 12674 12831 12989 13147 13305 13463 13621 13779 13937 14095 14253 14410 14568 14726 14884 15042 15200 15674 15831 16305 16463 16937 17095 17568 17726 18200 18358 18831 18989 19463 19621 20095 20252 20726 20884 21358 21516 21989 22147 22621 22779 23410 24042 24752 24910 25068 25226 25384 25542 25700 25858 26016 26174 26331 26489 26726 26884 27042 27200 27358 27516 27674 27831 27989 28147 28305 28463 28621 28779 28937 29095 29252 29410 29568 29726 30358 30989 31147 31305 31463 31621 31779 31937 32095 32252 32884 33042 33674 33831 33989 34147 34779 35095 35410 35726 35884 36042 36674 36831 36989 37147 37305 37463 37621 37779 37937 38252 38568 38884 39200 39516 39831 40147 40463 40779 41095 41410 41726 42042 42358 42674 42989 43305 43463 43621 43937 44252 44568 44726 44884 45674 45831 46305 46463 46937 47095 47568 47726 48200 48358 48831 48989 49463 49621 50095 50252 50726 50884 51358 51516 51989 52147 52621 52779 53173 53331 53489 53647 53805 53963 54121 54279 54437 54595 54752 54910 55621 56252 56884 57042 57200 57358 57516 57673 57831 57989 58147 58305 58463 58621 58779 58937 59095 59252 59410 59568 59726 59884 60042 60358)) :ldur (quote ((153) (153) (152) (152) (152) (153) (153) (158) (158) (158) (158) (158) (152) (152) (152) (153) (153) (153) (158) (153) (158) (152) (152) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (157) (153) (153) (153) (153) (153) (153) (152) (152) (152) (153) (153) (153) (153) (153) (153) (152) (158) (152) (152) (153) (158) (153) (153) (153) (153) (152) (152) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (152) (153) (153) (153) (158) (153) (153) (152) (152) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (152) (158) (153) (153) (153) (153) (310) (73 73) (79) (74 74) (79) (73 73) (79) (74 74) (79) (73 74) (79) (74 74) (79) (74 74) (79) (73 73) (153) (74 74) (79) (73 73) (73) (74 74) (153) (74 74) (158) (158) (158) (74 79) (79 79) (79 79) (79) (74 79) (79 74) (79 79) (79) (79 79) (79 78) (79 79) (158 79) (79 79) (79) (79 79) (79) (79 79) (79) (79 78) (79) (79 79) (79) (79 79) (79 79) (79 79) (79 79) (79 79) (157) (158) (158) (158) (316) (316) (74 74) (74 74) (74 74) (74 74) (74 74) (73 73) (73 73) (73 73) (316) (74 74) (474) (157) (158) (158) (316) (310) (310) (311) (158) (158) (153) (74 78) (74 74) (74 74) (74 74) (74 74) (74 74) (74 74) (73 73) (310) (311) (311) (311) (310) (310) (311) (311) (311) (310) (310) (311) (311) (310) (310) (310) (311) (158) (158) (310) (315) (316) (158) (158) (316) (74 73) (74) (74 74) (74) (73 73) (152) (74 74) (79) (73 79) (79) (79 79) (79) (79 79) (79) (78 79) (79) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79) (74 74) (74 74) (74 74) (74) (74 74) (74 74) (73 74) (73) (73 73) (74 73) (74 74) (158 74) (152) (158) (74) (79 74) (73) (73 73) (73) (74 74) (74) (74 74) (74) (74 74) (79) (73 74) (79) (152) (152) (158) (74 74) (158) (74 74) (153) (316))) :lvel (quote ((95) (84) (68) (83) (96) (77) (85) (84) (58) (88) (83) (75) (111) (111) (80) (80) (91) (81) (76) (86) (95) (97) (102) (83) (89) (78) (78) (75) (85) (82) (90) (80) (88) (90) (72) (83) (95) (78) (81) (77) (80) (76) (96) (85) (77) (85) (88) (80) (84) (83) (61) (83) (83) (83) (82) (77) (78) (89) (92) (78) (91) (82) (70) (83) (83) (83) (84) (76) (85) (83) (80) (68) (63) (75) (45) (53) (89) (89) (84) (74) (75) (86) (85) (89) (90) (66) (77) (82) (93) (83) (83) (83) (97) (97) (85) (77) (98) (101 109) (115) (111 108) (108) (96 102) (119) (95 92) (104) (65 92) (111) (68 104) (104) (98 113) (115) (86 96) (117) (80 117) (121) (101 107) (115) (102 111) (113) (91 108) (119) (102) (126) (85 84) (107 95) (107 107) (107) (66 88) (107 92) (88 88) (88) (88 88) (107 88) (88 88) (88 88) (88 88) (88) (88 88) (88) (88 88) (88) (88 88) (88) (88 88) (88) (88 88) (88 88) (88 88) (88 88) (88 88) (88) (88) (88) (88) (88) (113) (80 97) (81 85) (80 80) (90 84) (90 93) (77 82) (92 86) (91 96) (121) (119 119) (119) (119) (119) (119) (121) (127) (119) (119) (102) (104) (121) (59 119) (86 86) (80 82) (86 78) (84 88) (82 84) (88 81) (96 96) (123) (101) (123) (119) (113) (107) (115) (113) (98) (109) (102) (100) (110) (104) (109) (119) (107) (111) (111) (102) (102) (102) (111) (121) (121) (94 119) (115) (80 123) (98) (106 106) (101) (100 117) (111) (93 127) (101) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (104 97) (97 92) (98 110) (102) (101 100) (97 97) (100 102) (100) (100 98) (96 97) (95 102) (123 93) (126) (121) (109) (86 109) (104) (100 106) (104) (104 104) (86) (106 107) (106) (102 100) (97) (97 123) (110) (89) (90) (95) (100 112) (98) (104 86) (97) (127))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (0) (0) (79 0) (79 0) (79 0) (0) (79 0) (79 0) (79 0) (0) (79 0) (78 0) (79 0) (79 0) (79 0) (0) (79 0) (0) (79 0) (0) (78 0) (0) (79 0) (0) (79 0) (79 0) (79 0) (79 0) (79 0) (0) (0) (0) (0) (0) (0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (0) (79 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (78 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (78 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (79 0) (79 0) (0) (79 0) (79 0) (79 0) (0) (79 0) (78 0) (79 0) (79 0) (0) (0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (0) (0) (0) (79 0) (0) (79 0) (0) (0))) :lchan (quote ((4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4) (4) (4 4) (4 4) (4 4) (4) (4 4) (4 4) (4 4) (4) (4 4) (4 4) (4 4) (4 4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4 4) (4 4) (4 4) (4 4) (4) (4) (4) (4) (4) (4) (4 4) (4 4) (4 4) (4 4) (4 4) (4 4) (4 4) (4 4) (4) (4 4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4 4) (4 4) (4 4) (4 4) (4 4) (4 4) (4 4) (4 4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4 4) (4 4) (4) (4 4) (4 4) (4 4) (4) (4 4) (4 4) (4 4) (4 4) (4) (4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4 4) (4) (4) (4) (4) (4 4) (4) (4 4) (4) (4))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 2 24 (list (quote g) (quote g)) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1 1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :midi-player) 1 nil 1000 0 (om-make-point 370 280) (om-make-point 400 20) 0 1 (quote :normal) (quote t) nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "var14.mid" (quote midifile) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil))) (om-make-point 700 80) (om-make-point 50 72) (let ((newobj (load-midi (om-make-pathname :directory (quote (:absolute "home" "andersvi" "Musikk" "MIDIFILER" "BACH" "bach" "gold")) :device nil :host nil :name "var14" :type "mid")))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "var14.mid") (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (outport player deltapict zoom obj-mode cmnpref notechancolor? grillestep mode winsize winpos show-stems scale)) (list 0 (quote :midi-player) (om-make-point 0 0) 1 0 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0 (om-make-point 370 280) (om-make-point 10 40) (quote t) nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FIRST" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 520 340) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 480 220) (om-make-point 130 90) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6400) (6900) (7200) (7100) (6400) (7100) (7400) (7200) (7600) (6800) (7600) (6900) (6400) (6900) (7200) (7100) (6400) (7100) (7400) (7200) (6900) (7600) (7200) (7600) (6900) (7200) (6400) (6700) (6500) (6900) (7400) (7700) (7400) (7100) (7400) (6700) (7100) (6200) (6500) (6400) (6700) (7200) (7600) (7200) (6900) (7200) (6500) (7400) (7100) (6700) (7100) (6400) (7200) (6900) (6500) (6900) (6200) (7100) (7200) (6700) (7200) (7600) (7400) (6700) (7400) (7700) (7600) (7900) (7100) (7900) (7200) (6700) (7200) (7600) (7400) (6700) (7400) (7700) (7600) (7200) (7900) (7600) (8400) (8100) (7600) (8100) (7200) (7600) (6900) (7200) (7400) (7800) (8100) (8400) (8300) (7900) (7400) (7900) (7100) (7400) (6700) (7100) (7200) (7600) (7900) (8300) (8100) (7800) (7500) (7800) (7100) (7500) (6600) (6900) (6700) (7900) (7600) (7200) (7600) (6900) (7800) (7400) (7100) (7400) (6700) (7600) (7200) (6900) (7200) (6600) (7900) (7800) (7600) (7500) (7800) (7100) (7500) (7600) (7900) (8200) (7900) (7600) (7900) (7300) (7600) (7900) (7600) (7300) (7600) (6900) (7700) (8100) (7700) (7400) (7700) (7100) (7400) (7700) (7400) (7100) (7400) (6700) (7600) (7900) (7600) (7200) (7600) (6900) (7200) (7500) (7200) (6900) (7200) (6600) (7400) (7700) (7400) (7100) (7400) (6800) (7100) (7400) (7100) (6800) (7100) (6400) (6400) (6900) (7200) (7100) (6400) (7100) (7400) (7200) (6900) (6800) (6400) (6900) (7200) (7600) (7200) (6900) (7200) (6600) (6900) (7200) (6900) (6600) (6900) (6300) (7200) (7100) (6900) (6800) (7100) (7400) (7100) (6800) (7100) (6200) (6500) (6800) (6500) (6200) (6500) (5900) (6500) (6400) (6200) (6000) (6400) (6900) (6400) (6000) (6400) (5700) (6000) (6300) (6000) (5700) (6000) (5400) (6000) (5900) (5700) (5600) (7100) (6800) (6400) (6400) (6900) (7200) (7100) (6400) (7100) (7400) (7200) (6900) (7200) (7600) (7400) (7100) (7400) (7700) (7600) (7200) (7600) (7900) (7700) (7600) (7400) (7200) (7100) (7200) (7400) (7600) (7700) (7400) (8000) (7400) (8300) (7400) (7200) (8100) (7700) (7400) (7100) (7400) (6800) (7100) (7200) (6900) (6400) (6900) (7100) (6800) (6900) (6400) (6000) (6400) (5700))) :lonset (quote (163 326 489 652 815 978 1141 1304 1630 1957 2283 2609 2772 2935 3098 3261 3424 3587 3750 3913 4239 5380 5543 5707 5870 6033 6196 6359 6522 6848 7174 7500 7989 8152 8315 8478 8641 8804 8967 9130 9457 9783 10109 10598 10761 10924 11087 11413 11902 12065 12228 12391 12717 13207 13370 13533 13696 14022 14348 15815 15978 16141 16304 16467 16630 16793 16957 17283 17609 17935 18261 18424 18587 18750 18913 19076 19239 19402 19565 19891 20217 20543 20870 21033 21196 21359 21522 21685 21848 22011 22174 22500 22826 23152 23478 23641 23804 23967 24130 24293 24457 24620 24783 25109 25435 25761 26087 26250 26413 26576 26739 26902 27065 27228 27391 27717 28207 28370 28533 28696 29022 29511 29674 29837 30000 30326 30815 30978 31141 31304 31467 31630 31793 31957 32120 32283 32446 32609 34076 34239 34402 34565 34728 34891 35054 35217 35380 35543 35707 35870 36685 36848 37011 37174 37337 37500 37663 37826 37989 38152 38315 38478 39293 39457 39620 39783 39946 40109 40272 40435 40598 40761 40924 41087 41902 42065 42228 42391 42554 42717 42880 43043 43207 43370 43533 43696 44511 44674 44837 45000 45163 45326 45489 45652 45978 46304 46630 46957 47120 47283 47446 47609 47772 47935 48098 48261 48424 48587 48750 48913 49076 49239 49402 49565 49728 49891 50054 50217 50380 50543 50707 50870 51033 51196 51359 51522 51685 51848 52011 52174 52337 52500 52663 52826 52989 53152 53315 53478 53641 53804 53967 54130 54293 54457 54620 54783 55109 55435 55761 56250 56413 56576 56739 56902 57065 57228 57391 57554 57717 57880 58043 58207 58370 58533 58696 58859 59022 59185 59348 59511 59674 59837 60000 60163 60326 60489 60652 60815 60978 61141 61304 61467 61630 61793 61957 62120 62283 62446 62609 62772 62935 63098 63261 63424 63587 63750 63913 64076 64239 64402 64565 66522)) :ldur (quote ((163) (163) (163) (163) (163) (163) (163) (326) (327) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (163) (164) (163) (163) (163) (163) (163) (326) (326) (326) (489) (163) (163) (163) (163) (163) (163) (163) (327) (326) (326) (489) (163) (163) (163) (326) (489) (163) (163) (163) (326) (490) (163) (163) (163) (326) (326) (326) (163) (163) (163) (163) (163) (163) (164) (326) (326) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (327) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (326) (163) (163) (163) (163) (163) (164) (163) (163) (326) (326) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (326) (490) (163) (163) (163) (326) (489) (163) (163) (163) (326) (489) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (326) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (327) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (326) (326) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (1957))) :lvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((4500) (5700) (5600) (5700) (5200) (5700) (6000) (5900) (5200) (5900) (6200) (6000) (5700) (5600) (5200) (5700) (5200) (5700) (6000) (5900) (5200) (5900) (6200) (6000) (5700) (6000) (5700) (6200) (5700) (5300) (5700) (5000) (5300) (4500) (4800) (4700) (5000) (5500) (5900) (5500) (5200) (5500) (4800) (5200) (4300) (4700) (4500) (4800) (5000) (5300) (4700) (5000) (4300) (4700) (4800) (5200) (4500) (4800) (4100) (3800) (4300) (5500) (5300) (5500) (4800) (5500) (6000) (6400) (6200) (5500) (6200) (6500) (6400) (6000) (5900) (5500) (6000) (5500) (6000) (6400) (6200) (5500) (6200) (6500) (6400) (6000) (6700) (6400) (6700) (6000) (6400) (5500) (5900) (5700) (6000) (6400) (6700) (6600) (6900) (6200) (6600) (5700) (6200) (5400) (5700) (5500) (5900) (6200) (6600) (6400) (6700) (6000) (6400) (5500) (6000) (5200) (5500) (5400) (5700) (5900) (6300) (6400) (6000) (6400) (5700) (6000) (6400) (6700) (6600) (6200) (5900) (6200) (5500) (5900) (6200) (6600) (6400) (6000) (5700) (6000) (5400) (5700) (6000) (5900) (6000) (5700) (5900) (4700) (5200) (6400) (5900) (5500) (5200) (4700) (4300) (4700) (4000) (5200) (5500) (5800) (4900) (6700) (6600) (6400) (6200) (5000) (5300) (5600) (4700) (6500) (6400) (6200) (6000) (4800) (5200) (5400) (4500) (6400) (6300) (6100) (5900) (4700) (5000) (5300) (4400) (6200) (6000) (5900) (6000) (5700) (5600) (5200) (5700) (5200) (5700) (6000) (5900) (5200) (5900) (6200) (6000) (6400) (6900) (6400) (6000) (6400) (5700) (6000) (5400) (5700) (6000) (5700) (5400) (5700) (5100) (5400) (5200) (5600) (5900) (5600) (5200) (4700) (4400) (4000) (4500) (4800) (5200) (4800) (4500) (4800) (3900) (5900) (5600) (5200) (5000) (5900) (5600) (5000) (4800) (5200) (4400) (5200) (4500) (5400) (4700) (5600) (4800) (5700) (5000) (5800) (5600) (5300) (5000) (4700) (4400) (4500) (3800) (4000) (4100) (3900) (4000) (5200) (4500))) :lonset (quote (0 326 978 1304 1467 1630 1793 1957 2120 2283 2446 2609 2935 3261 3587 3913 4076 4239 4402 4565 4728 4891 5054 5217 5543 5870 6196 6522 6685 6848 7011 7174 7337 7500 7663 7826 8152 8478 8804 9293 9457 9620 9783 9946 10109 10272 10435 10761 11087 11250 11413 11576 11739 12065 12391 12554 12717 12880 13043 13370 13696 13859 14022 14185 14348 14511 14674 14837 15000 15163 15326 15489 15652 15978 16304 16630 16957 17120 17283 17446 17609 17772 17935 18098 18261 18587 19728 19891 20054 20217 20380 20543 20707 20870 21196 21522 21848 22174 22337 22500 22663 22826 22989 23152 23315 23478 23804 24130 24457 24783 24946 25109 25272 25435 25598 25761 25924 26087 26413 26739 27065 27554 27717 27880 28043 28207 28370 28533 28696 28859 29022 29185 29348 29511 29674 29837 30000 30163 30326 30489 30652 30815 30978 31467 31630 31793 31957 32283 32609 32772 32935 33098 33261 33424 33587 33750 33913 34239 34565 34891 35217 36033 36196 36359 36522 36848 37174 37500 37826 38641 38804 38967 39130 39457 39783 40109 40435 41250 41413 41576 41739 42065 42391 42717 43043 43859 44022 44185 44348 44674 45000 45326 45652 45815 45978 46141 46304 46467 46630 46793 46957 47120 47283 47446 47609 47772 47935 48098 48261 48424 48587 48750 48913 49076 49239 49402 49565 49891 50217 50543 50870 51196 51522 51848 52174 52500 52826 53152 53478 53804 54130 54946 55109 55272 55435 55598 55761 55924 56087 56413 56739 57065 57391 57717 58043 58370 58696 59022 59348 59674 60000 60326 60652 60978 61304 61630 61957 62283 62609 62935 63261 63587 63913 66522)) :ldur (quote ((326) (652) (326) (163) (163) (163) (164) (163) (163) (163) (163) (326) (326) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (326) (327) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (489) (164) (163) (163) (163) (163) (163) (163) (326) (326) (163) (163) (163) (163) (326) (326) (163) (163) (163) (163) (327) (326) (136) (163) (163) (163) (136) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (327) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (163) (163) (163) (163) (163) (164) (163) (326) (326) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (327) (326) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (326) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (489) (163) (163) (164) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (326) (326) (163) (163) (163) (326) (326) (326) (326) (326) (163) (163) (163) (327) (326) (326) (326) (326) (163) (163) (163) (326) (326) (326) (326) (327) (163) (163) (163) (326) (326) (326) (326) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (327) (326) (326) (326) (326) (326) (326) (326) (326) (326) (326) (327) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (326) (326) (326) (327) (326) (326) (326) (326) (326) (326) (326) (326) (326) (326) (327) (326) (326) (326) (326) (326) (326) (2609))) :lvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 2 24 (list (quote g) (quote g)) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1 1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :midi-player) 1 nil 1000 0 (om-make-point 370 280) (om-make-point 400 20) 0 1 (quote :normal) (quote t) nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "invent13.mid" (quote midifile) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil))) (om-make-point 560 80) (om-make-point 50 72) (let ((newobj (load-midi (om-make-pathname :directory (quote (:relative "in-files")) :device :unspecific :host :unspecific :name "invent13" :type "mid")))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "invent13.mid") (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (outport player deltapict zoom obj-mode cmnpref notechancolor? grillestep mode winsize winpos show-stems scale)) (list 0 (quote :midi-player) (om-make-point 0 0) 1 0 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0 (om-make-point 370 280) (om-make-point 10 40) (quote t) nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FIRST" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 380 340) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 320 220) (om-make-point 130 90) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7600) (7500) (7400) (7300) (7100) (6900) (6800) (6600) (6800) (6900) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (6400) (6300) (6400) (6600) (6800) (6900) (7100) (7300) (7500) (7600) (7500) (7300) (7100) (7600) (6400) (8000) (7600) (7300) (7600) (7500) (7600) (7300) (7000) (6600) (7800) (7500) (7100) (7500) (7300) (7500) (7100) (6800) (6400) (7600) (7300) (7000) (8000) (7800) (7600) (7500) (7300) (7100) (7000) (6400) (6300) (6400) (7000) (6800) (7000) (7100) (7000) (7100) (6300) (6100) (7100) (6100) (7000) (7100) (7100) (7500) (7800) (8300) (8300) (7800) (7500) (7100) (6600) (6300) (5900) (7600) (7500) (7400) (7300) (7100) (6900) (6800) (6600) (6800) (6900) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (6400) (6300) (6400) (6600) (6800) (6900) (7100) (7300) (7500) (7600) (7500) (7300) (7100) (7600) (6400) (8000) (7600) (7300) (7600) (7500) (7600) (7300) (7000) (6600) (7800) (7500) (7100) (7500) (7300) (7500) (7100) (6800) (6400) (7600) (7300) (7000) (8000) (7800) (7600) (7500) (7300) (7100) (7000) (6400) (6300) (6400) (7000) (6800) (7000) (7100) (7000) (7100) (6300) (6100) (7100) (6100) (7000) (7100) (7100) (7500) (7800) (8300) (8300) (7800) (7500) (7100) (6600) (6300) (5900) (5900) (6100) (6300) (6400) (6600) (6800) (7000) (7100) (7000) (6800) (6600) (7100) (5900) (8300) (8200) (8100) (8000) (7800) (7600) (7500) (7300) (7500) (7600) (7500) (7800) (7600) (7800) (7500) (7300) (7500) (7100) (7000) (7100) (7500) (7300) (7500) (8000) (7900) (8000) (7300) (7100) (7300) (7600) (7500) (7600) (8200) (8000) (8200) (7500) (7300) (7500) (8000) (7900) (8000) (8300) (8200) (8300) (7500) (7400) (7500) (8200) (8000) (8200) (7900) (7700) (7900) (7500) (7400) (7400) (8100) (8000) (7800) (7600) (7500) (7600) (7300) (7200) (7300) (7600) (7500) (7600) (8000) (7800) (7600) (7500) (7300) (7500) (7100) (7000) (7100) (7300) (7100) (7300) (7600) (7500) (7300) (7100) (7000) (7100) (6800) (6700) (6800) (6900) (6800) (6900) (7300) (7100) (7300) (6900) (6800) (6900) (7600) (7500) (7600) (6700) (6500) (6700) (7000) (6800) (7000) (5900) (5800) (5900) (6800) (6400) (6100) (5800) (6700) (6800) (6300) (5900) (5600) (6400) (6600) (6800) (6900) (7100) (7300) (7500) (7600) (7500) (7300) (7100) (7600) (7100) (6900) (7100) (6800) (6600) (6800) (7600) (7500) (7400) (7300) (7100) (6900) (6800) (6600) (6800) (6900) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (6400) (6300) (6400) (6600) (6900) (7100) (7500) (7800) (6300) (6400) (6800) (6900) (7300) (7600) (6100) (6600) (6900) (7100) (7300) (7500) (7600) (7300) (6900) (7800) (7600) (7500) (7300) (7100) (6900) (6800) (6400) (6300) (6400) (6800) (6600) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (7100) (6900) (7100) (7600) (7500) (7600) (7100) (6800) (6400) (5900) (6100) (6300) (6400) (6600) (6800) (7000) (7100) (7000) (6800) (6600) (7100) (5900) (8300) (8200) (8100) (8000) (7800) (7600) (7500) (7300) (7500) (7600) (7500) (7800) (7600) (7800) (7500) (7300) (7500) (7100) (7000) (7100) (7500) (7300) (7500) (8000) (7900) (8000) (7300) (7100) (7300) (7600) (7500) (7600) (8200) (8000) (8200) (7500) (7300) (7500) (8000) (7900) (8000) (8300) (8200) (8300) (7500) (7400) (7500) (8200) (8000) (8200) (7900) (7700) (7900) (7500) (7400) (7400) (8100) (8000) (7800) (7600) (7500) (7600) (7300) (7200) (7300) (7600) (7500) (7600) (8000) (7800) (7600) (7500) (7300) (7500) (7100) (7000) (7100) (7300) (7100) (7300) (7600) (7500) (7300) (7100) (7000) (7100) (6800) (6700) (6800) (6900) (6800) (6900) (7300) (7100) (7300) (6900) (6800) (6900) (7600) (7500) (7600) (6700) (6500) (6700) (7000) (6800) (7000) (5900) (5800) (5900) (6800) (6400) (6100) (5800) (6700) (6800) (6300) (5900) (5600) (6400) (6600) (6800) (6900) (7100) (7300) (7500) (7600) (7500) (7300) (7100) (7600) (7100) (6900) (7100) (6800) (6600) (6800) (7600) (7500) (7400) (7300) (7100) (6900) (6800) (6600) (6800) (6900) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (6400) (6300) (6400) (6600) (6900) (7100) (7500) (7800) (6300) (6400) (6800) (6900) (7300) (7600) (6100) (6600) (6900) (7100) (7300) (7500) (7600) (7300) (6900) (7800) (7600) (7500) (7300) (7100) (6900) (6800) (6400) (6300) (6400) (6800) (6600) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (7100) (6900) (7100) (7600) (7500) (7600) (7100) (6800) (6400))) :lonset (quote (208 625 1042 1458 1875 2292 2708 3125 3542 3646 3750 3958 4062 4167 4375 4479 4583 4792 4896 5000 5417 5833 6250 6667 7083 7500 7917 8125 8333 8542 8750 9167 10208 10625 11042 11458 11562 11667 11875 12083 12292 12708 13125 13542 13958 14062 14167 14375 14583 14792 15208 15625 16042 16458 16875 17292 17708 18125 18542 18750 18958 19062 19167 19375 19479 19583 19792 19896 20000 20208 20417 20625 20833 21042 21250 21875 22083 22292 22500 23125 23333 23542 23750 23958 24167 24375 25208 25625 26042 26458 26875 27292 27708 28125 28542 28646 28750 28958 29062 29167 29375 29479 29583 29792 29896 30000 30417 30833 31250 31667 32083 32500 32917 33125 33333 33542 33750 34167 35208 35625 36042 36458 36562 36667 36875 37083 37292 37708 38125 38542 38958 39062 39167 39375 39583 39792 40208 40625 41042 41458 41875 42292 42708 43125 43542 43750 43958 44062 44167 44375 44479 44583 44792 44896 45000 45208 45417 45625 45833 46042 46250 46875 47083 47292 47500 48125 48333 48542 48750 48958 49167 49375 50000 50417 50833 51250 51667 52083 52500 52917 53125 53333 53542 53750 54167 55208 55625 56042 56458 56875 57292 57708 58125 58542 58646 58750 58958 59062 59167 59375 59479 59583 59792 59896 60000 60208 60312 60417 60625 60729 60833 61042 61146 61250 61458 61562 61667 61875 61979 62083 62292 62396 62500 62708 62812 62917 63125 63229 63333 63542 63646 63750 63958 64062 64167 64375 64479 64583 64792 64896 65000 65208 65625 66042 66458 66562 66667 66875 66979 67083 67292 67396 67500 67708 68125 68542 68958 69062 69167 69375 69479 69583 69792 69896 70000 70208 70625 71042 71458 71562 71667 71875 71979 72083 72292 72396 72500 72708 72812 72917 73125 73229 73333 73542 73646 73750 73958 74062 74167 74375 74479 74583 74792 74896 75000 75208 75417 75625 75833 76042 76250 76458 76667 76875 77500 77917 78333 78750 79167 79583 80000 80417 80625 80833 81042 81250 81875 81979 82083 82292 82396 82500 82708 83125 83542 83958 84375 84792 85208 85625 86042 86146 86250 86458 86562 86667 86875 86979 87083 87292 87396 87500 87917 88333 88750 89167 89583 90000 90417 90833 91250 91667 92083 92500 92917 93333 93750 94167 94583 95000 95417 95833 96250 97708 97917 98125 98333 98542 98750 98958 99062 99167 99375 99479 99583 99792 99896 100000 100208 100312 100417 100625 100729 100833 101042 101146 101250 101458 101667 101875 102500 102917 103333 103750 104167 104583 105000 105417 105625 105833 106042 106250 106667 107708 108125 108542 108958 109375 109792 110208 110625 111042 111146 111250 111458 111562 111667 111875 111979 112083 112292 112396 112500 112708 112812 112917 113125 113229 113333 113542 113646 113750 113958 114062 114167 114375 114479 114583 114792 114896 115000 115208 115312 115417 115625 115729 115833 116042 116146 116250 116458 116562 116667 116875 116979 117083 117292 117396 117500 117708 118125 118542 118958 119062 119167 119375 119479 119583 119792 119896 120000 120208 120625 121042 121458 121562 121667 121875 121979 122083 122292 122396 122500 122708 123125 123542 123958 124062 124167 124375 124479 124583 124792 124896 125000 125208 125312 125417 125625 125729 125833 126042 126146 126250 126458 126562 126667 126875 126979 127083 127292 127396 127500 127708 127917 128125 128333 128542 128750 128958 129167 129375 130000 130417 130833 131250 131667 132083 132500 132917 133125 133333 133542 133750 134375 134479 134583 134792 134896 135000 135208 135625 136042 136458 136875 137292 137708 138125 138542 138646 138750 138958 139062 139167 139375 139479 139583 139792 139896 140000 140417 140833 141250 141667 142083 142500 142917 143333 143750 144167 144583 145000 145417 145833 146250 146667 147083 147500 147917 148333 148750 150208 150417 150625 150833 151042 151250 151458 151562 151667 151875 151979 152083 152292 152396 152500 152714 152821 152929 153143 153250 153357 153571 153679 153786 153994 154203 154411 154619)) :ldur (quote ((417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (417) (417) (416) (417) (417) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (209) (208) (417) (208) (209) (208) (417) (208) (209) (208) (208) (209) (208) (208) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (417) (417) (416) (417) (417) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (209) (208) (417) (208) (209) (208) (417) (208) (209) (208) (208) (209) (208) (208) (208) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (209) (208) (208) (209) (208) (208) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (625) (104) (104) (209) (104) (104) (208) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (1424) (209) (208) (208) (209) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (208) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (209) (208) (208) (209) (208) (208) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (625) (104) (104) (209) (104) (104) (208) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (1250) (209) (208) (208) (209) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (214) (107) (108) (214) (107) (107) (214) (108) (107) (208) (209) (208) (208))) :lvel (quoteloffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5200) (5400) (5600) (5700) (5900) (6100) (6300) (6400) (6300) (6100) (5900) (6400) (5200) (5200) (5100) (5000) (4900) (4700) (4500) (4400) (4200) (4400) (4500) (4400) (4700) (4500) (4700) (4400) (4200) (4400) (4000) (3900) (4000) (4900) (5200) (5400) (5800) (6100) (3900) (4700) (5100) (5200) (5600) (5900) (3700) (4900) (5200) (5400) (5600) (5800) (5900) (5200) (5600) (5400) (6100) (5800) (6100) (5200) (6100) (5100) (5200) (5400) (4700) (5900) (5800) (5900) (5400) (5200) (5400) (5100) (4900) (5100) (5400) (5200) (5400) (5100) (4900) (5100) (4700) (4600) (4700) (3500) (5200) (5400) (5600) (5700) (5900) (6100) (6300) (6400) (6300) (6100) (5900) (6400) (5200) (5200) (5100) (5000) (4900) (4700) (4500) (4400) (4200) (4400) (4500) (4400) (4700) (4500) (4700) (4400) (4200) (4400) (4000) (3900) (4000) (4900) (5200) (5400) (5800) (6100) (3900) (4700) (5100) (5200) (5600) (5900) (3700) (4900) (5200) (5400) (5600) (5800) (5900) (5200) (5600) (5400) (6100) (5800) (6100) (5200) (6100) (5100) (5200) (5400) (4700) (5900) (5800) (5900) (5400) (5200) (5400) (5100) (4900) (5100) (5400) (5200) (5400) (5100) (4900) (5100) (4700) (4600) (4700) (3500) (5900) (5800) (5700) (5600) (5400) (5200) (5100) (4900) (5100) (5200) (5100) (5400) (5200) (5400) (5100) (4900) (5100) (4700) (4600) (4700) (4900) (5100) (5200) (5400) (5600) (5800) (5900) (5800) (5600) (5400) (5900) (4700) (5600) (5900) (6300) (5500) (5800) (6300) (5600) (5900) (6300) (5100) (6300) (6100) (6000) (6100) (6300) (5600) (6100) (5900) (5800) (5900) (6100) (5400) (5900) (6300) (5500) (5600) (5800) (5100) (5600) (5900) (4900) (6100) (5800) (5500) (5600) (4900) (5100) (4400) (4400) (5600) (5400) (5200) (5100) (5000) (4900) (4700) (4500) (4400) (4200) (4400) (4500) (4400) (4700) (4500) (4700) (4400) (4200) (4400) (4000) (3900) (4000) (4200) (4400) (4500) (4700) (4900) (5100) (5200) (5100) (4900) (4700) (5200) (5900) (5700) (5900) (5600) (5400) (5600) (6100) (5700) (5400) (5700) (5600) (5700) (5400) (5100) (4700) (5900) (5600) (5200) (5600) (5400) (5600) (5200) (4900) (4500) (5700) (5400) (5100) (6100) (5900) (5700) (5600) (5400) (5200) (5100) (5700) (5600) (5700) (5100) (5000) (5100) (5600) (5400) (5600) (5700) (5900) (5200) (6400) (5900) (5600) (5200) (5900) (5600) (5200) (4700) (4400) (4000) (5200) (5900) (5800) (5700) (5600) (5400) (5200) (5100) (4900) (5100) (5200) (5100) (5400) (5200) (5400) (5100) (4900) (5100) (4700) (4600) (4700) (4900) (5100) (5200) (5400) (5600) (5800) (5900) (5800) (5600) (5400) (5900) (4700) (5600) (5900) (6300) (5500) (5800) (6300) (5600) (5900) (6300) (5100) (6300) (6100) (6000) (6100) (6300) (5600) (6100) (5900) (5800) (5900) (6100) (5400) (5900) (6300) (5500) (5600) (5800) (5100) (5600) (5900) (4900) (6100) (5800) (5500) (5600) (4900) (5100) (4400) (4400) (5600) (5400) (5200) (5100) (5000) (4900) (4700) (4500) (4400) (4200) (4400) (4500) (4400) (4700) (4500) (4700) (4400) (4200) (4400) (4000) (3900) (4000) (4200) (4400) (4500) (4700) (4900) (5100) (5200) (5100) (4900) (4700) (5200) (5900) (5700) (5900) (5600) (5400) (5600) (6100) (5700) (5400) (5700) (5600) (5700) (5400) (5100) (4700) (5900) (5600) (5200) (5600) (5400) (5600) (5200) (4900) (4500) (5700) (5400) (5100) (6100) (5900) (5700) (5600) (5400) (5200) (5100) (5700) (5600) (5700) (5100) (5000) (5100) (5600) (5400) (5600) (5700) (5900) (5200) (6400) (5900) (5600) (5200) (5900) (5600) (5200) (4700) (4400) (4000) (5200))) :lonset (quote (0 417 833 1250 1667 2083 2500 2917 3125 3333 3542 3750 4167 5208 5625 6042 6458 6875 7292 7708 8125 8542 8646 8750 8958 9062 9167 9375 9479 9583 9792 9896 10000 10417 10833 11250 11667 12083 12500 12917 13333 13750 14167 14583 15000 15417 15833 16250 16667 17083 17500 17917 18333 18750 18958 19167 19375 19583 19792 20000 20417 20833 21250 21458 21562 21667 21875 21979 22083 22292 22396 22500 22708 22812 22917 23125 23229 23333 23542 23646 23750 24583 25000 25417 25833 26250 26667 27083 27500 27917 28125 28333 28542 28750 29167 30208 30625 31042 31458 31875 32292 32708 33125 33542 33646 33750 33958 34062 34167 34375 34479 34583 34792 34896 35000 35417 35833 36250 36667 37083 37500 37917 38333 38750 39167 39583 40000 40417 40833 41250 41667 42083 42500 42917 43333 43750 43958 44167 44375 44583 44792 45000 45417 45833 46250 46458 46562 46667 46875 46979 47083 47292 47396 47500 47708 47812 47917 48125 48229 48333 48542 48646 48750 49583 50208 50625 51042 51458 51875 52292 52708 53125 53542 53646 53750 53958 54062 54167 54375 54479 54583 54792 54896 55000 55417 55833 56250 56667 57083 57500 57917 58125 58333 58542 58750 59167 60000 60417 60833 61250 61667 62083 62500 62917 63333 63750 64167 64583 65000 65417 65833 66250 66667 67083 67500 67917 68333 68750 69167 69583 70000 70417 70833 71250 71667 72083 72500 73333 74167 74583 75000 75417 75833 76250 76875 77083 77292 77708 78125 78542 78958 79375 79792 80208 80625 81042 81146 81250 81458 81562 81667 81875 81979 82083 82292 82396 82500 82917 83333 83750 84167 84583 85000 85417 85625 85833 86042 86250 86875 86979 87083 87292 87396 87500 87708 88125 88542 88958 89062 89167 89375 89583 89792 90208 90625 91042 91458 91562 91667 91875 92083 92292 92708 93125 93542 93958 94375 94792 95208 95625 96042 96250 96458 96562 96667 96875 96979 97083 97292 97396 97500 97917 98333 98750 99375 99583 99792 100000 100208 100417 100625 100833 101042 101250 102083 102708 103125 103542 103958 104375 104792 105208 105625 106042 106146 106250 106458 106562 106667 106875 106979 107083 107292 107396 107500 107917 108333 108750 109167 109583 110000 110417 110625 110833 111042 111250 111667 112500 112917 113333 113750 114167 114583 115000 115417 115833 116250 116667 117083 117500 117917 118333 118750 119167 119583 120000 120417 120833 121250 121667 122083 122500 122917 123333 123750 124167 124583 125000 125833 126667 127083 127500 127917 128333 128750 129375 129583 129792 130208 130625 131042 131458 131875 132292 132708 133125 133542 133646 133750 133958 134062 134167 134375 134479 134583 134792 134896 135000 135417 135833 136250 136667 137083 137500 137917 138125 138333 138542 138750 139375 139479 139583 139792 139896 140000 140208 140625 141042 141458 141562 141667 141875 142083 142292 142708 143125 143542 143958 144062 144167 144375 144583 144792 145208 145625 146042 146458 146875 147292 147708 148125 148542 148750 148958 149062 149167 149375 149479 149583 149792 149896 150000 150417 150833 151250 151875 152083 152292 152500 152714 152929 153143 153357 153571 153786 154619 155453)) :ldur (quote ((417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (208) (209) (208) (208) (209) (208) (417) (416) (417) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (833) (417) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (208) (209) (208) (208) (209) (208) (417) (416) (417) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (833) (417) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (834) (416) (417) (417) (416) (417) (417) (208) (209) (416) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (625) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (417) (417) (416) (417) (417) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (208) (209) (208) (208) (209) (208) (208) (209) (208) (833) (417) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (834) (416) (417) (417) (416) (417) (417) (208) (209) (416) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (625) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (417) (417) (416) (417) (417) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (208) (209) (208) (214) (215) (214) (214) (214) (215) (833) (834))) :lvel (quoteloffset (quotelchan (quote ((2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2))) :legato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 2 24 (list (quote g) (quote g)) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1 1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :midi-player) 1 nil 1000 0 (om-make-point 370 280) (om-make-point 400 20) 0 1 (quote :normal) (quote t) nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "invent6.mid" (quote midifile) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil))) (om-make-point 400 80) (om-make-point 50 72) (let ((newobj (load-midi (om-make-pathname :directory (quote (:relative "in-files")) :device :unspecific :host :unspecific :name "invent6" :type "mid")))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "invent6.mid") (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (outport player deltapict zoom obj-mode cmnpref notechancolor? grillestep mode winsize winpos show-stems scale)) (list 0 (quote :midi-player) (om-make-point 0 0) 1 0 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0 (om-make-point 370 280) (om-make-point 10 40) (quote t) nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FIRST" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 220 340) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 160 220) (om-make-point 130 90) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6200) (6400) (6500) (6700) (6900) (7000) (6100) (7000) (6900) (6700) (6500) (6400) (6500) (6900) (7400) (6700) (7000) (7600) (7400) (7600) (7700) (7900) (8100) (8200) (7300) (8200) (8100) (7900) (7700) (7600) (7700) (7400) (7600) (7700) (7900) (8100) (7000) (8100) (7900) (7700) (7600) (7400) (7600) (7200) (7400) (7600) (7700) (7900) (6900) (7900) (7700) (7600) (7400) (7200) (7400) (7600) (7700) (7400) (7600) (7700) (6700) (7200) (7400) (7600) (7200) (7400) (7600) (6500) (7000) (6900) (6700) (7200) (7000) (6900) (6700) (6500) (6400) (6500) (6700) (6900 6700) (6700) (6500) (6500) (7200) (7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7200) (7000) (6900) (6700) (6500) (6400) (7200) (6200) (6400) (6600) (6700) (6900) (7000) (6900) (6700) (6500) (6400) (6200) (7000) (6000) (6200) (6400) (6500) (6700) (6900) (7100) (7200) (7400) (7600) (7700) (6800) (7700) (7600) (7400) (7200) (7100) (7200) (7100) (7400) (7200) (7100) (6900) (6800) (6900) (6800) (6600) (6400) (6200) (6000) (6200) (6400) (6600) (6800) (6900) (6200) (7200) (7100) (6900) (6800) (6600) (6400) (6600) (6800) (6900) (7100) (7200) (6600) (7600) (7400) (7200) (7100) (6900) (6800) (6900) (7100) (7200) (7400) (7600) (6900) (7700) (7600) (7400) (7200) (7100) (8100) (8000) (7800) (7600) (8100) (7400) (7200 7100) (7100) (6900) (6900) (6900) (7000) (7200) (6200) (6600) (6900) (7000) (6700) (6900) (7000) (7200) (7400) (6400) (7400) (7200) (7000) (6900) (6700) (6900) (7700) (7600) (7700) (6700) (7600) (7400) (7600) (7700) (7900) (8100) (8200) (7300) (8200) (8100) (7900) (7700) (7600) (7700) (7400) (6700) (7400) (7300) (7600) (6900) (7300) (7400) (7100) (7300) (7400) (7400) (7200) (7000) (6900) (6700) (6500) (7000) (6100) (6200) (6400) (6500) (6700) (6900) (7400) (6500) (6400) (6200) (6200))) :lonset (quote (0 152 303 455 606 758 909 1061 1212 1364 1515 1667 1818 2121 2424 2727 3030 3333 3636 3788 3939 4091 4242 4394 4545 4697 4848 5000 5152 5303 5455 5606 5758 5909 6061 6212 6364 6515 6667 6818 6970 7121 7273 7424 7576 7727 7879 8030 8182 8333 8485 8636 8788 8939 9091 9242 9394 9545 9697 9848 10000 10909 11061 11212 11364 11515 11667 11818 12424 13030 13333 13636 13788 13939 14091 14242 14394 14545 14697 14848 15000 15303 15455 15758 16061 16364 16515 16667 16818 16970 17121 17273 17424 17576 17727 17879 18030 18182 18333 18485 18636 18788 18939 19091 19242 19394 19545 19697 19848 20000 20152 20303 20455 20606 20758 20909 21061 21212 21364 21515 21667 21818 21970 22121 22273 22424 22576 22727 22879 23030 23182 23333 23485 23636 23788 23939 24091 24242 24394 24545 24697 24848 25000 25152 25303 25455 25606 25758 25909 26061 26212 26364 26515 26667 26818 26970 27121 27273 27424 27576 27727 27879 28030 28182 28333 28485 28636 28788 28939 29091 29242 29394 29545 29697 29849 30000 30152 30303 30455 30606 30758 30909 31061 31212 31364 31515 31667 31818 31970 32121 32273 32424 32879 33030 33182 33485 33636 34091 34242 34394 34545 34849 35152 35455 35606 35758 35909 36061 36212 36364 36515 36667 36818 36970 37121 37273 37576 37727 37879 38182 38485 39091 39242 39394 39545 39697 39849 40000 40152 40303 40455 40606 40758 40909 41212 41515 41970 42121 42273 42424 42576 42727 42879 43030 43485 43636 43788 43939 44091 44242 44394 44545 44697 44849 45000 45152 45303 45455 45606 45758 46061 46212 46364 48182)) :ldur (quote ((152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (303) (303) (303) (303) (303) (303) (152) (151) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (303) (152) (151) (152) (151) (152) (151) (303) (606) (303) (303) (152) (151) (152) (151) (152) (151) (152) (151) (76 76) (303) (152) (303) (303) (303) (84 75) (83 83) (84 83) (83 84) (84 83) (83 84) (84 83) (83 84) (83 83) (83 84) (83 83) (83 84) (83 83) (83 84) (83 83) (83 84) (83 83) (83 84) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (455) (151) (76 76) (303) (151) (455) (151) (152) (151) (304) (303) (303) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (303) (151) (152) (303) (303) (303) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (303) (303) (455) (151) (152) (151) (152) (151) (152) (151) (455) (151) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (303) (151) (152) (1818))) :lvel (quote ((64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64 64) (64) (64) (64) (64) (64) (64 64) (48 48) (49 48) (49 49) (50 50) (51 51) (52 51) (52 52) (53 53) (54 53) (54 54) (55 55) (56 55) (57 56) (57 57) (58 58) (59 58) (59 59) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64 64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (76 0) (0) (0) (0) (0) (0) (75 0) (76 0) (75 0) (76 0) (75 0) (76 0) (75 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (76 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5000) (5200) (5300) (5500) (5700) (5800) (4900) (5800) (5700) (5500) (5300) (5200) (5300) (5700) (6200) (5200) (5500) (6100) (5000) (6200) (5300) (5500) (5700) (5800) (4800) (6000) (5200) (5300) (5500) (5700) (5800) (5500) (5700) (5800) (6000) (6200) (5200) (6200) (6000) (5800) (5700) (5500) (5700) (5300) (5500) (5700) (5800) (6000) (5000) (6000) (5800) (5700) (5500) (5300) (5200) (4800) (5000) (5200) (5300) (5500) (4500) (5500) (5300) (5200) (5000) (4800) (5000) (4600) (4800) (3600) (4100) (4300) (4500) (4600) (4800) (5000) (4000) (5000) (4800) (4600) (4500) (4300) (4500) (4600) (4800) (5000) (5200) (5300) (4300) (5300) (5200) (5000) (4800) (4600) (4500) (4600) (4800) (4500) (4600) (4800) (4200) (4300) (4500) (4600) (4300) (4500) (4600) (4000) (4100) (5300) (5000) (4700) (4400) (4000) (4500) (4400) (4500) (4700) (4800) (5000) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5300 5200) (5200) (6400) (6200) (6000) (5900) (5700) (6200) (6400) (6500) (6200) (6400) (5200) (5700) (4500) (4600) (4800) (5000) (5100) (4200) (5100) (5000) (4800) (4600) (4500) (4300) (4300) (4500) (4600) (3600) (4300) (4800) (5300) (5500) (5700) (5900) (6100) (6200) (5200) (6200) (6100) (5900) (5700) (5500) (5300) (5700) (6200) (5200) (5500) (6100) (5000) (5200) (5300) (5500) (5700) (5800) (4900) (5800) (5700) (5500) (5300) (5200) (5300) (5500) (5700) (4500) (4600) (4800) (4600) (4500) (4300) (5800) (5700) (5500) (5300) (5200) (5300) (5500) (5700) (4500) (3800))) :lonset (quote (1818 1970 2121 2273 2424 2576 2727 2879 3030 3182 3333 3485 3636 3939 4242 4545 4848 5152 5455 5758 6061 6364 6667 6970 7273 7576 7879 8182 8485 8788 9091 9242 9394 9545 9697 9848 10000 10152 10303 10455 10606 10758 10909 11061 11212 11364 11515 11667 11818 11970 12121 12273 12424 12576 12727 12879 13030 13182 13333 13485 13636 13788 13939 14091 14242 14394 14545 14697 14848 15152 15455 15606 15758 15909 16061 16212 16364 16515 16667 16818 16970 17121 17273 17424 17576 17727 17879 18030 18182 18333 18485 18636 18788 18939 19091 19242 19394 19545 19697 19848 20000 20909 21061 21212 21364 21515 21667 21818 22727 23030 23333 23636 23939 24242 24545 24697 24848 25000 25152 25303 25455 25606 25758 25909 26061 26212 26364 26515 26667 26818 26970 27121 27273 27424 27576 27727 27879 28030 28182 28333 28485 28636 28788 28939 29091 29242 29394 29545 29697 29849 30000 30303 30606 30909 31212 31515 31818 32121 32424 32727 33030 33333 33636 33788 33939 34091 34242 34394 34545 34697 34849 35000 35152 35303 35455 35909 36061 36212 36364 36667 36970 37273 37424 37576 37727 37879 38030 38182 38333 38485 38636 38788 38939 39091 39394 39697 40000 40303 40606 40909 41061 41212 41364 41515 41667 41818 41970 42121 42273 42424 42576 42727 42879 43030 43333 43636 44091 44242 44394 44545 44697 44849 45000 45152 45303 45455 45606 45758 46061 46364 48182)) :ldur (quote ((152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (303) (303) (303) (303) (304) (303) (303) (303) (303) (303) (303) (303) (303) (303) (303) (303) (303) (303) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (304) (303) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (303) (152) (151) (152) (151) (152) (151) (303) (303) (303) (303) (303) (303) (303) (152) (151) (152) (152) (151) (152) (84 75) (83 83) (84 83) (83 83) (84 83) (83 83) (84 83) (83 84) (84 83) (83 84) (84 83) (83 84) (83 83) (83 84) (83 83) (83 84) (83 83) (83 84) (83 83) (83 84) (83 83) (83 84) (83 83) (84 84) (83 83) (84 84) (83 83) (84 84) (83 83) (84 83) (303) (303) (303) (303) (303) (303) (303) (303) (303) (303) (303) (303) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (454) (152) (151) (152) (303) (303) (303) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (303) (303) (303) (303) (303) (303) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (303) (303) (455) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (303) (303) (1818))) :lvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (75 0) (76 0) (75 0) (76 0) (75 0) (76 0) (75 0) (76 0) (75 0) (76 0) (75 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (75 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2 2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 2 24 (list (quote g) (quote g)) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1 1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :midi-player) 1 nil 1000 0 (om-make-point 370 280) (om-make-point 400 20) 0 1 (quote :normal) (quote t) nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "invent4.mid" (quote midifile) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil))) (om-make-point 240 80) (om-make-point 50 72) (let ((newobj (load-midi (om-make-pathname :directory (quote (:relative "in-files")) :device :unspecific :host :unspecific :name "invent4" :type "mid")))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "invent4.mid") (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (outport player deltapict zoom obj-mode cmnpref notechancolor? grillestep mode winsize winpos show-stems scale)) (list 0 (quote :midi-player) (om-make-point 0 0) 1 0 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0 (om-make-point 370 280) (om-make-point 10 40) (quote t) nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FIRST" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 80 340) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 20 220) (om-make-point 130 90) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000) (6200) (6400) (6500) (6200) (6400) (6000) (6700) (7200) (6900 7100) (7100) (7200) (7400) (6700) (6900) (7100) (7200) (6900) (7100) (6700) (7400) (7900) (7600 7700) (7700) (7900) (7600) (8100) (7900) (7700) (7600) (7900) (7700) (8100) (7900) (7700) (7600) (7400) (7200) (7600) (7400) (7700) (7600) (7400) (7200) (7100) (6900) (7200) (7100) (7400) (7200) (7100) (6900) (6700) (6600) (6900) (6700) (7100) (6900) (6200) (7100 7200) (7200) (7400) (7100) (6900) (6700) (6600) (6400) (6700) (6600) (6900) (6700) (7100) (6900) (7200) (7100) (7400) (7200) (7600) (7400) (7200 7100) (7400) (7900) (7200 7100) (7100) (6900) (6700) (6700) (6700) (6900) (7100) (7200) (6900) (7100) (6700) (6600) (6900) (7100) (7200) (7400) (7100) (7200) (6900) (7100) (7400) (7200) (7100) (6900) (7200) (7100) (7400) (7200) (7600) (7400) (7200) (7100) (7400) (7300) (7600) (7400) (7300) (7400) (7600) (7700) (6900) (7100) (7300) (7400) (6600) (6800) (6900) (7100) (7200) (7400) (6400) (6600) (6800) (6900) (6600) (6800) (6400) (7600) (7400) (7200) (7600) (7400) (7200) (7100) (7400) (7200) (8100) (8000) (8300) (8100) (7600) (7700) (7400) (6800) (7700) (7600) (7400) (7400 7200) (7200) (7100) (6900) (6900) (8100) (7900) (7700) (7600) (7900) (7700) (8100) (7900) (7600) (7700) (7900) (8100) (7700) (7900) (7600) (7700) (7900) (7700) (7600) (7400) (7700) (7600) (7900) (7700) (7400) (7600) (7700) (7900) (7600) (7700) (7400) (7600) (7200) (7400) (7600) (7700) (7400) (7600) (7200) (7400) (7600) (7700) (7900) (8100) (7700) (7900) (7600) (7700) (7900) (8100) (8300) (8400) (8100) (8300) (7900) (8400) (7900) (7700 7600) (7600) (7400) (7200) (7200) (7000) (6900) (6700) (6500) (6900) (6700) (7000) (6900) (7100) (7200) (6400) (6200) (7200) (6500) (7100) (6400 7200 6700))) :lonset (quote (174 349 523 698 872 1047 1221 1395 1744 2093 2267 2442 2791 2965 3140 3314 3488 3663 3837 4012 4186 4535 4884 5058 5233 5581 5756 5930 6105 6279 6453 6628 6802 6977 7151 7326 7500 7674 7849 8023 8198 8372 8547 8721 8895 9070 9244 9419 9593 9767 9942 10116 10291 10465 10640 10814 10988 11163 11512 11860 12035 12384 12558 12733 12907 13081 13256 13430 13605 13779 13953 14128 14302 14477 14651 14826 15000 15174 15349 15523 15698 15872 16047 16221 16395 16570 16744 18314 18488 18663 18837 19012 19186 19360 19535 21105 21279 21453 21628 21802 21977 22151 22326 23895 24070 24244 24419 24593 24767 24942 25116 26686 26860 27035 27209 27384 27558 27733 27907 28256 28605 28953 29302 29651 30000 30349 30698 31046 31395 31744 32093 32442 32791 33663 33837 34012 34186 34360 34535 34709 34884 35058 35233 35407 35581 35756 35930 36105 36279 36453 36628 36802 36977 37151 37326 37500 37674 37849 38023 38198 38372 38546 38721 38895 39070 39244 39419 39593 39767 39942 40116 40291 40465 42035 42209 42384 42558 42733 42907 43081 43256 44826 45000 45174 45349 45523 45698 45872 46046 47616 47791 47965 48140 48314 48488 48663 48837 50407 50581 50756 50930 51105 51279 51453 51628 51802 51977 52151 52326 52500 52674 52849 53023 53198 53372 53546 53721 53895 54070 54244 54419 54767 55116 55291 55465 55640 55814 55988 56163 56337 56512 56686 56860 57035 57209 57384 57558 57733 57907 58081 58256 58430 58605 61395)) :ldur (quote ((175) (174) (175) (174) (175) (174) (174) (349) (349) (87 87) (175) (349) (174) (175) (174) (174) (175) (174) (175) (174) (349) (349) (87 87) (175) (348) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (349) (348) (87 88) (349) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (88 87) (174) (175) (87 87) (174) (175) (174) (349) (174) (175) (174) (175) (174) (174) (175) (349) (174) (174) (175) (174) (175) (174) (175) (348) (175) (174) (175) (174) (174) (175) (174) (349) (174) (175) (174) (175) (174) (175) (174) (349) (349) (348) (349) (349) (349) (349) (349) (348) (349) (349) (349) (349) (349) (697) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (87 87) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (1541) (174) (175) (174) (175) (174) (174) (175) (1395) (174) (174) (175) (174) (175) (174) (174) (1541) (175) (174) (175) (174) (174) (175) (174) (1541) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (348) (349) (88 87) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (2790 2790 2790))) :lvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (88 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((4800) (5000) (5200) (5300) (5000) (5200) (4800) (5500) (4300) (5500) (5700) (5900) (6000) (5700) (5900) (5500) (6000) (5900) (6000) (6200) (6400) (5500) (5700) (5900) (6000) (5200) (5400) (5500) (5700) (5900) (6000) (5000) (5200) (5400) (5500) (5200) (5400) (5000) (5500) (4700) (4800) (5000) (5200) (5400) (5500) (5200) (4700) (4800) (5000) (3800) (4300) (4500) (4700) (4800) (4500) (4700) (4300) (5000) (5500) (5400) (5500) (5700) (5000) (5200) (5400) (5500) (5200) (5400) (5000) (5700) (6200) (6000) (6200) (5500) (6700) (6500) (6400) (6200) (6500) (6400) (6700) (6500) (6400) (6500) (6200) (6400) (6900) (6700) (6500) (6400) (6700) (6500) (6900) (6700) (6500) (6700) (6400) (6500) (7000) (6900) (6700) (6500) (6900) (6700) (7000) (6900) (6700) (6500) (6400) (6200) (6500) (6400) (6700) (6500) (6400) (6200) (6000) (5900) (6200) (6000) (6400) (6200) (6000) (5900) (5700) (5600) (5900) (5700) (6000) (5900) (5200) (6000 6200) (6200) (6000) (5900) (5700) (5500) (5400) (5700) (5600) (5900) (5700) (6000) (5900) (6200) (6000) (6400) (6200) (6500) (6400) (5700) (6400) (5200) (5700) (4500) (6400) (6200) (6000) (5900) (6200) (6100) (6400) (6200) (5700) (5900) (6000) (6200) (5900) (6000) (5700) (5900) (6200) (6000) (5900) (5700) (6000) (5900) (6200) (6000) (5500) (5700) (5800) (6000) (5700) (5800) (5500) (5700) (5800) (5700) (5500) (5300) (6200) (6000) (5800) (5700) (6500) (6400) (6200) (6400) (5000) (5200) (5300) (5500) (5200) (5300) (5000) (5200) (4800) (5000) (5200) (5300) (5000) (5200) (5300) (5500) (4300) (4800 3600))) :lonset (quoteldur (quote ((174) (175) (174) (174) (175) (174) (175) (349) (348) (175) (174) (175) (174) (175) (174) (174) (349) (349) (349) (349) (349) (348) (349) (349) (349) (349) (349) (348) (349) (349) (843) (175) (174) (174) (175) (174) (175) (174) (349) (349) (349) (348) (349) (349) (349) (349) (523) (175) (348) (349) (174) (174) (175) (174) (175) (174) (175) (348) (349) (349) (349) (174) (175) (174) (175) (174) (174) (175) (174) (349) (349) (349) (349) (174) (174) (175) (174) (175) (174) (174) (175) (349) (349) (348) (349) (175) (174) (175) (174) (174) (175) (174) (175) (348) (349) (349) (349) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (349) (349) (87 87) (349) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (349) (349) (349) (349) (349) (348) (174) (174) (175) (174) (175) (174) (174) (1541) (175) (174) (174) (175) (174) (175) (174) (1541) (174) (175) (174) (175) (174) (174) (175) (1541) (174) (174) (175) (174) (175) (174) (175) (348) (349) (349) (349) (349) (349) (348) (349) (349) (349) (349) (349) (174) (174) (175) (174) (175) (174) (175) (174) (349) (349) (348) (349) (175) (174) (175) (174) (349) (349) (2790 2790))) :lvel (quoteloffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (((0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0))))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 2 24 (list (quote g) (quote g)) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1 1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :midi-player) 1 nil 1000 0 (om-make-point 370 280) (om-make-point 400 20) 0 1 (quote :normal) (quote t) nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "invent1.mid" (quote midifile) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil))) (om-make-point 100 80) (om-make-point 50 72) (let ((newobj (load-midi (om-make-pathname :directory (quote (:relative "in-files")) :device :unspecific :host :unspecific :name "invent1" :type "mid")))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "invent1.mid") (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (outport player deltapict zoom obj-mode cmnpref notechancolor? grillestep mode winsize winpos show-stems scale)) (list 0 (quote :midi-player) (om-make-point 0 0) 1 0 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0 (om-make-point 370 280) (om-make-point 10 40) (quote t) nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 623 549) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((14 0 0 0 nil 0) (1 0 0 1 nil 0) (13 0 1 0 nil 0) (10 0 1 1 nil 0) (7 0 1 2 nil 0) (4 0 1 3 nil 0) (2 0 3 0 nil 0) (3 1 4 0 nil 0) (5 0 6 0 nil 0) (6 1 7 0 nil 0) (8 0 9 0 nil 0) (9 1 10 0 nil 0) (11 0 12 0 nil 0) (12 1 13 0 nil 0) (27 0 14 0 nil 0) (24 0 14 1 nil 0) (21 0 14 2 nil 0) (18 0 14 3 nil 0) (15 0 14 4 nil 0) (16 1 15 0 nil 0) (17 0 16 0 nil 0) (19 1 18 0 nil 0) (20 0 19 0 nil 0) (22 1 21 0 nil 0) (23 0 22 0 nil 0) (25 1 24 0 nil 0) (26 0 25 0 nil 0) (28 1 27 0 nil 0) (29 0 28 0 nil 0) (0 0 30 0 nil 0))) 6.140003 nil "" (om-make-point 0 0) (om-make-point 1406 679)) (quote nil) (om-make-point 128 17) nil (list (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000) (6200) (6400) (6500) (6200) (6400) (6000) (6700) (7200) (6900 7100) (7100) (7200) (7400) (6700) (6900) (7100) (7200) (6900) (7100) (6700) (7400) (7900) (7600 7700) (7700) (7900) (7600) (8100) (7900) (7700) (7600) (7900) (7700) (8100) (7900) (7700) (7600) (7400) (7200) (7600) (7400) (7700) (7600) (7400) (7200) (7100) (6900) (7200) (7100) (7400) (7200) (7100) (6900) (6700) (6600) (6900) (6700) (7100) (6900) (6200) (7100 7200) (7200) (7400) (7100) (6900) (6700) (6600) (6400) (6700) (6600) (6900) (6700) (7100) (6900) (7200) (7100) (7400) (7200) (7600) (7400) (7200 7100) (7400) (7900) (7200 7100) (7100) (6900) (6700) (6700) (6700) (6900) (7100) (7200) (6900) (7100) (6700) (6600) (6900) (7100) (7200) (7400) (7100) (7200) (6900) (7100) (7400) (7200) (7100) (6900) (7200) (7100) (7400) (7200) (7600) (7400) (7200) (7100) (7400) (7300) (7600) (7400) (7300) (7400) (7600) (7700) (6900) (7100) (7300) (7400) (6600) (6800) (6900) (7100) (7200) (7400) (6400) (6600) (6800) (6900) (6600) (6800) (6400) (7600) (7400) (7200) (7600) (7400) (7200) (7100) (7400) (7200) (8100) (8000) (8300) (8100) (7600) (7700) (7400) (6800) (7700) (7600) (7400) (7400 7200) (7200) (7100) (6900) (6900) (8100) (7900) (7700) (7600) (7900) (7700) (8100) (7900) (7600) (7700) (7900) (8100) (7700) (7900) (7600) (7700) (7900) (7700) (7600) (7400) (7700) (7600) (7900) (7700) (7400) (7600) (7700) (7900) (7600) (7700) (7400) (7600) (7200) (7400) (7600) (7700) (7400) (7600) (7200) (7400) (7600) (7700) (7900) (8100) (7700) (7900) (7600) (7700) (7900) (8100) (8300) (8400) (8100) (8300) (7900) (8400) (7900) (7700 7600) (7600) (7400) (7200) (7200) (7000) (6900) (6700) (6500) (6900) (6700) (7000) (6900) (7100) (7200) (6400) (6200) (7200) (6500) (7100) (6400 7200 6700))) :lonset (quote (174 349 523 698 872 1047 1221 1395 1744 2093 2267 2442 2791 2965 3140 3314 3488 3663 3837 4012 4186 4535 4884 5058 5233 5581 5756 5930 6105 6279 6453 6628 6802 6977 7151 7326 7500 7674 7849 8023 8198 8372 8547 8721 8895 9070 9244 9419 9593 9767 9942 10116 10291 10465 10640 10814 10988 11163 11512 11860 12035 12384 12558 12733 12907 13081 13256 13430 13605 13779 13953 14128 14302 14477 14651 14826 15000 15174 15349 15523 15698 15872 16047 16221 16395 16570 16744 18314 18488 18663 18837 19012 19186 19360 19535 21105 21279 21453 21628 21802 21977 22151 22326 23895 24070 24244 24419 24593 24767 24942 25116 26686 26860 27035 27209 27384 27558 27733 27907 28256 28605 28953 29302 29651 30000 30349 30698 31046 31395 31744 32093 32442 32791 33663 33837 34012 34186 34360 34535 34709 34884 35058 35233 35407 35581 35756 35930 36105 36279 36453 36628 36802 36977 37151 37326 37500 37674 37849 38023 38198 38372 38546 38721 38895 39070 39244 39419 39593 39767 39942 40116 40291 40465 42035 42209 42384 42558 42733 42907 43081 43256 44826 45000 45174 45349 45523 45698 45872 46046 47616 47791 47965 48140 48314 48488 48663 48837 50407 50581 50756 50930 51105 51279 51453 51628 51802 51977 52151 52326 52500 52674 52849 53023 53198 53372 53546 53721 53895 54070 54244 54419 54767 55116 55291 55465 55640 55814 55988 56163 56337 56512 56686 56860 57035 57209 57384 57558 57733 57907 58081 58256 58430 58605 61395)) :ldur (quote ((175) (174) (175) (174) (175) (174) (174) (349) (349) (87 87) (175) (349) (174) (175) (174) (174) (175) (174) (175) (174) (349) (349) (87 87) (175) (348) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (349) (348) (87 88) (349) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (88 87) (174) (175) (87 87) (174) (175) (174) (349) (174) (175) (174) (175) (174) (174) (175) (349) (174) (174) (175) (174) (175) (174) (175) (348) (175) (174) (175) (174) (174) (175) (174) (349) (174) (175) (174) (175) (174) (175) (174) (349) (349) (348) (349) (349) (349) (349) (349) (348) (349) (349) (349) (349) (349) (697) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (87 87) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (1541) (174) (175) (174) (175) (174) (174) (175) (1395) (174) (174) (175) (174) (175) (174) (174) (1541) (175) (174) (175) (174) (174) (175) (174) (1541) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (348) (349) (88 87) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (2790 2790 2790))) :lvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (88 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6200) (6400) (6500) (6700) (6900) (7000) (6100) (7000) (6900) (6700) (6500) (6400) (6500) (6900) (7400) (6700) (7000) (7600) (7400) (7600) (7700) (7900) (8100) (8200) (7300) (8200) (8100) (7900) (7700) (7600) (7700) (7400) (7600) (7700) (7900) (8100) (7000) (8100) (7900) (7700) (7600) (7400) (7600) (7200) (7400) (7600) (7700) (7900) (6900) (7900) (7700) (7600) (7400) (7200) (7400) (7600) (7700) (7400) (7600) (7700) (6700) (7200) (7400) (7600) (7200) (7400) (7600) (6500) (7000) (6900) (6700) (7200) (7000) (6900) (6700) (6500) (6400) (6500) (6700) (6900 6700) (6700) (6500) (6500) (7200) (7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7200) (7000) (6900) (6700) (6500) (6400) (7200) (6200) (6400) (6600) (6700) (6900) (7000) (6900) (6700) (6500) (6400) (6200) (7000) (6000) (6200) (6400) (6500) (6700) (6900) (7100) (7200) (7400) (7600) (7700) (6800) (7700) (7600) (7400) (7200) (7100) (7200) (7100) (7400) (7200) (7100) (6900) (6800) (6900) (6800) (6600) (6400) (6200) (6000) (6200) (6400) (6600) (6800) (6900) (6200) (7200) (7100) (6900) (6800) (6600) (6400) (6600) (6800) (6900) (7100) (7200) (6600) (7600) (7400) (7200) (7100) (6900) (6800) (6900) (7100) (7200) (7400) (7600) (6900) (7700) (7600) (7400) (7200) (7100) (8100) (8000) (7800) (7600) (8100) (7400) (7200 7100) (7100) (6900) (6900) (6900) (7000) (7200) (6200) (6600) (6900) (7000) (6700) (6900) (7000) (7200) (7400) (6400) (7400) (7200) (7000) (6900) (6700) (6900) (7700) (7600) (7700) (6700) (7600) (7400) (7600) (7700) (7900) (8100) (8200) (7300) (8200) (8100) (7900) (7700) (7600) (7700) (7400) (6700) (7400) (7300) (7600) (6900) (7300) (7400) (7100) (7300) (7400) (7400) (7200) (7000) (6900) (6700) (6500) (7000) (6100) (6200) (6400) (6500) (6700) (6900) (7400) (6500) (6400) (6200) (6200))) :lonset (quote (0 152 303 455 606 758 909 1061 1212 1364 1515 1667 1818 2121 2424 2727 3030 3333 3636 3788 3939 4091 4242 4394 4545 4697 4848 5000 5152 5303 5455 5606 5758 5909 6061 6212 6364 6515 6667 6818 6970 7121 7273 7424 7576 7727 7879 8030 8182 8333 8485 8636 8788 8939 9091 9242 9394 9545 9697 9848 10000 10909 11061 11212 11364 11515 11667 11818 12424 13030 13333 13636 13788 13939 14091 14242 14394 14545 14697 14848 15000 15303 15455 15758 16061 16364 16515 16667 16818 16970 17121 17273 17424 17576 17727 17879 18030 18182 18333 18485 18636 18788 18939 19091 19242 19394 19545 19697 19848 20000 20152 20303 20455 20606 20758 20909 21061 21212 21364 21515 21667 21818 21970 22121 22273 22424 22576 22727 22879 23030 23182 23333 23485 23636 23788 23939 24091 24242 24394 24545 24697 24848 25000 25152 25303 25455 25606 25758 25909 26061 26212 26364 26515 26667 26818 26970 27121 27273 27424 27576 27727 27879 28030 28182 28333 28485 28636 28788 28939 29091 29242 29394 29545 29697 29849 30000 30152 30303 30455 30606 30758 30909 31061 31212 31364 31515 31667 31818 31970 32121 32273 32424 32879 33030 33182 33485 33636 34091 34242 34394 34545 34849 35152 35455 35606 35758 35909 36061 36212 36364 36515 36667 36818 36970 37121 37273 37576 37727 37879 38182 38485 39091 39242 39394 39545 39697 39849 40000 40152 40303 40455 40606 40758 40909 41212 41515 41970 42121 42273 42424 42576 42727 42879 43030 43485 43636 43788 43939 44091 44242 44394 44545 44697 44849 45000 45152 45303 45455 45606 45758 46061 46212 46364 48182)) :ldur (quote ((152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (303) (303) (303) (303) (303) (303) (152) (151) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (303) (152) (151) (152) (151) (152) (151) (303) (606) (303) (303) (152) (151) (152) (151) (152) (151) (152) (151) (76 76) (303) (152) (303) (303) (303) (84 75) (83 83) (84 83) (83 84) (84 83) (83 84) (84 83) (83 84) (83 83) (83 84) (83 83) (83 84) (83 83) (83 84) (83 83) (83 84) (83 83) (83 84) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (455) (151) (76 76) (303) (151) (455) (151) (152) (151) (304) (303) (303) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (303) (151) (152) (303) (303) (303) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (303) (303) (455) (151) (152) (151) (152) (151) (152) (151) (455) (151) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (303) (151) (152) (1818))) :lvel (quote ((64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64 64) (64) (64) (64) (64) (64) (64 64) (48 48) (49 48) (49 49) (50 50) (51 51) (52 51) (52 52) (53 53) (54 53) (54 54) (55 55) (56 55) (57 56) (57 57) (58 58) (59 58) (59 59) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64 64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (76 0) (0) (0) (0) (0) (0) (75 0) (76 0) (75 0) (76 0) (75 0) (76 0) (75 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (76 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7600) (7500) (7400) (7300) (7100) (6900) (6800) (6600) (6800) (6900) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (6400) (6300) (6400) (6600) (6800) (6900) (7100) (7300) (7500) (7600) (7500) (7300) (7100) (7600) (6400) (8000) (7600) (7300) (7600) (7500) (7600) (7300) (7000) (6600) (7800) (7500) (7100) (7500) (7300) (7500) (7100) (6800) (6400) (7600) (7300) (7000) (8000) (7800) (7600) (7500) (7300) (7100) (7000) (6400) (6300) (6400) (7000) (6800) (7000) (7100) (7000) (7100) (6300) (6100) (7100) (6100) (7000) (7100) (7100) (7500) (7800) (8300) (8300) (7800) (7500) (7100) (6600) (6300) (5900) (7600) (7500) (7400) (7300) (7100) (6900) (6800) (6600) (6800) (6900) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (6400) (6300) (6400) (6600) (6800) (6900) (7100) (7300) (7500) (7600) (7500) (7300) (7100) (7600) (6400) (8000) (7600) (7300) (7600) (7500) (7600) (7300) (7000) (6600) (7800) (7500) (7100) (7500) (7300) (7500) (7100) (6800) (6400) (7600) (7300) (7000) (8000) (7800) (7600) (7500) (7300) (7100) (7000) (6400) (6300) (6400) (7000) (6800) (7000) (7100) (7000) (7100) (6300) (6100) (7100) (6100) (7000) (7100) (7100) (7500) (7800) (8300) (8300) (7800) (7500) (7100) (6600) (6300) (5900) (5900) (6100) (6300) (6400) (6600) (6800) (7000) (7100) (7000) (6800) (6600) (7100) (5900) (8300) (8200) (8100) (8000) (7800) (7600) (7500) (7300) (7500) (7600) (7500) (7800) (7600) (7800) (7500) (7300) (7500) (7100) (7000) (7100) (7500) (7300) (7500) (8000) (7900) (8000) (7300) (7100) (7300) (7600) (7500) (7600) (8200) (8000) (8200) (7500) (7300) (7500) (8000) (7900) (8000) (8300) (8200) (8300) (7500) (7400) (7500) (8200) (8000) (8200) (7900) (7700) (7900) (7500) (7400) (7400) (8100) (8000) (7800) (7600) (7500) (7600) (7300) (7200) (7300) (7600) (7500) (7600) (8000) (7800) (7600) (7500) (7300) (7500) (7100) (7000) (7100) (7300) (7100) (7300) (7600) (7500) (7300) (7100) (7000) (7100) (6800) (6700) (6800) (6900) (6800) (6900) (7300) (7100) (7300) (6900) (6800) (6900) (7600) (7500) (7600) (6700) (6500) (6700) (7000) (6800) (7000) (5900) (5800) (5900) (6800) (6400) (6100) (5800) (6700) (6800) (6300) (5900) (5600) (6400) (6600) (6800) (6900) (7100) (7300) (7500) (7600) (7500) (7300) (7100) (7600) (7100) (6900) (7100) (6800) (6600) (6800) (7600) (7500) (7400) (7300) (7100) (6900) (6800) (6600) (6800) (6900) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (6400) (6300) (6400) (6600) (6900) (7100) (7500) (7800) (6300) (6400) (6800) (6900) (7300) (7600) (6100) (6600) (6900) (7100) (7300) (7500) (7600) (7300) (6900) (7800) (7600) (7500) (7300) (7100) (6900) (6800) (6400) (6300) (6400) (6800) (6600) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (7100) (6900) (7100) (7600) (7500) (7600) (7100) (6800) (6400) (5900) (6100) (6300) (6400) (6600) (6800) (7000) (7100) (7000) (6800) (6600) (7100) (5900) (8300) (8200) (8100) (8000) (7800) (7600) (7500) (7300) (7500) (7600) (7500) (7800) (7600) (7800) (7500) (7300) (7500) (7100) (7000) (7100) (7500) (7300) (7500) (8000) (7900) (8000) (7300) (7100) (7300) (7600) (7500) (7600) (8200) (8000) (8200) (7500) (7300) (7500) (8000) (7900) (8000) (8300) (8200) (8300) (7500) (7400) (7500) (8200) (8000) (8200) (7900) (7700) (7900) (7500) (7400) (7400) (8100) (8000) (7800) (7600) (7500) (7600) (7300) (7200) (7300) (7600) (7500) (7600) (8000) (7800) (7600) (7500) (7300) (7500) (7100) (7000) (7100) (7300) (7100) (7300) (7600) (7500) (7300) (7100) (7000) (7100) (6800) (6700) (6800) (6900) (6800) (6900) (7300) (7100) (7300) (6900) (6800) (6900) (7600) (7500) (7600) (6700) (6500) (6700) (7000) (6800) (7000) (5900) (5800) (5900) (6800) (6400) (6100) (5800) (6700) (6800) (6300) (5900) (5600) (6400) (6600) (6800) (6900) (7100) (7300) (7500) (7600) (7500) (7300) (7100) (7600) (7100) (6900) (7100) (6800) (6600) (6800) (7600) (7500) (7400) (7300) (7100) (6900) (6800) (6600) (6800) (6900) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (6400) (6300) (6400) (6600) (6900) (7100) (7500) (7800) (6300) (6400) (6800) (6900) (7300) (7600) (6100) (6600) (6900) (7100) (7300) (7500) (7600) (7300) (6900) (7800) (7600) (7500) (7300) (7100) (6900) (6800) (6400) (6300) (6400) (6800) (6600) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (7100) (6900) (7100) (7600) (7500) (7600) (7100) (6800) (6400))) :lonset (quote (208 625 1042 1458 1875 2292 2708 3125 3542 3646 3750 3958 4062 4167 4375 4479 4583 4792 4896 5000 5417 5833 6250 6667 7083 7500 7917 8125 8333 8542 8750 9167 10208 10625 11042 11458 11562 11667 11875 12083 12292 12708 13125 13542 13958 14062 14167 14375 14583 14792 15208 15625 16042 16458 16875 17292 17708 18125 18542 18750 18958 19062 19167 19375 19479 19583 19792 19896 20000 20208 20417 20625 20833 21042 21250 21875 22083 22292 22500 23125 23333 23542 23750 23958 24167 24375 25208 25625 26042 26458 26875 27292 27708 28125 28542 28646 28750 28958 29062 29167 29375 29479 29583 29792 29896 30000 30417 30833 31250 31667 32083 32500 32917 33125 33333 33542 33750 34167 35208 35625 36042 36458 36562 36667 36875 37083 37292 37708 38125 38542 38958 39062 39167 39375 39583 39792 40208 40625 41042 41458 41875 42292 42708 43125 43542 43750 43958 44062 44167 44375 44479 44583 44792 44896 45000 45208 45417 45625 45833 46042 46250 46875 47083 47292 47500 48125 48333 48542 48750 48958 49167 49375 50000 50417 50833 51250 51667 52083 52500 52917 53125 53333 53542 53750 54167 55208 55625 56042 56458 56875 57292 57708 58125 58542 58646 58750 58958 59062 59167 59375 59479 59583 59792 59896 60000 60208 60312 60417 60625 60729 60833 61042 61146 61250 61458 61562 61667 61875 61979 62083 62292 62396 62500 62708 62812 62917 63125 63229 63333 63542 63646 63750 63958 64062 64167 64375 64479 64583 64792 64896 65000 65208 65625 66042 66458 66562 66667 66875 66979 67083 67292 67396 67500 67708 68125 68542 68958 69062 69167 69375 69479 69583 69792 69896 70000 70208 70625 71042 71458 71562 71667 71875 71979 72083 72292 72396 72500 72708 72812 72917 73125 73229 73333 73542 73646 73750 73958 74062 74167 74375 74479 74583 74792 74896 75000 75208 75417 75625 75833 76042 76250 76458 76667 76875 77500 77917 78333 78750 79167 79583 80000 80417 80625 80833 81042 81250 81875 81979 82083 82292 82396 82500 82708 83125 83542 83958 84375 84792 85208 85625 86042 86146 86250 86458 86562 86667 86875 86979 87083 87292 87396 87500 87917 88333 88750 89167 89583 90000 90417 90833 91250 91667 92083 92500 92917 93333 93750 94167 94583 95000 95417 95833 96250 97708 97917 98125 98333 98542 98750 98958 99062 99167 99375 99479 99583 99792 99896 100000 100208 100312 100417 100625 100729 100833 101042 101146 101250 101458 101667 101875 102500 102917 103333 103750 104167 104583 105000 105417 105625 105833 106042 106250 106667 107708 108125 108542 108958 109375 109792 110208 110625 111042 111146 111250 111458 111562 111667 111875 111979 112083 112292 112396 112500 112708 112812 112917 113125 113229 113333 113542 113646 113750 113958 114062 114167 114375 114479 114583 114792 114896 115000 115208 115312 115417 115625 115729 115833 116042 116146 116250 116458 116562 116667 116875 116979 117083 117292 117396 117500 117708 118125 118542 118958 119062 119167 119375 119479 119583 119792 119896 120000 120208 120625 121042 121458 121562 121667 121875 121979 122083 122292 122396 122500 122708 123125 123542 123958 124062 124167 124375 124479 124583 124792 124896 125000 125208 125312 125417 125625 125729 125833 126042 126146 126250 126458 126562 126667 126875 126979 127083 127292 127396 127500 127708 127917 128125 128333 128542 128750 128958 129167 129375 130000 130417 130833 131250 131667 132083 132500 132917 133125 133333 133542 133750 134375 134479 134583 134792 134896 135000 135208 135625 136042 136458 136875 137292 137708 138125 138542 138646 138750 138958 139062 139167 139375 139479 139583 139792 139896 140000 140417 140833 141250 141667 142083 142500 142917 143333 143750 144167 144583 145000 145417 145833 146250 146667 147083 147500 147917 148333 148750 150208 150417 150625 150833 151042 151250 151458 151562 151667 151875 151979 152083 152292 152396 152500 152714 152821 152929 153143 153250 153357 153571 153679 153786 153994 154203 154411 154619)) :ldur (quote ((417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (417) (417) (416) (417) (417) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (209) (208) (417) (208) (209) (208) (417) (208) (209) (208) (208) (209) (208) (208) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (417) (417) (416) (417) (417) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (209) (208) (417) (208) (209) (208) (417) (208) (209) (208) (208) (209) (208) (208) (208) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (209) (208) (208) (209) (208) (208) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (625) (104) (104) (209) (104) (104) (208) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (1424) (209) (208) (208) (209) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (208) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (209) (208) (208) (209) (208) (208) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (625) (104) (104) (209) (104) (104) (208) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (1250) (209) (208) (208) (209) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (214) (107) (108) (214) (107) (107) (214) (108) (107) (208) (209) (208) (208))) :lvel (quoteloffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6400) (6900) (7200) (7100) (6400) (7100) (7400) (7200) (7600) (6800) (7600) (6900) (6400) (6900) (7200) (7100) (6400) (7100) (7400) (7200) (6900) (7600) (7200) (7600) (6900) (7200) (6400) (6700) (6500) (6900) (7400) (7700) (7400) (7100) (7400) (6700) (7100) (6200) (6500) (6400) (6700) (7200) (7600) (7200) (6900) (7200) (6500) (7400) (7100) (6700) (7100) (6400) (7200) (6900) (6500) (6900) (6200) (7100) (7200) (6700) (7200) (7600) (7400) (6700) (7400) (7700) (7600) (7900) (7100) (7900) (7200) (6700) (7200) (7600) (7400) (6700) (7400) (7700) (7600) (7200) (7900) (7600) (8400) (8100) (7600) (8100) (7200) (7600) (6900) (7200) (7400) (7800) (8100) (8400) (8300) (7900) (7400) (7900) (7100) (7400) (6700) (7100) (7200) (7600) (7900) (8300) (8100) (7800) (7500) (7800) (7100) (7500) (6600) (6900) (6700) (7900) (7600) (7200) (7600) (6900) (7800) (7400) (7100) (7400) (6700) (7600) (7200) (6900) (7200) (6600) (7900) (7800) (7600) (7500) (7800) (7100) (7500) (7600) (7900) (8200) (7900) (7600) (7900) (7300) (7600) (7900) (7600) (7300) (7600) (6900) (7700) (8100) (7700) (7400) (7700) (7100) (7400) (7700) (7400) (7100) (7400) (6700) (7600) (7900) (7600) (7200) (7600) (6900) (7200) (7500) (7200) (6900) (7200) (6600) (7400) (7700) (7400) (7100) (7400) (6800) (7100) (7400) (7100) (6800) (7100) (6400) (6400) (6900) (7200) (7100) (6400) (7100) (7400) (7200) (6900) (6800) (6400) (6900) (7200) (7600) (7200) (6900) (7200) (6600) (6900) (7200) (6900) (6600) (6900) (6300) (7200) (7100) (6900) (6800) (7100) (7400) (7100) (6800) (7100) (6200) (6500) (6800) (6500) (6200) (6500) (5900) (6500) (6400) (6200) (6000) (6400) (6900) (6400) (6000) (6400) (5700) (6000) (6300) (6000) (5700) (6000) (5400) (6000) (5900) (5700) (5600) (7100) (6800) (6400) (6400) (6900) (7200) (7100) (6400) (7100) (7400) (7200) (6900) (7200) (7600) (7400) (7100) (7400) (7700) (7600) (7200) (7600) (7900) (7700) (7600) (7400) (7200) (7100) (7200) (7400) (7600) (7700) (7400) (8000) (7400) (8300) (7400) (7200) (8100) (7700) (7400) (7100) (7400) (6800) (7100) (7200) (6900) (6400) (6900) (7100) (6800) (6900) (6400) (6000) (6400) (5700))) :lonset (quote (163 326 489 652 815 978 1141 1304 1630 1957 2283 2609 2772 2935 3098 3261 3424 3587 3750 3913 4239 5380 5543 5707 5870 6033 6196 6359 6522 6848 7174 7500 7989 8152 8315 8478 8641 8804 8967 9130 9457 9783 10109 10598 10761 10924 11087 11413 11902 12065 12228 12391 12717 13207 13370 13533 13696 14022 14348 15815 15978 16141 16304 16467 16630 16793 16957 17283 17609 17935 18261 18424 18587 18750 18913 19076 19239 19402 19565 19891 20217 20543 20870 21033 21196 21359 21522 21685 21848 22011 22174 22500 22826 23152 23478 23641 23804 23967 24130 24293 24457 24620 24783 25109 25435 25761 26087 26250 26413 26576 26739 26902 27065 27228 27391 27717 28207 28370 28533 28696 29022 29511 29674 29837 30000 30326 30815 30978 31141 31304 31467 31630 31793 31957 32120 32283 32446 32609 34076 34239 34402 34565 34728 34891 35054 35217 35380 35543 35707 35870 36685 36848 37011 37174 37337 37500 37663 37826 37989 38152 38315 38478 39293 39457 39620 39783 39946 40109 40272 40435 40598 40761 40924 41087 41902 42065 42228 42391 42554 42717 42880 43043 43207 43370 43533 43696 44511 44674 44837 45000 45163 45326 45489 45652 45978 46304 46630 46957 47120 47283 47446 47609 47772 47935 48098 48261 48424 48587 48750 48913 49076 49239 49402 49565 49728 49891 50054 50217 50380 50543 50707 50870 51033 51196 51359 51522 51685 51848 52011 52174 52337 52500 52663 52826 52989 53152 53315 53478 53641 53804 53967 54130 54293 54457 54620 54783 55109 55435 55761 56250 56413 56576 56739 56902 57065 57228 57391 57554 57717 57880 58043 58207 58370 58533 58696 58859 59022 59185 59348 59511 59674 59837 60000 60163 60326 60489 60652 60815 60978 61141 61304 61467 61630 61793 61957 62120 62283 62446 62609 62772 62935 63098 63261 63424 63587 63750 63913 64076 64239 64402 64565 66522)) :ldur (quote ((163) (163) (163) (163) (163) (163) (163) (326) (327) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (163) (164) (163) (163) (163) (163) (163) (326) (326) (326) (489) (163) (163) (163) (163) (163) (163) (163) (327) (326) (326) (489) (163) (163) (163) (326) (489) (163) (163) (163) (326) (490) (163) (163) (163) (326) (326) (326) (163) (163) (163) (163) (163) (163) (164) (326) (326) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (327) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (326) (163) (163) (163) (163) (163) (164) (163) (163) (326) (326) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (326) (490) (163) (163) (163) (326) (489) (163) (163) (163) (326) (489) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (326) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (327) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (326) (326) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (1957))) :lvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((4200 4300) (4300) (7900 8100) (7900 7800) (7900 8100) (7900 8100) (7900 8100) (7900 8100) (7900 8100) (7900 7800) (8100) (5200 5400) (5400) (5700) (5500) (5400) (5200) (7600) (7400) (7300) (7400) (7600) (6600) (4800 5000) (4800 5000) (5000 4800) (5000 4800) (5000 4800) (4800 4800) (4800 5000) (4800 4700) (4700) (4300) (4700) (5000) (5500) (4700) (4800) (5200) (5500) (6000) (5200) (5500) (5400) (5700) (5000) (5400) (5700) (6200) (5900) (5500) (5900) (6200) (6700) (8100 8300) (8300) (7400 7600) (7600) (6700 6900) (6900) (7900 8100) (8100) (7300 7400) (7400) (6600 6700) (6700) (7800 7900) (7900) (6900 7100) (7100) (6200 6400) (6400) (5400 5500) (5500) (4700 4900) (4900) (4200 4300) (4300) (6400 6200) (6900 6600) (6400 6600) (6200) (6400 6200) (6900 6600) (6400 6600) (6200) (6400 6200) (6900 6600) (6400 6600) (7100 6200) (5300) (5200) (6200 6400) (6400) (6700 6900) (6900) (6100 6200) (6200) (6600 6700) (6700) (5900 6100) (6100) (6400 6600) (6600) (6200) (6100) (6200) (6400 6600) (6200) (6700 6900) (6600) (7400) (7800) (8100) (8600) (8100) (7800) (8100) (7400) (7800) (8100) (7800) (7900) (8100) (7400) (7900) (8300) (7900) (7400) (7900) (7100) (7400) (7900) (7100) (7200) (7400) (6700) (7200) (7600) (7200) (6900) (7200) (6600) (6900) (7200) (6600) (6700) (6900) (6300) (6600) (7100) (6600) (6300) (6600) (5900) (6300) (6600) (6300) (6400) (6600) (5900) (6400) (6700) (6400) (5900) (6400) (5500) (5900) (6400) (6300) (6400) (6700) (6000) (6500) (6900) (6500) (6000) (6500) (5700) (6000) (6500) (6400) (6500) (6900) (6300) (6600) (6900) (6600) (6300) (6600) (5900) (6300) (5400) (5700) (5500) (5400) (5500) (5900) (6400) (5900) (5500) (5900) (5200) (5400) (5500) (5200) (5500) (5900) (6400) (5000 5200) (5200) (5900 6000) (6000) (6700 6900) (6900) (4800 5000) (5000) (5700 5900) (5900) (6600 6700) (6700) (4700 4800) (4800) (5500 5700) (5700) (6400 6600) (6600) (7200 7400) (7400) (7800 7900) (7900) (8100 8300) (8300) (6200) (6500) (6500 6400) (7200 6700) (6500 6700) (6400) (6700 6600) (7200 6900) (6700 6900) (6600) (6900 6700) (7300 7000) (6900 7000) (7400 6700) (7100 7200) (7200) (6900 7100) (7100) (6900 7000) (7000) (6700 6900) (6900) (7200 7400) (7400) (6600 6700) (6900 6700) (7200 7100) (7200 7400) (6900 7100) (6700) (7100) (6200) (6700) (5500))) :lonset (quote (42 200 674 831 989 1147 1305 1463 1621 1779 1937 2568 2726 3358 3516 3674 3831 4463 4779 5095 5410 5568 5726 6358 6516 6674 6831 6989 7147 7305 7463 7621 7937 8253 8568 8884 9200 9516 9831 10147 10463 10779 11095 11410 11726 12042 12358 12674 12989 13305 13621 13937 14253 14568 15358 15516 15989 16147 16621 16779 17252 17410 17884 18042 18516 18674 19147 19305 19779 19937 20410 20568 21042 21200 21674 21831 22305 22463 22858 23016 23174 23331 23489 23647 23805 23963 24121 24279 24437 24595 25305 25937 26726 26884 27042 27200 27358 27516 27674 27831 27989 28147 28305 28463 28621 28779 28937 29095 29252 29410 29568 29726 30358 30516 30674 30831 30989 31147 31305 31463 31621 31779 31937 32095 32252 32410 32568 32726 32884 33042 33200 33358 33516 33674 33831 33989 34147 34305 34463 34621 34779 34937 35095 35252 35410 35568 35726 35884 36042 36200 36358 36516 36674 36831 36989 37147 37305 37463 37621 37779 37937 38095 38252 38410 38568 38726 38884 39042 39200 39358 39516 39674 39831 39989 40147 40305 40463 40621 40779 40937 41095 41252 41410 41568 41726 41884 42042 42200 42358 42516 42674 42831 42989 43147 43305 43463 43621 43779 43937 44095 44252 44410 44568 44726 44884 45042 45200 45358 45516 45989 46147 46621 46779 47252 47410 47884 48042 48516 48674 49147 49305 49779 49937 50410 50568 51042 51200 51674 51831 52305 52463 52937 53095 53726 54358 55068 55226 55384 55542 55700 55858 56016 56173 56331 56489 56647 56805 57042 57200 57358 57516 57673 57831 57989 58147 58305 58463 58621 58779 58937 59095 59252 59410 59568 59726 59884 60042 60358)) :ldur (quote ((79 79) (158) (73 73) (74 74) (74 74) (74 74) (74 74) (74 74) (74 74) (73 74) (316) (74 74) (474) (152) (152) (152) (153) (311) (310) (310) (158) (158) (153) (73 79) (73 73) (73 73) (74 74) (74 74) (74 74) (74 74) (74 74) (310) (310) (310) (311) (311) (310) (310) (311) (311) (311) (310) (310) (311) (311) (311) (310) (310) (311) (311) (316) (316) (310) (316) (73 73) (73) (74 74) (74) (74 74) (152) (74 74) (79) (74 79) (79) (79 79) (78) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79) (79 78) (79) (79 79) (79) (73 73) (73 73) (74 73) (74) (74 74) (74 74) (74 74) (74) (74 74) (73 73) (73 73) (157 73) (153) (158) (79 74) (74) (74 74) (74) (73 73) (73) (74 73) (74) (74 74) (79) (74 74) (79) (153) (152) (158) (73 73) (158) (74 74) (153) (316) (152) (152) (152) (153) (153) (153) (153) (158) (158) (158) (158) (157) (153) (153) (153) (153) (153) (153) (158) (152) (158) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (153) (153) (158) (153) (153) (153) (152) (152) (152) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (158) (153) (153) (153) (158) (153) (152) (152) (152) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (153) (153) (153) (153) (153) (153) (158) (152) (152) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (153) (153) (153) (158) (153) (153) (152) (152) (310) (74 74) (79) (74 74) (79) (74 74) (79) (74 74) (79) (73 73) (78) (74 74) (79) (73 73) (79) (74 74) (153) (74 74) (79) (74 73) (74) (74 74) (153) (73 73) (157) (158) (158) (74 79) (79 79) (79 79) (79) (73 79) (79 73) (78 79) (79) (79 79) (79 79) (79 79) (158 79) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79 79) (79 79) (79 78) (79 79) (158) (158) (158) (158) (316))) :lvel (quote ((108 113) (98) (80 97) (81 85) (80 80) (90 84) (90 93) (77 82) (92 86) (91 96) (121) (119 119) (119) (104) (95) (104) (121) (127) (119) (119) (102) (104) (121) (59 119) (86 86) (80 82) (86 78) (84 88) (82 84) (88 81) (96 96) (123) (101) (123) (119) (113) (107) (115) (113) (98) (109) (102) (100) (110) (104) (109) (119) (107) (111) (102) (102) (102) (111) (121) (94 119) (115) (80 123) (98) (106 106) (101) (100 117) (111) (93 127) (101) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (104 97) (97 92) (98 110) (102) (101 100) (97 97) (100 102) (100) (100 98) (96 97) (95 102) (123 93) (126) (121) (86 109) (104) (100 106) (104) (104 104) (86) (106 107) (106) (102 100) (97) (97 123) (110) (89) (90) (95) (100 112) (98) (104 86) (97) (127) (95) (84) (68) (83) (96) (77) (85) (84) (58) (88) (83) (75) (111) (111) (80) (80) (91) (81) (76) (86) (95) (97) (102) (83) (89) (78) (78) (75) (85) (82) (90) (80) (88) (90) (72) (83) (95) (78) (81) (77) (80) (76) (96) (85) (77) (85) (88) (80) (84) (83) (61) (83) (83) (83) (82) (77) (78) (89) (92) (78) (91) (82) (70) (83) (83) (83) (84) (76) (85) (83) (80) (68) (63) (75) (45) (53) (89) (89) (84) (74) (75) (86) (85) (89) (90) (66) (77) (82) (93) (83) (83) (83) (97) (97) (85) (77) (98) (101 109) (115) (111 108) (108) (96 102) (119) (95 92) (104) (65 92) (111) (68 104) (104) (98 113) (115) (86 96) (117) (80 117) (121) (101 107) (115) (102 111) (113) (91 108) (119) (102) (126) (85 84) (107 95) (107 107) (107) (66 88) (107 92) (88 88) (88) (88 88) (107 88) (88 88) (88 88) (88 88) (88) (88 88) (88) (88 88) (88) (88 88) (88) (88 88) (88) (88 88) (88 88) (88 88) (88 88) (88 88) (88) (88) (88) (88) (88))) :loffset (quote ((79 0) (0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (0) (79 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (78 0) (0) (79 0) (0) (79 0) (79 0) (78 0) (0) (79 0) (79 0) (79 0) (0) (79 0) (79 0) (79 0) (79 0) (0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (78 0) (0) (79 0) (0) (79 0) (0) (0) (0) (0) (79 0) (0) (79 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (78 0) (0) (79 0) (0) (79 0) (0) (0) (0) (79 0) (79 0) (79 0) (0) (79 0) (79 0) (79 0) (0) (79 0) (79 0) (79 0) (79 0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (79 0) (79 0) (78 0) (79 0) (0) (0) (0) (0) (0))) :lchan (quote ((1 1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1) (1) (1) (1 1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0 0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6700) (7900) (8100) (7900) (7800) (7900) (8100) (7400) (7200) (7100) (6900) (7100) (7200) (7100) (6900) (7100) (6700) (7600) (7400) (7200) (7800) (8100) (7100) (7900) (7900) (7800) (8300) (8100) (7400) (7600) (7400) (7200) (7100) (7600) (7100) (7400) (7300) (7400) (7600) (7300) (6900) (7400) (6700) (6600) (6700) (6400) (6900) (6700) (6600) (6400) (6200) (6400) (6600) (6700) (6900) (7100) (7400) (7300) (7400) (7300) (7400) (6900) (6700) (6600) (6700) (6400) (6600) (6700) (7900) (8100) (7900) (7800) (7900) (8100) (7400) (7200) (7100) (6900) (7100) (7200) (7100) (6900) (7100) (6700) (7600) (7400) (7200) (7800) (8100) (7900) (7900) (7800) (8300) (8100) (7400) (7600) (7400) (7200) (7100) (7600) (7100) (7400) (7300) (7400) (7600) (7300) (6900) (7400) (6700) (6600) (6700) (6400) (6900) (6700) (6600) (6400) (6200) (6400) (6600) (6700) (6900) (7100) (7400) (7300) (7400) (7300) (7400) (6900) (6700) (6600) (6700) (6400) (6600))) :lonset (quote (4031 5031 6386 6548 6720 6881 7042 8364 8542 8709 8859 9042 9375 9542 9714 9875 10042 10375 10709 11042 11375 11709 12042 12709 13042 13709 14720 15025 15709 16209 16381 16531 16698 17025 17386 17709 18042 18392 18709 19375 19709 20709 21042 22375 22709 23042 23375 23542 23709 23875 24042 24375 24542 24709 24875 25042 25375 25709 26042 27375 28042 29209 29375 29542 29709 29875 30042 36031 37031 38386 38548 38720 38881 39042 40364 40542 40709 40859 41042 41375 41542 41714 41875 42042 42375 42709 43042 43375 43709 44709 45042 45709 46720 47025 47709 48209 48381 48531 48698 49025 49386 49709 50042 50392 50709 51375 51709 52709 53042 54375 54709 55042 55375 55542 55709 55875 56042 56375 56542 56709 56875 57042 57375 57709 58042 59375 60042 61209 61375 61542 61709 61875 62042 64042)) :ldur (quote ((1022) (1394) (195) (183) (189) (183) (333) (189) (183) (144) (194) (350) (189) (200) (178) (178) (333) (334) (333) (333) (334) (333) (667) (333) (639) (333) (328) (695) (511) (177) (167) (167) (355) (356) (356) (355) (356) (317) (689) (334) (333) (333) (1000) (334) (333) (394) (167) (167) (166) (167) (333) (167) (167) (166) (167) (333) (334) (333) (1000) (334) (1000) (166) (167) (167) (166) (167) (2000) (1022) (1394) (195) (183) (189) (183) (333) (189) (183) (144) (194) (350) (189) (200) (178) (178) (333) (334) (333) (333) (334) (333) (333) (639) (333) (328) (695) (511) (177) (167) (167) (355) (356) (356) (355) (356) (317) (689) (334) (333) (333) (1333) (334) (333) (394) (167) (167) (166) (167) (333) (167) (167) (166) (167) (333) (334) (333) (1333) (334) (1000) (166) (167) (167) (166) (167) (2000))) :lvel (quote ((101) (102) (100) (86) (90) (88) (97) (96) (90) (75) (58) (81) (86) (97) (78) (73) (90) (90) (90) (90) (88) (88) (102) (91) (101) (85) (101) (100) (100) (88) (77) (77) (86) (92) (84) (91) (90) (93) (95) (92) (81) (96) (96) (88) (88) (85) (76) (84) (63) (61) (61) (61) (61) (61) (61) (61) (61) (61) (95) (67) (84) (84) (84) (84) (84) (84) (84) (101) (102) (100) (86) (90) (88) (97) (96) (90) (75) (58) (81) (86) (97) (78) (73) (90) (90) (90) (90) (88) (102) (91) (101) (85) (101) (100) (100) (88) (77) (77) (86) (92) (84) (91) (90) (93) (95) (92) (81) (96) (96) (88) (88) (85) (76) (84) (63) (61) (61) (61) (61) (61) (61) (61) (61) (61) (95) (67) (84) (84) (84) (84) (84) (84) (84))) :loffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8100) (7900) (7800) (7600) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6000) (5900) (5700) (5900) (5700) (6000) (5900) (5700) (5500) (5700) (6900) (6700) (6600) (6400) (6200) (6100) (6400) (6900) (7100) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6100) (6400) (6200) (6100) (6200) (6000) (5900) (5700) (5500) (5400) (5500) (8100) (7900) (7800) (7600) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6000) (5900) (5700) (5900) (5700) (6000) (5900) (5700) (5500) (5700) (6900) (6700) (6600) (6400) (6200) (6100) (6400) (6900) (7100) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6100) (6400) (6200) (6100) (6200) (8300) (8100) (7900) (7800) (7600) (7500) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6300) (6600) (6400) (6300) (6400) (6200) (6000) (5900) (5700) (5600) (5700) (6200) (5900) (6000) (5700) (6000) (6400) (6600) (6300) (6400) (6000) (6400) (6700) (6900) (6700) (6600) (6900) (6700) (6600) (6700) (6600) (6400) (6200) (6000) (5900) (5700) (8300) (8100) (7900) (7800) (7600) (7500) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6300) (6600) (6400) (6300) (6400) (6200) (6000) (5900) (5700) (5600) (5700) (6200) (5900) (6000) (5700) (6000) (6400) (6600) (6300) (6400) (6000) (6400) (6700) (6900) (6700) (6600) (6900) (6700) (6600) (6700))) :lonset (quote (792 1792 1917 2042 2167 2292 3292 3417 3542 3667 3792 4792 4917 5042 5167 5292 6167 6292 6417 6542 6667 6792 7042 7792 7917 8042 8167 8292 8417 8542 8667 8792 9292 9417 9542 9667 9792 10667 10792 10917 11042 11167 11292 11417 11542 11667 11792 11917 12042 12792 13792 13917 14042 14167 14292 15292 15417 15542 15667 15792 16792 16917 17042 17167 17292 18167 18292 18417 18542 18667 18792 19042 19792 19917 20042 20167 20292 20417 20542 20667 20792 21292 21417 21542 21667 21792 22667 22792 22917 23042 23167 23292 24792 25792 25917 26042 26167 26292 26542 27292 27417 27542 27667 27792 28667 28792 28917 29042 29167 29292 29417 29542 29667 29792 29917 30042 30792 31667 31792 31917 32042 32167 32292 33167 33292 33417 33542 33667 33792 34667 34792 34917 35042 35167 35292 35417 35542 35667 35792 35917 36042 36792 37792 37917 38042 38167 38292 38542 39292 39417 39542 39667 39792 40667 40792 40917 41042 41167 41292 41417 41542 41667 41792 41917 42042 42792 43667 43792 43917 44042 44167 44292 45167 45292 45417 45542 45667 45792 46667 46792 46917 47042 47167 47292 48042)) :ldur (quote ((996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (246) (746) (121) (125) (125) (121) (121) (121) (121) (121) (496) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (246) (996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (246) (746) (121) (125) (125) (121) (121) (121) (121) (121) (496) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (750) (996) (121) (121) (121) (121) (246) (746) (121) (121) (121) (121) (871) (125) (125) (125) (125) (121) (121) (121) (121) (121) (121) (121) (496) (750) (121) (121) (125) (125) (125) (871) (121) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (246) (996) (121) (121) (121) (121) (246) (746) (121) (121) (121) (121) (871) (125) (125) (125) (125) (121) (121) (121) (121) (121) (121) (121) (496) (750) (121) (121) (125) (125) (125) (871) (121) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (750))) :lvel (quote ((111) (107) (112) (102) (97) (109) (119) (104) (100) (110) (109) (107) (104) (101) (107) (121) (102) (102) (107) (101) (97) (115) (124) (106) (100) (100) (111) (112) (111) (89) (111) (113) (97) (102) (104) (110) (111) (100) (104) (101) (98) (106) (109) (101) (85) (98) (90) (99) (97) (111) (107) (112) (102) (97) (109) (119) (104) (100) (110) (109) (107) (104) (101) (107) (121) (102) (102) (107) (101) (97) (115) (124) (106) (100) (100) (111) (112) (111) (89) (111) (113) (97) (102) (104) (110) (111) (100) (104) (101) (98) (106) (109) (115) (111) (93) (110) (107) (119) (104) (106) (100) (93) (100) (123) (107) (100) (106) (102) (102) (113) (104) (104) (96) (102) (97) (104) (89) (71) (93) (54) (104) (111) (108) (108) (109) (95) (109) (104) (117) (98) (94) (96) (95) (97) (101) (101) (96) (91) (100) (95) (101) (115) (111) (93) (110) (107) (119) (104) (106) (100) (93) (100) (123) (107) (100) (106) (102) (102) (113) (104) (104) (96) (102) (97) (104) (89) (71) (93) (54) (104) (111) (108) (108) (109) (95) (109) (104) (117) (98) (94) (96) (95) (97) (101))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7000) (7000) (7400) (6900) (7000) (6500) (7000) (7400) (7700) (6900) (7000) (7400) (6900) (7000) (6700) (7000) (7500) (7900) (6900) (7000) (7700) (7200) (7400) (7000) (7400) (7700) (8200) (7400) (7900) (6900) (7200) (7700) (6700) (7000) (7500) (6500) (6900) (7400) (7000) (7400) (7700) (7400) (7200) (7000) (7400) (6900) (7000) (6700) (7000) (7400) (7900) (8200) (7600) (7200) (7600) (7900) (7600) (7400) (7200) (7600) (7100) (7200) (6900) (7200) (7600) (8100) (8400) (7700) (7400) (7700) (8100) (7400) (7200) (7000) (7400) (7900) (7200) (7000) (6900) (7000) (6900) (6700) (7000) (7600) (6900) (6700) (6500) (6700) (6500) (6400) (6700) (7200) (6500) (6400) (6200) (6400) (7600) (7700 7600) (7700 7600 7700 7600) (7700 7600 7700 7600) (7600 7400) (7700) (7200) (6900) (6500) (7700) (7900 7700) (7900 7700) (7900 7700) (7700 7600) (7900) (7600) (7000) (6700) (7900) (8100 7900) (8100 7900) (8100 7900) (7900 7700) (8000) (7600) (7700) (7400) (7700) (8000) (8300) (8400) (7700) (7600) (7400) (7200) (7900) (7600) (7200) (7000) (6900) (6700) (6900) (7200) (6700) (6900) (6500) (6900) (7200) (7700) (6700) (6500) (6900) (6400) (6500) (6200) (6500) (6900) (7400) (6400) (6200) (6500) (6000) (6200) (5800) (6200) (6500) (7000) (6000) (5800) (6700) (5800) (6700) (6000 5800) (6000 5800) (6000 5800) (6000 5800) (5800) (5800) (6700) (5700) (5800) (5700) (6000) (5800) (6000) (6500) (6400) (7000) (6900) (6700) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6200) (7000) (6700) (6400) (6400 6500) (6400 6500) (6400 6500) (6400 6500) (6500) (6500 6000 5700) (7000) (7000) (7400) (6900) (7000) (6500) (7000) (7400) (7700) (6900) (7000) (7400) (6900) (7000) (6700) (7000) (7500) (7900) (6900) (7000) (7700) (7200) (7400) (7000) (7400) (7700) (8200) (7400) (7900) (6900) (7200) (7700) (6700) (7000) (7500) (6500) (6900) (7400) (7000) (7400) (7700) (7400) (7200) (7000) (7400) (6900) (7000) (6700) (7000) (7400) (7900) (8200) (7600) (7200) (7600) (7900) (7600) (7400) (7200) (7600) (7100) (7200) (6900) (7200) (7600) (8100) (8400) (7700) (7400) (7700) (8100) (7400) (7200) (7000) (7400) (7900) (7200) (7000) (6900) (7000) (6900) (6700) (7000) (7600) (6900) (6700) (6500) (6700) (6500) (6400) (6700) (7200) (6500) (6400) (6200) (6400) (7600) (7700 7600) (7700 7600 7700 7600) (7700 7600 7700 7600) (7600 7400) (7700) (7200) (6900) (6500) (7700) (7900 7700) (7900 7700) (7900 7700) (7700 7600) (7900) (7600) (7000) (6700) (7900) (8100 7900) (8100 7900) (8100 7900) (7900 7700) (8000) (7600) (7700) (7400) (7700) (8000) (8300) (8400) (7700) (7600) (7400) (7200) (7900) (7600) (7200) (7000) (6900) (6700) (6900) (7200) (6700) (6900) (6500) (6900) (7200) (7700) (6700) (6500) (6900) (6400) (6500) (6200) (6500) (6900) (7400) (6400) (6200) (6500) (6000) (6200) (5800) (6200) (6500) (7000) (6000) (5800) (6700) (5800) (6700) (6000 5800) (6000 5800) (6000 5800) (6000 5800) (5800) (5800) (6700) (5700) (5800) (5700) (6000) (5800) (6000) (6500) (6400) (7000) (6900) (6700) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6200) (7000) (6700) (6400) (6400 6500) (6400 6500) (6400 6500) (6400 6500) (6500) (6500 6000 5700) (6500) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6700) (6900) (7200) (6700) (6900) (6600) (6900) (7200) (7500) (7000) (7200) (7500) (7000) (7200) (6900) (7200) (7800) (8100) (7400) (8200) (8400) (7500) (8100) (8200) (7400) (7900) (8100) (7200) (7900 7800) (7900 7800) (7900 7800) (7900 7800) (7800) (7400) (7800) (8100) (7400) (7200) (7000) (7400) (6900) (7000) (6700) (7000) (7400) (7900) (8200) (7500) (7200) (7500) (7900) (7200) (7000) (6900) (7200) (6700) (6900) (6500) (6900) (7200) (7700) (8100) (7400) (7000) (7400) (7700) (7000) (6800) (6700) (7700) (7500) (8200) (8000) (7400) (6300) (7400) (7200) (7900) (7700) (7100) (6000) (7000) (6900) (7500) (7400) (6700) (6600) (6900) (7200) (7500) (7400) (7200) (8100) (6200) (6700) (7000) (7400) (7200) (7000) (8200) (6100) (6400) (6700) (7000) (6900) (6700) (7600) (6700) (6600) (6700) (6900) (6200) (6600) (6900) (7200) (7000) (6900) (7900) (7700) (7500) (7400) (7200) (7000) (6900) (7200) (6600) (6700) (7000) (6200) (6300) (6500) (6800) (6300) (6500) (6800) (7400) (7700) (6800) (6700) (7000) (6500) (6700) (7000) (7500) (7900) (7700) (7500) (7400) (7500) (7700) (6700) (6900) (7000) (7000) (7000 6900) (7000 6900) (7000 6900) (7000 6900) (6900) (6900) (7000 6900) (7000 6900) (7000 6900) (6900 6700) (7000) (6500) (6200) (5800) (7000) (7200 7000) (7200 7000) (7200 7000) (7000 6900) (7200) (6900) (6300) (6000) (7200) (7400 7200) (7400 7200) (7400 7200) (7200 7000) (7300) (6900) (7000) (6700) (7000) (7300) (7600) (7700) (7000) (6900 7000 6900) (6700 7000) (6500) (7500) (7400) (7200) (7300) (7900) (7200) (7300) (6900) (7000) (6300 6500 6300) (6200 6500) (6300) (6200) (6500) (6000) (6200) (5800) (6200) (6500) (7000) (6300) (6500) (7000) (6300) (6500) (6200) (6500) (7000) (7400) (6900) (7000) (7400) (6900) (7000) (6500) (7000) (7400) (7700) (6800) (6700) (7500) (7200) (6900) (6900 7000) (6900 7000) (6900 7000) (6900 7000) (7000) (7000 6500 6200) (6500) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6700) (6900) (7200) (6700) (6900) (6600) (6900) (7200) (7500) (7000) (7200) (7500) (7000) (7200) (6900) (7200) (7800) (8100) (7400) (8200) (8400) (7500) (8100) (8200) (7400) (7900) (8100) (7200) (7900 7800) (7900 7800) (7900 7800) (7900 7800) (7800) (7400) (7800) (8100) (7400) (7200) (7000) (7400) (6900) (7000) (6700) (7000) (7400) (7900) (8200) (7500) (7200) (7500) (7900) (7200) (7000) (6900) (7200) (6700) (6900) (6500) (6900) (7200) (7700) (8100) (7400) (7000) (7400) (7700) (7000) (6800) (6700) (7700) (7500) (8200) (8000) (7400) (6300) (7400) (7200) (7900) (7700) (7100) (6000) (7000) (6900) (7500) (7400) (6700) (6600) (6900) (7200) (7500) (7400) (7200) (8100) (6200) (6700) (7000) (7400) (7200) (7000) (8200) (6100) (6400) (6700) (7000) (6900) (6700) (7600) (6700) (6600) (6700) (6900) (6200) (6600) (6900) (7200) (7000) (6900) (7900) (7700) (7500) (7400) (7200) (7000) (6900) (7200) (6600) (6700) (7000) (6200) (6300) (6500) (6800) (6300) (6500) (6800) (7400) (7700) (6800) (6700) (7000) (6500) (6700) (7000) (7500) (7900) (7700) (7500) (7400) (7500) (7700) (6700) (6900) (7000) (7000) (7000 6900) (7000 6900) (7000 6900) (7000 6900) (6900) (6900) (7000 6900) (7000 6900) (7000 6900) (6900 6700) (7000) (6500) (6200) (5800) (7000) (7200 7000) (7200 7000) (7200 7000) (7000 6900) (7200) (6900) (6300) (6000) (7200) (7400 7200) (7400 7200) (7400 7200) (7200 7000) (7300) (6900) (7000) (6700) (7000) (7300) (7600) (7700) (7000) (6900 7000 6900) (6700 7000) (6500) (7500) (7400) (7200) (7300) (7900) (7200) (7300) (6900) (7000) (6300 6500 6300) (6200 6500) (6300) (6200) (6500) (6000) (6200) (5800) (6200) (6500) (7000) (6300) (6500) (7000) (6300) (6500) (6200) (6500) (7000) (7400) (6900) (7000) (7400) (6900) (7000) (6500) (7000) (7400) (7700) (6800) (6700) (7500) (7200) (6900) (6900 7000) (6900 7000) (6900 7000) (6900 7000) (7000) (7000 6500 6200))) :lonset (quote (461 643 782 925 1071 1211 1354 1500 1639 1782 1929 2068 2211 2357 2496 2639 2786 2925 3068 3214 3354 3496 3643 3782 3925 4071 4211 4354 4500 4639 4782 4929 5068 5211 5357 5496 5639 5786 6354 6496 6643 6782 6925 7071 7211 7354 7500 7639 7782 7929 8068 8211 8357 8925 9068 9214 9354 9496 9643 9782 9925 10071 10211 10354 10500 10639 10782 10929 11496 11639 11786 12354 12496 12643 12782 12925 13071 13211 13354 13639 13782 13929 14068 14211 14357 14496 14639 14925 15068 15214 15354 15496 15643 15782 15925 16071 16821 16929 17036 17143 17250 17357 17496 17639 17786 18107 18214 18321 18429 18536 18643 18782 18925 19071 19393 19500 19607 19714 19821 19929 20068 20211 20357 20496 20639 20786 20925 21068 21214 21354 21496 21643 21782 21925 22071 22211 22354 22500 22639 22782 22929 23068 23211 23357 23496 23639 23786 23925 24068 24214 24354 24496 24643 24782 24925 25071 25211 25354 25500 25639 25782 25929 26068 26211 26357 27107 27214 27536 27643 27750 27857 27964 28071 28393 28500 28639 28782 28929 29068 29211 29357 29496 29639 29786 29925 30068 30214 30354 30496 30643 30782 30925 31071 31211 31354 31500 31639 31782 31929 32068 32211 32357 32496 32639 32786 32925 33068 33214 33354 33496 33643 33782 33925 34071 34211 34354 34500 34607 34714 34821 34929 35143 35357 36468 36643 36782 36925 37071 37211 37354 37500 37639 37782 37929 38068 38211 38357 38496 38639 38786 38925 39068 39214 39354 39496 39643 39782 39925 40071 40211 40354 40500 40639 40782 40929 41068 41211 41357 41496 41639 41786 42354 42496 42643 42782 42925 43071 43211 43354 43500 43639 43782 43929 44068 44211 44357 44925 45068 45214 45354 45496 45643 45782 45925 46071 46211 46354 46500 46639 46782 46929 47496 47639 47786 48354 48496 48643 48782 48925 49071 49211 49354 49639 49782 49929 50068 50211 50357 50496 50639 50925 51068 51214 51354 51496 51643 51782 51925 52071 52821 52929 53036 53143 53250 53357 53496 53639 53786 54107 54214 54321 54429 54536 54643 54782 54925 55071 55393 55500 55607 55714 55821 55929 56068 56211 56357 56496 56639 56786 56925 57068 57214 57354 57496 57643 57782 57925 58071 58211 58354 58500 58639 58782 58929 59068 59211 59357 59496 59639 59786 59925 60068 60214 60354 60496 60643 60782 60925 61071 61211 61354 61500 61639 61782 61929 62068 62211 62357 63107 63214 63536 63643 63750 63857 63964 64071 64393 64500 64639 64782 64929 65068 65211 65357 65496 65639 65786 65925 66068 66214 66354 66496 66643 66782 66925 67071 67211 67354 67500 67639 67782 67928 68068 68211 68357 68496 68639 68786 68925 69068 69214 69354 69496 69643 69782 69925 70071 70211 70354 70500 70607 70714 70821 70928 71143 71357 72428 72643 72782 72925 73071 73211 73354 73500 73639 73782 73928 74068 74211 74357 74496 74639 74786 74925 75068 75214 75354 75496 75643 75782 75925 76071 76211 76353 76500 76639 76782 76928 77068 77211 77357 77496 77639 77786 77893 78000 78107 78214 78353 78496 78643 78782 78925 79071 79211 79353 79500 79639 79782 79928 80068 80211 80357 80925 81068 81214 81353 81496 81643 81782 81925 82071 82211 82353 82500 82639 82782 82928 83496 83639 83786 83925 84068 84214 84536 84643 84964 85071 85393 85500 85821 85928 86250 86357 86678 86786 87107 87214 87536 87643 87964 88071 88211 88353 88500 88639 88782 88928 89357 89496 89639 89786 89925 90068 90214 90643 90782 90925 91071 91211 91353 91500 91821 91928 92068 92211 92357 92496 92639 92786 92925 93068 93214 93353 93496 93643 93782 93925 94071 94211 94353 94500 95250 95357 95678 95786 95925 96068 96214 96353 96496 96643 96964 97071 97211 97353 97500 97639 97782 97928 98496 98639 98786 98925 99068 99214 99353 99496 99643 99750 99857 99964 100071 100178 100393 100500 100607 100714 100821 100928 101068 101211 101357 101678 101786 101893 102000 102107 102214 102353 102496 102643 102964 103071 103178 103286 103393 103500 103639 103782 103928 104068 104211 104357 104496 104639 104786 104889 105068 105214 105782 105925 106071 106211 106353 106500 106639 106782 106928 107032 107211 107357 107496 107639 107786 107925 108068 108214 108353 108496 108643 108782 108925 109071 109211 109353 109500 109639 109782 109928 110068 110211 110357 110496 110639 110786 110925 111068 111214 111353 111496 111643 111750 111857 111964 112071 112286 112500 113607 113786 113925 114068 114214 114353 114496 114643 114782 114925 115071 115211 115353 115500 115639 115782 115928 116068 116211 116357 116496 116639 116786 116925 117068 117214 117353 117496 117643 117782 117925 118071 118211 118353 118500 118639 118782 118928 119036 119143 119250 119357 119496 119639 119786 119925 120068 120214 120353 120496 120643 120782 120925 121071 121211 121353 121500 122068 122211 122357 122496 122639 122786 122925 123068 123214 123353 123496 123643 123782 123925 124071 124639 124782 124928 125068 125211 125357 125678 125786 126107 126214 126536 126643 126964 127071 127393 127500 127821 127928 128250 128357 128678 128786 129107 129214 129353 129496 129643 129782 129925 130071 130500 130639 130782 130928 131068 131211 131357 131786 131925 132068 132214 132353 132496 132643 132964 133071 133211 133353 133500 133639 133782 133928 134068 134211 134357 134496 134639 134786 134925 135068 135214 135353 135496 135643 136393 136500 136821 136928 137068 137211 137357 137496 137639 137786 138107 138214 138353 138496 138643 138782 138925 139071 139639 139782 139928 140068 140211 140357 140496 140639 140786 140893 141000 141107 141214 141321 141536 141643 141750 141857 141964 142071 142211 142353 142500 142821 142928 143036 143143 143250 143357 143496 143639 143786 144107 144214 144321 144428 144536 144643 144782 144925 145071 145211 145353 145500 145639 145782 145928 146032 146211 146357 146925 147068 147214 147353 147496 147643 147782 147925 148071 148175 148353 148500 148639 148782 148928 149068 149211 149357 149496 149639 149786 149925 150068 150214 150353 150496 150643 150782 150925 151071 151211 151353 151500 151639 151782 151928 152068 152211 152357 152500 152647 152798 152908 153018 153129 153239 153520 153811 155756)) :ldur (quote ((128) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (553) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (553) (129) (125) (553) (128) (125) (125) (129) (125) (125) (128) (271) (129) (125) (125) (128) (125) (125) (129) (272) (129) (125) (125) (128) (125) (125) (129) (125) (590) (93) (25 75) (25 22 25 21) (25 22 25 21) (46 46) (125) (129) (125) (278) (93) (46 47) (46 47) (47 46) (47 46) (125) (129) (125) (279) (93) (46 46) (46 47) (46 47) (46 47) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (707) (93) (279) (93) (47 46) (46 46) (46 47) (46 47) (279) (93) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (93) (46 47) (46 47) (46 47) (47 46) (186) (804 804 804) (143) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (553) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (553) (129) (125) (553) (128) (125) (125) (129) (125) (125) (128) (271) (129) (125) (125) (128) (125) (125) (129) (272) (129) (125) (125) (128) (125) (125) (129) (125) (590) (93) (25 75) (25 22 25 21) (25 22 25 21) (46 46) (125) (129) (125) (278) (93) (46 47) (46 47) (47 46) (47 46) (125) (129) (125) (279) (93) (46 46) (46 47) (46 47) (46 47) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (707) (93) (279) (93) (47 46) (46 46) (46 47) (46 47) (279) (93) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (124) (125) (129) (125) (126) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (124) (93) (46 47) (46 47) (46 47) (46 47) (185) (804 804 804) (186) (125) (129) (125) (125) (128) (124) (125) (129) (125) (126) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (47 46) (47 46) (47 46) (46 46) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (554) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (554) (129) (125) (125) (128) (125) (279) (92) (278) (93) (279) (93) (278) (93) (279) (93) (279) (93) (278) (93) (279) (92) (278) (93) (125) (128) (125) (125) (129) (125) (186) (125) (129) (125) (125) (128) (125) (186) (125) (129) (125) (125) (128) (125) (278) (93) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (589) (93) (279) (93) (125) (128) (125) (125) (129) (125) (278) (93) (125) (128) (125) (125) (129) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (93) (47 46) (46 46) (46 47) (46 47) (93) (93) (47 46) (46 46) (46 47) (46 47) (125) (128) (125) (279) (93) (47 46) (47 46) (47 46) (46 46) (125) (129) (125) (278) (93) (46 47) (46 47) (47 46) (47 46) (125) (129) (125) (125) (128) (125) (125) (129) (125) (33 32 28) (125 32) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (32 32 29) (125 32) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (93) (47 46) (46 46) (46 47) (46 47) (185) (803 803 803) (146) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (46 47) (47 46) (47 46) (47 46) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (553) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (554) (129) (125) (125) (128) (125) (279) (93) (278) (93) (279) (92) (278) (93) (279) (93) (278) (93) (279) (93) (279) (93) (278) (93) (125) (129) (125) (125) (129) (125) (186) (125) (129) (125) (125) (128) (125) (186) (125) (128) (125) (125) (129) (125) (278) (93) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (589) (93) (278) (93) (125) (128) (125) (125) (129) (125) (278) (93) (125) (129) (125) (125) (129) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (92) (47 46) (47 46) (46 46) (46 47) (93) (92) (47 46) (47 46) (46 46) (46 47) (125) (128) (125) (278) (93) (46 47) (47 46) (47 46) (47 46) (125) (129) (125) (278) (93) (46 47) (46 47) (46 47) (47 46) (125) (129) (125) (125) (128) (125) (125) (129) (125) (32 32 29) (125 32) (125) (554) (128) (125) (125) (129) (125) (125) (129) (125) (32 33 29) (125 32) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (128) (132) (129) (95) (48 48) (47 48) (48 47) (63 53) (253) (1945 1945 1945))) :lvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (78 0) (78 53 25 0) (78 53 25 0) (54 0) (0) (0) (0) (0) (0) (54 0) (54 0) (53 0) (53 0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (53 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (78 0) (78 53 25 0) (78 53 25 0) (54 0) (0) (0) (0) (0) (0) (54 0) (54 0) (53 0) (53 0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (54 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (53 0) (53 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (53 0) (53 0) (53 0) (54 0) (0) (0) (0) (0) (0) (54 0) (54 0) (53 0) (53 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (67 32 0) (36 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (68 33 0) (36 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (54 0) (53 0) (53 0) (53 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (53 0) (54 0) (54 0) (0) (0) (53 0) (53 0) (54 0) (54 0) (0) (0) (0) (0) (0) (54 0) (53 0) (53 0) (53 0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (53 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (68 33 0) (36 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (68 32 0) (36 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (55 0) (56 0) (55 0) (63 0) (0) (0 0 0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1 1 1) (1 1 1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1 1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1 1 1) (1 1 1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1 1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1 1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0 0 0) (0 0 0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0 0 0) (0 0 0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7100) (6900) (7100) (6200) (6700) (7100) (7100 6900) (6900) (6700) (6900) (7400) (7800 7900) (7900) (7800) (7900) (6900) (7600) (7900) (7900 7800) (7800) (7600) (7800) (7400) (7800 7600) (8100 7900) (8300) (7900) (7400) (7600) (7900 7800) (8300 8100) (8400) (8100) (7600) (7800) (7400) (7900) (6900) (7100) (7200) (7200) (7100) (6900) (6700) (6600) (6700) (7400) (7800 7900) (7900) (8100) (7900) (7800) (7600) (7600 7800) (7800) (7900) (7800) (7600) (7300) (7400) (7400 7300) (7300) (7400) (7600) (6900) (7300 7100) (7600 7400) (7800) (7400) (6900) (7100) (7400 7300) (7800 7600) (7900) (7600) (7100) (7300) (6900) (8100) (7400) (7600) (7300) (7300) (7400) (7800) (7600) (7800) (6900) (7400) (7800) (7900) (7800) (7900) (8300) (7600) (7900 7800) (8300 8100) (8400) (8300) (8100) (7900) (7800) (7600) (7600 7500) (7500) (7300) (7500) (7100) (8300) (7800) (7900) (7500) (7600) (7200) (7600) (8000) (8100) (8100 8300) (7800 7900) (7900) (8100) (8300) (7600) (7800) (7500) (7600) (7100) (6700) (6400) (7100) (7100) (6800) (6900) (7400) (7600) (7400) (7200) (7100) (7200) (7600) (7400) (7600) (7900) (7800) (7900) (8100) (7900) (7800) (7600) (8100) (8300) (7900) (7900 7800) (7800) (7600) (7800) (7400) (7800 7600) (8100 7900) (8300) (7900) (7400) (7600) (7800) (8100 7900) (8400 8300) (8100) (7600) (7800) (7400) (8600) (7900) (8100) (7800) (7900))) :lonset (quote (42 611 792 1167 1711 1904 2180 2298 2842 3023 3379 4480 4604 5117 5292 5673 6230 6417 6661 6792 7329 7492 7879 9773 9954 10148 10704 10904 11273 12042 12230 12404 12979 13129 13523 14104 14273 14667 15211 15398 15792 16179 17448 17648 17830 18017 18761 19117 19267 20636 20817 20986 21154 21330 21480 23111 23292 23630 24198 24380 24611 24761 25317 25504 25886 27792 27979 28167 28729 28917 29292 30029 30217 30398 30948 31154 31517 32073 32261 32642 33211 33417 33780 34154 36017 36580 36804 37136 37730 37880 38261 38817 39017 39380 40542 41292 41480 41667 41854 42042 42230 42417 42604 42817 42992 43342 43530 43917 45604 45792 46167 46711 46898 47292 47854 48042 48461 49167 49354 49504 50104 50292 50667 51204 51404 51779 52336 52542 52923 53667 54017 54604 54792 55167 55542 55729 55917 56104 56292 56823 57017 57386 57967 58167 58517 58886 59067 59261 59479 59636 60192 60379 60623 60761 61304 61504 61886 63792 63979 64167 64711 64898 65261 66030 66136 66317 66980 67154 67542 68092 68292 68648 69230 69404 69792 72042)) :ldur (quote ((588) (162) (375) (637) (206) (263) (82 50) (575) (188) (344) (1107) (62 50) (526) (150) (350) (544) (187) (237) (87 62) (569) (157) (387) (1863) (113 138) (126 119) (594) (194) (350) (750) (94 94) (94 93) (563) (188) (413) (588) (169) (338) (631) (193) (288) (394) (1307) (200) (213) (156) (737) (312) (100 75) (1400) (206) (206) (212) (176) (100 87) (1631) (206) (325) (600) (182) (237) (112 69) (569) (175) (375) (1850) (93 94) (94 94) (562) (213) (387) (681) (144 69) (100 94) (556) (194) (400) (569) (200) (381) (575) (225) (319) (406) (1538) (587) (187) (332) (575) (200) (374) (593) (213) (363) (1187) (731) (94 94) (94 93) (187) (188) (188) (187) (187) (188) (113 87) (362) (169) (368) (1500) (188) (375) (544) (187) (369) (562) (194) (362) (681) (93 94) (94 94) (588) (188) (375) (575) (194) (394) (582) (218) (387) (763) (287) (525) (213) (369) (375) (225) (207) (169) (232) (462) (181) (337) (543) (187) (350) (369) (206) (225) (181) (213) (568) (206) (238) (93 63) (562) (213) (388) (1868) (93 94) (94 94) (562) (181) (363) (800) (87) (100 131) (587 100) (168) (369) (525) (212) (344) (600) (200) (388) (2250))) :lvel (quote ((101) (89) (104) (91) (95) (102) (97 84) (84) (104) (88) (100) (106 100) (91) (96) (93) (80) (92) (100) (101 88) (90) (90) (101) (100) (93 97) (102 88) (121) (97) (92) (113) (85 101) (97 95) (115) (101) (97) (99) (88) (106) (101) (92) (102) (109) (100) (88) (77) (99) (101) (109) (112 109) (104) (97) (86) (89) (96) (92 88) (97) (89) (99) (109) (93) (92) (89 104) (102) (98) (98) (95) (85 82) (86 84) (119) (102) (92) (117) (78 101) (79 96) (106) (100) (90) (92) (81) (104) (97) (91) (92) (92) (75) (86) (92) (73) (81) (82) (94) (93) (94) (93) (104) (97) (90 104) (91 96) (96) (97) (98) (92) (93) (85) (97 99) (89) (80) (101) (91) (93) (93) (93) (84) (97) (104) (91) (112) (107) (74 93) (75 65) (90) (84) (86) (86) (96) (102) (90) (76) (50) (88) (91) (93) (84) (88) (88) (91) (82) (84) (67) (86) (91) (85) (86) (100) (93) (98) (78) (85) (97) (66) (85) (92) (81) (85 75) (80) (67) (86) (84) (79 91) (89 73) (113) (91) (93) (98) (93) (89 69) (97 91) (86) (88) (110) (91) (93) (90) (92) (94) (88))) :loffset (quote ((0) (0) (0) (0) (0) (0) (74 0) (0) (0) (0) (0) (62 0) (0) (0) (0) (0) (0) (0) (81 0) (0) (0) (0) (0) (81 0) (100 0) (0) (0) (0) (0) (94 0) (93 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (75 0) (0) (0) (0) (0) (0) (74 0) (0) (0) (0) (0) (0) (0) (75 0) (0) (0) (0) (0) (94 0) (94 0) (0) (0) (0) (0) (94 0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (94 0) (93 0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (94 0) (94 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (63 0) (0) (0) (0) (0) (94 0) (94 0) (0) (0) (0) (0) (0) (94 0) (100 0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))) nil "list of chord-seqs"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 5" (quote t) (quote nil) (om-make-point 1254 33) (om-make-point 32 30) 80 "80" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 1218 38) (om-make-point 32 30) 50 "50" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 1172 37) (om-make-point 38 30) 100 "100" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "testcs" (om-load-patch-abs1 "testcs" (quote ((let ((box (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 114 285) (om-make-point 55 30) (list 0 100) "(0 100)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "REPEAT-N" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "something" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "N" 0))) (om-make-point 491 183) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 541 53) (om-make-point 38 30) 500 "500" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 486 52) (om-make-point 32 30) 10 "10" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OM-RANDOM" (quote om-random) (quote ((om-load-inputfun (quote input-funbox) "min" "LOW" 0) (om-load-inputfun (quote input-funbox) "max" "HIGH" 1))) (om-make-point 507 94) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "REPEAT-N" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "something" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "N" 0))) (om-make-point 348 192) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 398 62) (om-make-point 38 30) 127 "127" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 343 61) (om-make-point 32 30) 10 "10" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OM-RANDOM" (quote om-random) (quote ((om-load-inputfun (quote input-funbox) "min" "LOW" 0) (om-load-inputfun (quote input-funbox) "max" "HIGH" 1))) (om-make-point 364 103) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 161 149) (om-make-point 38 30) 100 "100" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "*" (quote *) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote n)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" 100))) (om-make-point 147 179) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OM-RANDOM" (quote om-random) (quote ((om-load-inputfun (quote input-funbox) "min" "LOW" 0) (om-load-inputfun (quote input-funbox) "max" "HIGH" 1))) (om-make-point 147 74) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "REPEAT-N" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "something" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "N" 0))) (om-make-point 61 202) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 76 315) (om-make-point 201 82) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 1 0 (om-make-point 400 20) (om-make-point 370 280) 0 1000 nil 1 (quote :midi-player) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "hi" 2 (om-make-point 207 0) "" "hi" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "lo" 1 (om-make-point 145 0) "" "lo" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "n" 0 (om-make-point 81 28) "" "n" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 31 410) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((4 0 1 0 nil 0) (16 0 1 1 nil 1) (3 0 4 0 nil 0) (2 0 4 1 nil 0) (8 0 5 0 nil 0) (16 0 5 1 nil 1) (7 0 8 0 nil 0) (6 0 8 1 nil 0) (11 0 10 0 nil 0) (9 0 10 1 nil 0) (15 0 11 0 nil 0) (14 0 11 1 nil 0) (10 0 12 0 nil 0) (16 0 12 1 nil 1) (12 0 13 1 nil 0) (0 0 13 2 nil 0) (1 0 13 3 nil 0) (5 0 13 4 nil 0) (13 0 17 0 nil 0))) 6.140003 nil "" (om-make-point 0 0) (om-make-point 636 513)) (quote ((om-load-inputfun (quote input-funbox) "" "input" nil) (om-load-inputfun (quote input-funbox) "" "input 2" nil) (om-load-inputfun (quote input-funbox) "" "input 3" nil))) (om-make-point 1203 74) nil (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7600) (6300) (5200) (7300) (5700) (7800) (7600) (5600) (5500) (6000) (5700) (7800) (7900) (7100) (6300) (6700) (8000) (7800) (6900) (7800) (7700) (5800) (6900) (5400) (7900) (7700) (7200) (5100) (6900) (8000) (8000) (7500) (7000) (5800) (5900) (6700) (5400) (7700) (6600) (6100) (5000) (7600) (5100) (6700) (7900) (8000) (6200) (7900) (5200) (6300) (5500) (8000) (5700) (5000) (6800) (5200) (6000) (8000) (7200) (5100) (7200) (7200) (6600) (6000) (5000) (7900) (6500) (6900) (6200) (7700) (7600) (8000) (8000) (5200) (7400) (6300) (6700) (7200) (5000) (5400) (6900) (7300) (6800) (6900) (7100) (5800) (7800) (5600) (5500) (8000) (7100) (5600) (6200) (5400) (7800) (7300) (5300) (6000) (6100) (6400))) :lonset (quote (0 100 200 300 400 500 600 700 800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000 2100 2200 2300 2400 2500 2600 2700 2800 2900 3000 3100 3200 3300 3400 3500 3600 3700 3800 3900 4000 4100 4200 4300 4400 4500 4600 4700 4800 4900 5000 5100 5200 5300 5400 5500 5600 5700 5800 5900 6000 6100 6200 6300 6400 6500 6600 6700 6800 6900 7000 7100 7200 7300 7400 7500 7600 7700 7800 7900 8000 8100 8200 8300 8400 8500 8600 8700 8800 8900 9000 9100 9200 9300 9400 9500 9600 9700 9800 9900 10156)) :ldur (quote ((440) (20) (157) (139) (388) (275) (37) (212) (120) (464) (267) (441) (123) (470) (412) (427) (45) (277) (212) (393) (363) (45) (235) (444) (22) (195) (451) (276) (162) (258) (410) (395) (158) (445) (228) (339) (11) (249) (479) (345) (398) (89) (73) (347) (372) (457) (50) (251) (231) (51) (123) (379) (180) (496) (334) (238) (101) (427) (296) (276) (276) (260) (34) (361) (346) (83) (460) (411) (368) (46) (356) (77) (323) (85) (311) (285) (300) (347) (250) (286) (447) (71) (498) (103) (169) (419) (88) (360) (301) (368) (482) (116) (24) (200) (465) (472) (218) (157) (226) (256))) :lvel (quote ((107) (106) (53) (31) (61) (127) (28) (127) (106) (110) (65) (53) (58) (107) (17) (83) (64) (67) (47) (17) (75) (54) (113) (109) (116) (43) (10) (102) (75) (67) (34) (55) (59) (42) (88) (66) (41) (18) (58) (100) (111) (105) (75) (29) (52) (22) (25) (126) (33) (124) (68) (94) (122) (106) (110) (113) (85) (67) (75) (116) (36) (15) (78) (51) (118) (118) (35) (31) (29) (56) (62) (90) (43) (75) (117) (48) (49) (91) (101) (118) (67) (125) (63) (51) (39) (81) (58) (32) (36) (49) (20) (37) (62) (110) (31) (20) (22) (94) (90) (61))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil "testcs"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 166 70) (quote "using the input chord-seqs$as 'names' for direct access$in each resulting cluster, ie. $map #'vs-class-members") "" (om-make-point 262 250) nil (om-make-color 0 0 0) (om-make-font "Liberation Sans" 12 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 296 98) (quote "output is input chord-seqs clustered according$to the features checked.$'k' clusters are output (try changing the second input$to 'k-means'$expect some random 'borderlines', $as k-means initializes using random clusters") "" (om-make-point 830 82) nil (om-make-color 0 0 0) (om-make-font "Liberation Sans" 12 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 157 56) (quote "build matrix from applying$each feature to each input$chord-seq") "" (om-make-point 12 236) nil (om-make-color 0 0 0) (om-make-font "Liberation Sans" 12 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 122 42) (quote "divide vector-space$in 'k' clusters:") "" (om-make-point 513 33) nil (om-make-color 0 0 0) (om-make-font "Liberation Sans" 12 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LIST 2" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote a)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote b)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote c)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 762 553) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 1050 200) (om-make-point 175 239) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((4200 4300) (4300) (7900 8100) (7900 7800) (7900 8100) (7900 8100) (7900 8100) (7900 8100) (7900 8100) (7900 7800) (8100) (5200 5400) (5400) (5700) (5500) (5400) (5200) (7600) (7400) (7300) (7400) (7600) (6600) (4800 5000) (4800 5000) (5000 4800) (5000 4800) (5000 4800) (4800 4800) (4800 5000) (4800 4700) (4700) (4300) (4700) (5000) (5500) (4700) (4800) (5200) (5500) (6000) (5200) (5500) (5400) (5700) (5000) (5400) (5700) (6200) (5900) (5500) (5900) (6200) (6700) (8100 8300) (8300) (7400 7600) (7600) (6700 6900) (6900) (7900 8100) (8100) (7300 7400) (7400) (6600 6700) (6700) (7800 7900) (7900) (6900 7100) (7100) (6200 6400) (6400) (5400 5500) (5500) (4700 4900) (4900) (4200 4300) (4300) (6400 6200) (6900 6600) (6400 6600) (6200) (6400 6200) (6900 6600) (6400 6600) (6200) (6400 6200) (6900 6600) (6400 6600) (7100 6200) (5300) (5200) (6200 6400) (6400) (6700 6900) (6900) (6100 6200) (6200) (6600 6700) (6700) (5900 6100) (6100) (6400 6600) (6600) (6200) (6100) (6200) (6400 6600) (6200) (6700 6900) (6600) (7400) (7800) (8100) (8600) (8100) (7800) (8100) (7400) (7800) (8100) (7800) (7900) (8100) (7400) (7900) (8300) (7900) (7400) (7900) (7100) (7400) (7900) (7100) (7200) (7400) (6700) (7200) (7600) (7200) (6900) (7200) (6600) (6900) (7200) (6600) (6700) (6900) (6300) (6600) (7100) (6600) (6300) (6600) (5900) (6300) (6600) (6300) (6400) (6600) (5900) (6400) (6700) (6400) (5900) (6400) (5500) (5900) (6400) (6300) (6400) (6700) (6000) (6500) (6900) (6500) (6000) (6500) (5700) (6000) (6500) (6400) (6500) (6900) (6300) (6600) (6900) (6600) (6300) (6600) (5900) (6300) (5400) (5700) (5500) (5400) (5500) (5900) (6400) (5900) (5500) (5900) (5200) (5400) (5500) (5200) (5500) (5900) (6400) (5000 5200) (5200) (5900 6000) (6000) (6700 6900) (6900) (4800 5000) (5000) (5700 5900) (5900) (6600 6700) (6700) (4700 4800) (4800) (5500 5700) (5700) (6400 6600) (6600) (7200 7400) (7400) (7800 7900) (7900) (8100 8300) (8300) (6200) (6500) (6500 6400) (7200 6700) (6500 6700) (6400) (6700 6600) (7200 6900) (6700 6900) (6600) (6900 6700) (7300 7000) (6900 7000) (7400 6700) (7100 7200) (7200) (6900 7100) (7100) (6900 7000) (7000) (6700 6900) (6900) (7200 7400) (7400) (6600 6700) (6900 6700) (7200 7100) (7200 7400) (6900 7100) (6700) (7100) (6200) (6700) (5500))) :lonset (quote (42 200 674 831 989 1147 1305 1463 1621 1779 1937 2568 2726 3358 3516 3674 3831 4463 4779 5095 5410 5568 5726 6358 6516 6674 6831 6989 7147 7305 7463 7621 7937 8253 8568 8884 9200 9516 9831 10147 10463 10779 11095 11410 11726 12042 12358 12674 12989 13305 13621 13937 14253 14568 15358 15516 15989 16147 16621 16779 17252 17410 17884 18042 18516 18674 19147 19305 19779 19937 20410 20568 21042 21200 21674 21831 22305 22463 22858 23016 23174 23331 23489 23647 23805 23963 24121 24279 24437 24595 25305 25937 26726 26884 27042 27200 27358 27516 27674 27831 27989 28147 28305 28463 28621 28779 28937 29095 29252 29410 29568 29726 30358 30516 30674 30831 30989 31147 31305 31463 31621 31779 31937 32095 32252 32410 32568 32726 32884 33042 33200 33358 33516 33674 33831 33989 34147 34305 34463 34621 34779 34937 35095 35252 35410 35568 35726 35884 36042 36200 36358 36516 36674 36831 36989 37147 37305 37463 37621 37779 37937 38095 38252 38410 38568 38726 38884 39042 39200 39358 39516 39674 39831 39989 40147 40305 40463 40621 40779 40937 41095 41252 41410 41568 41726 41884 42042 42200 42358 42516 42674 42831 42989 43147 43305 43463 43621 43779 43937 44095 44252 44410 44568 44726 44884 45042 45200 45358 45516 45989 46147 46621 46779 47252 47410 47884 48042 48516 48674 49147 49305 49779 49937 50410 50568 51042 51200 51674 51831 52305 52463 52937 53095 53726 54358 55068 55226 55384 55542 55700 55858 56016 56173 56331 56489 56647 56805 57042 57200 57358 57516 57673 57831 57989 58147 58305 58463 58621 58779 58937 59095 59252 59410 59568 59726 59884 60042 60358)) :ldur (quote ((79 79) (158) (73 73) (74 74) (74 74) (74 74) (74 74) (74 74) (74 74) (73 74) (316) (74 74) (474) (152) (152) (152) (153) (311) (310) (310) (158) (158) (153) (73 79) (73 73) (73 73) (74 74) (74 74) (74 74) (74 74) (74 74) (310) (310) (310) (311) (311) (310) (310) (311) (311) (311) (310) (310) (311) (311) (311) (310) (310) (311) (311) (316) (316) (310) (316) (73 73) (73) (74 74) (74) (74 74) (152) (74 74) (79) (74 79) (79) (79 79) (78) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79) (79 78) (79) (79 79) (79) (73 73) (73 73) (74 73) (74) (74 74) (74 74) (74 74) (74) (74 74) (73 73) (73 73) (157 73) (153) (158) (79 74) (74) (74 74) (74) (73 73) (73) (74 73) (74) (74 74) (79) (74 74) (79) (153) (152) (158) (73 73) (158) (74 74) (153) (316) (152) (152) (152) (153) (153) (153) (153) (158) (158) (158) (158) (157) (153) (153) (153) (153) (153) (153) (158) (152) (158) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (153) (153) (158) (153) (153) (153) (152) (152) (152) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (158) (153) (153) (153) (158) (153) (152) (152) (152) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (153) (153) (153) (153) (153) (153) (158) (152) (152) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (153) (153) (153) (158) (153) (153) (152) (152) (310) (74 74) (79) (74 74) (79) (74 74) (79) (74 74) (79) (73 73) (78) (74 74) (79) (73 73) (79) (74 74) (153) (74 74) (79) (74 73) (74) (74 74) (153) (73 73) (157) (158) (158) (74 79) (79 79) (79 79) (79) (73 79) (79 73) (78 79) (79) (79 79) (79 79) (79 79) (158 79) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79 79) (79 79) (79 78) (79 79) (158) (158) (158) (158) (316))) :lvel (quote ((108 113) (98) (80 97) (81 85) (80 80) (90 84) (90 93) (77 82) (92 86) (91 96) (121) (119 119) (119) (104) (95) (104) (121) (127) (119) (119) (102) (104) (121) (59 119) (86 86) (80 82) (86 78) (84 88) (82 84) (88 81) (96 96) (123) (101) (123) (119) (113) (107) (115) (113) (98) (109) (102) (100) (110) (104) (109) (119) (107) (111) (102) (102) (102) (111) (121) (94 119) (115) (80 123) (98) (106 106) (101) (100 117) (111) (93 127) (101) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (104 97) (97 92) (98 110) (102) (101 100) (97 97) (100 102) (100) (100 98) (96 97) (95 102) (123 93) (126) (121) (86 109) (104) (100 106) (104) (104 104) (86) (106 107) (106) (102 100) (97) (97 123) (110) (89) (90) (95) (100 112) (98) (104 86) (97) (127) (95) (84) (68) (83) (96) (77) (85) (84) (58) (88) (83) (75) (111) (111) (80) (80) (91) (81) (76) (86) (95) (97) (102) (83) (89) (78) (78) (75) (85) (82) (90) (80) (88) (90) (72) (83) (95) (78) (81) (77) (80) (76) (96) (85) (77) (85) (88) (80) (84) (83) (61) (83) (83) (83) (82) (77) (78) (89) (92) (78) (91) (82) (70) (83) (83) (83) (84) (76) (85) (83) (80) (68) (63) (75) (45) (53) (89) (89) (84) (74) (75) (86) (85) (89) (90) (66) (77) (82) (93) (83) (83) (83) (97) (97) (85) (77) (98) (101 109) (115) (111 108) (108) (96 102) (119) (95 92) (104) (65 92) (111) (68 104) (104) (98 113) (115) (86 96) (117) (80 117) (121) (101 107) (115) (102 111) (113) (91 108) (119) (102) (126) (85 84) (107 95) (107 107) (107) (66 88) (107 92) (88 88) (88) (88 88) (107 88) (88 88) (88 88) (88 88) (88) (88 88) (88) (88 88) (88) (88 88) (88) (88 88) (88) (88 88) (88 88) (88 88) (88 88) (88 88) (88) (88) (88) (88) (88))) :loffset (quote ((79 0) (0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (0) (79 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (78 0) (0) (79 0) (0) (79 0) (79 0) (78 0) (0) (79 0) (79 0) (79 0) (0) (79 0) (79 0) (79 0) (79 0) (0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (78 0) (0) (79 0) (0) (79 0) (0) (0) (0) (0) (79 0) (0) (79 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (78 0) (0) (79 0) (0) (79 0) (0) (0) (0) (79 0) (79 0) (79 0) (0) (79 0) (79 0) (79 0) (0) (79 0) (79 0) (79 0) (79 0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (79 0) (79 0) (78 0) (79 0) (0) (0) (0) (0) (0))) :lchan (quote ((1 1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1) (1) (1) (1 1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0 0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8100) (7900) (7800) (7600) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6000) (5900) (5700) (5900) (5700) (6000) (5900) (5700) (5500) (5700) (6900) (6700) (6600) (6400) (6200) (6100) (6400) (6900) (7100) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6100) (6400) (6200) (6100) (6200) (6000) (5900) (5700) (5500) (5400) (5500) (8100) (7900) (7800) (7600) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6000) (5900) (5700) (5900) (5700) (6000) (5900) (5700) (5500) (5700) (6900) (6700) (6600) (6400) (6200) (6100) (6400) (6900) (7100) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6100) (6400) (6200) (6100) (6200) (8300) (8100) (7900) (7800) (7600) (7500) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6300) (6600) (6400) (6300) (6400) (6200) (6000) (5900) (5700) (5600) (5700) (6200) (5900) (6000) (5700) (6000) (6400) (6600) (6300) (6400) (6000) (6400) (6700) (6900) (6700) (6600) (6900) (6700) (6600) (6700) (6600) (6400) (6200) (6000) (5900) (5700) (8300) (8100) (7900) (7800) (7600) (7500) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6300) (6600) (6400) (6300) (6400) (6200) (6000) (5900) (5700) (5600) (5700) (6200) (5900) (6000) (5700) (6000) (6400) (6600) (6300) (6400) (6000) (6400) (6700) (6900) (6700) (6600) (6900) (6700) (6600) (6700))) :lonset (quote (792 1792 1917 2042 2167 2292 3292 3417 3542 3667 3792 4792 4917 5042 5167 5292 6167 6292 6417 6542 6667 6792 7042 7792 7917 8042 8167 8292 8417 8542 8667 8792 9292 9417 9542 9667 9792 10667 10792 10917 11042 11167 11292 11417 11542 11667 11792 11917 12042 12792 13792 13917 14042 14167 14292 15292 15417 15542 15667 15792 16792 16917 17042 17167 17292 18167 18292 18417 18542 18667 18792 19042 19792 19917 20042 20167 20292 20417 20542 20667 20792 21292 21417 21542 21667 21792 22667 22792 22917 23042 23167 23292 24792 25792 25917 26042 26167 26292 26542 27292 27417 27542 27667 27792 28667 28792 28917 29042 29167 29292 29417 29542 29667 29792 29917 30042 30792 31667 31792 31917 32042 32167 32292 33167 33292 33417 33542 33667 33792 34667 34792 34917 35042 35167 35292 35417 35542 35667 35792 35917 36042 36792 37792 37917 38042 38167 38292 38542 39292 39417 39542 39667 39792 40667 40792 40917 41042 41167 41292 41417 41542 41667 41792 41917 42042 42792 43667 43792 43917 44042 44167 44292 45167 45292 45417 45542 45667 45792 46667 46792 46917 47042 47167 47292 48042)) :ldur (quote ((996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (246) (746) (121) (125) (125) (121) (121) (121) (121) (121) (496) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (246) (996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (246) (746) (121) (125) (125) (121) (121) (121) (121) (121) (496) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (750) (996) (121) (121) (121) (121) (246) (746) (121) (121) (121) (121) (871) (125) (125) (125) (125) (121) (121) (121) (121) (121) (121) (121) (496) (750) (121) (121) (125) (125) (125) (871) (121) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (246) (996) (121) (121) (121) (121) (246) (746) (121) (121) (121) (121) (871) (125) (125) (125) (125) (121) (121) (121) (121) (121) (121) (121) (496) (750) (121) (121) (125) (125) (125) (871) (121) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (750))) :lvel (quote ((111) (107) (112) (102) (97) (109) (119) (104) (100) (110) (109) (107) (104) (101) (107) (121) (102) (102) (107) (101) (97) (115) (124) (106) (100) (100) (111) (112) (111) (89) (111) (113) (97) (102) (104) (110) (111) (100) (104) (101) (98) (106) (109) (101) (85) (98) (90) (99) (97) (111) (107) (112) (102) (97) (109) (119) (104) (100) (110) (109) (107) (104) (101) (107) (121) (102) (102) (107) (101) (97) (115) (124) (106) (100) (100) (111) (112) (111) (89) (111) (113) (97) (102) (104) (110) (111) (100) (104) (101) (98) (106) (109) (115) (111) (93) (110) (107) (119) (104) (106) (100) (93) (100) (123) (107) (100) (106) (102) (102) (113) (104) (104) (96) (102) (97) (104) (89) (71) (93) (54) (104) (111) (108) (108) (109) (95) (109) (104) (117) (98) (94) (96) (95) (97) (101) (101) (96) (91) (100) (95) (101) (115) (111) (93) (110) (107) (119) (104) (106) (100) (93) (100) (123) (107) (100) (106) (102) (102) (113) (104) (104) (96) (102) (97) (104) (89) (71) (93) (54) (104) (111) (108) (108) (109) (95) (109) (104) (117) (98) (94) (96) (95) (97) (101))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (((0 0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 1 0 (om-make-point 400 20) (om-make-point 370 280) 0 1000 nil 1 (quote :midi-player) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1 1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (list (quote g) (quote g)) 24 2)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 851 200) (om-make-point 174 249) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7100) (6900) (7100) (6200) (6700) (7100) (7100 6900) (6900) (6700) (6900) (7400) (7800 7900) (7900) (7800) (7900) (6900) (7600) (7900) (7900 7800) (7800) (7600) (7800) (7400) (7800 7600) (8100 7900) (8300) (7900) (7400) (7600) (7900 7800) (8300 8100) (8400) (8100) (7600) (7800) (7400) (7900) (6900) (7100) (7200) (7200) (7100) (6900) (6700) (6600) (6700) (7400) (7800 7900) (7900) (8100) (7900) (7800) (7600) (7600 7800) (7800) (7900) (7800) (7600) (7300) (7400) (7400 7300) (7300) (7400) (7600) (6900) (7300 7100) (7600 7400) (7800) (7400) (6900) (7100) (7400 7300) (7800 7600) (7900) (7600) (7100) (7300) (6900) (8100) (7400) (7600) (7300) (7300) (7400) (7800) (7600) (7800) (6900) (7400) (7800) (7900) (7800) (7900) (8300) (7600) (7900 7800) (8300 8100) (8400) (8300) (8100) (7900) (7800) (7600) (7600 7500) (7500) (7300) (7500) (7100) (8300) (7800) (7900) (7500) (7600) (7200) (7600) (8000) (8100) (8100 8300) (7800 7900) (7900) (8100) (8300) (7600) (7800) (7500) (7600) (7100) (6700) (6400) (7100) (7100) (6800) (6900) (7400) (7600) (7400) (7200) (7100) (7200) (7600) (7400) (7600) (7900) (7800) (7900) (8100) (7900) (7800) (7600) (8100) (8300) (7900) (7900 7800) (7800) (7600) (7800) (7400) (7800 7600) (8100 7900) (8300) (7900) (7400) (7600) (7800) (8100 7900) (8400 8300) (8100) (7600) (7800) (7400) (8600) (7900) (8100) (7800) (7900))) :lonset (quote (42 611 792 1167 1711 1904 2180 2298 2842 3023 3379 4480 4604 5117 5292 5673 6230 6417 6661 6792 7329 7492 7879 9773 9954 10148 10704 10904 11273 12042 12230 12404 12979 13129 13523 14104 14273 14667 15211 15398 15792 16179 17448 17648 17830 18017 18761 19117 19267 20636 20817 20986 21154 21330 21480 23111 23292 23630 24198 24380 24611 24761 25317 25504 25886 27792 27979 28167 28729 28917 29292 30029 30217 30398 30948 31154 31517 32073 32261 32642 33211 33417 33780 34154 36017 36580 36804 37136 37730 37880 38261 38817 39017 39380 40542 41292 41480 41667 41854 42042 42230 42417 42604 42817 42992 43342 43530 43917 45604 45792 46167 46711 46898 47292 47854 48042 48461 49167 49354 49504 50104 50292 50667 51204 51404 51779 52336 52542 52923 53667 54017 54604 54792 55167 55542 55729 55917 56104 56292 56823 57017 57386 57967 58167 58517 58886 59067 59261 59479 59636 60192 60379 60623 60761 61304 61504 61886 63792 63979 64167 64711 64898 65261 66030 66136 66317 66980 67154 67542 68092 68292 68648 69230 69404 69792 72042)) :ldur (quote ((588) (162) (375) (637) (206) (263) (82 50) (575) (188) (344) (1107) (62 50) (526) (150) (350) (544) (187) (237) (87 62) (569) (157) (387) (1863) (113 138) (126 119) (594) (194) (350) (750) (94 94) (94 93) (563) (188) (413) (588) (169) (338) (631) (193) (288) (394) (1307) (200) (213) (156) (737) (312) (100 75) (1400) (206) (206) (212) (176) (100 87) (1631) (206) (325) (600) (182) (237) (112 69) (569) (175) (375) (1850) (93 94) (94 94) (562) (213) (387) (681) (144 69) (100 94) (556) (194) (400) (569) (200) (381) (575) (225) (319) (406) (1538) (587) (187) (332) (575) (200) (374) (593) (213) (363) (1187) (731) (94 94) (94 93) (187) (188) (188) (187) (187) (188) (113 87) (362) (169) (368) (1500) (188) (375) (544) (187) (369) (562) (194) (362) (681) (93 94) (94 94) (588) (188) (375) (575) (194) (394) (582) (218) (387) (763) (287) (525) (213) (369) (375) (225) (207) (169) (232) (462) (181) (337) (543) (187) (350) (369) (206) (225) (181) (213) (568) (206) (238) (93 63) (562) (213) (388) (1868) (93 94) (94 94) (562) (181) (363) (800) (87) (100 131) (587 100) (168) (369) (525) (212) (344) (600) (200) (388) (2250))) :lvel (quote ((101) (89) (104) (91) (95) (102) (97 84) (84) (104) (88) (100) (106 100) (91) (96) (93) (80) (92) (100) (101 88) (90) (90) (101) (100) (93 97) (102 88) (121) (97) (92) (113) (85 101) (97 95) (115) (101) (97) (99) (88) (106) (101) (92) (102) (109) (100) (88) (77) (99) (101) (109) (112 109) (104) (97) (86) (89) (96) (92 88) (97) (89) (99) (109) (93) (92) (89 104) (102) (98) (98) (95) (85 82) (86 84) (119) (102) (92) (117) (78 101) (79 96) (106) (100) (90) (92) (81) (104) (97) (91) (92) (92) (75) (86) (92) (73) (81) (82) (94) (93) (94) (93) (104) (97) (90 104) (91 96) (96) (97) (98) (92) (93) (85) (97 99) (89) (80) (101) (91) (93) (93) (93) (84) (97) (104) (91) (112) (107) (74 93) (75 65) (90) (84) (86) (86) (96) (102) (90) (76) (50) (88) (91) (93) (84) (88) (88) (91) (82) (84) (67) (86) (91) (85) (86) (100) (93) (98) (78) (85) (97) (66) (85) (92) (81) (85 75) (80) (67) (86) (84) (79 91) (89 73) (113) (91) (93) (98) (93) (89 69) (97 91) (86) (88) (110) (91) (93) (90) (92) (94) (88))) :loffset (quote ((0) (0) (0) (0) (0) (0) (74 0) (0) (0) (0) (0) (62 0) (0) (0) (0) (0) (0) (0) (81 0) (0) (0) (0) (0) (81 0) (100 0) (0) (0) (0) (0) (94 0) (93 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (75 0) (0) (0) (0) (0) (0) (74 0) (0) (0) (0) (0) (0) (0) (75 0) (0) (0) (0) (0) (94 0) (94 0) (0) (0) (0) (0) (94 0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (94 0) (93 0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (94 0) (94 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (63 0) (0) (0) (0) (0) (94 0) (94 0) (0) (0) (0) (0) (0) (94 0) (100 0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (((0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0))))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 2 0 (om-make-point 0 0) (om-make-point 782 601) 0 1000 nil 1 (quote :midi-player) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (list (quote g)) 24 2)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 644 195) (om-make-point 176 252) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7600) (7500) (7400) (7300) (7100) (6900) (6800) (6600) (6800) (6900) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (6400) (6300) (6400) (6600) (6800) (6900) (7100) (7300) (7500) (7600) (7500) (7300) (7100) (7600) (6400) (8000) (7600) (7300) (7600) (7500) (7600) (7300) (7000) (6600) (7800) (7500) (7100) (7500) (7300) (7500) (7100) (6800) (6400) (7600) (7300) (7000) (8000) (7800) (7600) (7500) (7300) (7100) (7000) (6400) (6300) (6400) (7000) (6800) (7000) (7100) (7000) (7100) (6300) (6100) (7100) (6100) (7000) (7100) (7100) (7500) (7800) (8300) (8300) (7800) (7500) (7100) (6600) (6300) (5900) (7600) (7500) (7400) (7300) (7100) (6900) (6800) (6600) (6800) (6900) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (6400) (6300) (6400) (6600) (6800) (6900) (7100) (7300) (7500) (7600) (7500) (7300) (7100) (7600) (6400) (8000) (7600) (7300) (7600) (7500) (7600) (7300) (7000) (6600) (7800) (7500) (7100) (7500) (7300) (7500) (7100) (6800) (6400) (7600) (7300) (7000) (8000) (7800) (7600) (7500) (7300) (7100) (7000) (6400) (6300) (6400) (7000) (6800) (7000) (7100) (7000) (7100) (6300) (6100) (7100) (6100) (7000) (7100) (7100) (7500) (7800) (8300) (8300) (7800) (7500) (7100) (6600) (6300) (5900) (5900) (6100) (6300) (6400) (6600) (6800) (7000) (7100) (7000) (6800) (6600) (7100) (5900) (8300) (8200) (8100) (8000) (7800) (7600) (7500) (7300) (7500) (7600) (7500) (7800) (7600) (7800) (7500) (7300) (7500) (7100) (7000) (7100) (7500) (7300) (7500) (8000) (7900) (8000) (7300) (7100) (7300) (7600) (7500) (7600) (8200) (8000) (8200) (7500) (7300) (7500) (8000) (7900) (8000) (8300) (8200) (8300) (7500) (7400) (7500) (8200) (8000) (8200) (7900) (7700) (7900) (7500) (7400) (7400) (8100) (8000) (7800) (7600) (7500) (7600) (7300) (7200) (7300) (7600) (7500) (7600) (8000) (7800) (7600) (7500) (7300) (7500) (7100) (7000) (7100) (7300) (7100) (7300) (7600) (7500) (7300) (7100) (7000) (7100) (6800) (6700) (6800) (6900) (6800) (6900) (7300) (7100) (7300) (6900) (6800) (6900) (7600) (7500) (7600) (6700) (6500) (6700) (7000) (6800) (7000) (5900) (5800) (5900) (6800) (6400) (6100) (5800) (6700) (6800) (6300) (5900) (5600) (6400) (6600) (6800) (6900) (7100) (7300) (7500) (7600) (7500) (7300) (7100) (7600) (7100) (6900) (7100) (6800) (6600) (6800) (7600) (7500) (7400) (7300) (7100) (6900) (6800) (6600) (6800) (6900) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (6400) (6300) (6400) (6600) (6900) (7100) (7500) (7800) (6300) (6400) (6800) (6900) (7300) (7600) (6100) (6600) (6900) (7100) (7300) (7500) (7600) (7300) (6900) (7800) (7600) (7500) (7300) (7100) (6900) (6800) (6400) (6300) (6400) (6800) (6600) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (7100) (6900) (7100) (7600) (7500) (7600) (7100) (6800) (6400) (5900) (6100) (6300) (6400) (6600) (6800) (7000) (7100) (7000) (6800) (6600) (7100) (5900) (8300) (8200) (8100) (8000) (7800) (7600) (7500) (7300) (7500) (7600) (7500) (7800) (7600) (7800) (7500) (7300) (7500) (7100) (7000) (7100) (7500) (7300) (7500) (8000) (7900) (8000) (7300) (7100) (7300) (7600) (7500) (7600) (8200) (8000) (8200) (7500) (7300) (7500) (8000) (7900) (8000) (8300) (8200) (8300) (7500) (7400) (7500) (8200) (8000) (8200) (7900) (7700) (7900) (7500) (7400) (7400) (8100) (8000) (7800) (7600) (7500) (7600) (7300) (7200) (7300) (7600) (7500) (7600) (8000) (7800) (7600) (7500) (7300) (7500) (7100) (7000) (7100) (7300) (7100) (7300) (7600) (7500) (7300) (7100) (7000) (7100) (6800) (6700) (6800) (6900) (6800) (6900) (7300) (7100) (7300) (6900) (6800) (6900) (7600) (7500) (7600) (6700) (6500) (6700) (7000) (6800) (7000) (5900) (5800) (5900) (6800) (6400) (6100) (5800) (6700) (6800) (6300) (5900) (5600) (6400) (6600) (6800) (6900) (7100) (7300) (7500) (7600) (7500) (7300) (7100) (7600) (7100) (6900) (7100) (6800) (6600) (6800) (7600) (7500) (7400) (7300) (7100) (6900) (6800) (6600) (6800) (6900) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (6400) (6300) (6400) (6600) (6900) (7100) (7500) (7800) (6300) (6400) (6800) (6900) (7300) (7600) (6100) (6600) (6900) (7100) (7300) (7500) (7600) (7300) (6900) (7800) (7600) (7500) (7300) (7100) (6900) (6800) (6400) (6300) (6400) (6800) (6600) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (7100) (6900) (7100) (7600) (7500) (7600) (7100) (6800) (6400))) :lonset (quote (208 625 1042 1458 1875 2292 2708 3125 3542 3646 3750 3958 4062 4167 4375 4479 4583 4792 4896 5000 5417 5833 6250 6667 7083 7500 7917 8125 8333 8542 8750 9167 10208 10625 11042 11458 11562 11667 11875 12083 12292 12708 13125 13542 13958 14062 14167 14375 14583 14792 15208 15625 16042 16458 16875 17292 17708 18125 18542 18750 18958 19062 19167 19375 19479 19583 19792 19896 20000 20208 20417 20625 20833 21042 21250 21875 22083 22292 22500 23125 23333 23542 23750 23958 24167 24375 25208 25625 26042 26458 26875 27292 27708 28125 28542 28646 28750 28958 29062 29167 29375 29479 29583 29792 29896 30000 30417 30833 31250 31667 32083 32500 32917 33125 33333 33542 33750 34167 35208 35625 36042 36458 36562 36667 36875 37083 37292 37708 38125 38542 38958 39062 39167 39375 39583 39792 40208 40625 41042 41458 41875 42292 42708 43125 43542 43750 43958 44062 44167 44375 44479 44583 44792 44896 45000 45208 45417 45625 45833 46042 46250 46875 47083 47292 47500 48125 48333 48542 48750 48958 49167 49375 50000 50417 50833 51250 51667 52083 52500 52917 53125 53333 53542 53750 54167 55208 55625 56042 56458 56875 57292 57708 58125 58542 58646 58750 58958 59062 59167 59375 59479 59583 59792 59896 60000 60208 60312 60417 60625 60729 60833 61042 61146 61250 61458 61562 61667 61875 61979 62083 62292 62396 62500 62708 62812 62917 63125 63229 63333 63542 63646 63750 63958 64062 64167 64375 64479 64583 64792 64896 65000 65208 65625 66042 66458 66562 66667 66875 66979 67083 67292 67396 67500 67708 68125 68542 68958 69062 69167 69375 69479 69583 69792 69896 70000 70208 70625 71042 71458 71562 71667 71875 71979 72083 72292 72396 72500 72708 72812 72917 73125 73229 73333 73542 73646 73750 73958 74062 74167 74375 74479 74583 74792 74896 75000 75208 75417 75625 75833 76042 76250 76458 76667 76875 77500 77917 78333 78750 79167 79583 80000 80417 80625 80833 81042 81250 81875 81979 82083 82292 82396 82500 82708 83125 83542 83958 84375 84792 85208 85625 86042 86146 86250 86458 86562 86667 86875 86979 87083 87292 87396 87500 87917 88333 88750 89167 89583 90000 90417 90833 91250 91667 92083 92500 92917 93333 93750 94167 94583 95000 95417 95833 96250 97708 97917 98125 98333 98542 98750 98958 99062 99167 99375 99479 99583 99792 99896 100000 100208 100312 100417 100625 100729 100833 101042 101146 101250 101458 101667 101875 102500 102917 103333 103750 104167 104583 105000 105417 105625 105833 106042 106250 106667 107708 108125 108542 108958 109375 109792 110208 110625 111042 111146 111250 111458 111562 111667 111875 111979 112083 112292 112396 112500 112708 112812 112917 113125 113229 113333 113542 113646 113750 113958 114062 114167 114375 114479 114583 114792 114896 115000 115208 115312 115417 115625 115729 115833 116042 116146 116250 116458 116562 116667 116875 116979 117083 117292 117396 117500 117708 118125 118542 118958 119062 119167 119375 119479 119583 119792 119896 120000 120208 120625 121042 121458 121562 121667 121875 121979 122083 122292 122396 122500 122708 123125 123542 123958 124062 124167 124375 124479 124583 124792 124896 125000 125208 125312 125417 125625 125729 125833 126042 126146 126250 126458 126562 126667 126875 126979 127083 127292 127396 127500 127708 127917 128125 128333 128542 128750 128958 129167 129375 130000 130417 130833 131250 131667 132083 132500 132917 133125 133333 133542 133750 134375 134479 134583 134792 134896 135000 135208 135625 136042 136458 136875 137292 137708 138125 138542 138646 138750 138958 139062 139167 139375 139479 139583 139792 139896 140000 140417 140833 141250 141667 142083 142500 142917 143333 143750 144167 144583 145000 145417 145833 146250 146667 147083 147500 147917 148333 148750 150208 150417 150625 150833 151042 151250 151458 151562 151667 151875 151979 152083 152292 152396 152500 152714 152821 152929 153143 153250 153357 153571 153679 153786 153994 154203 154411 154619)) :ldur (quote ((417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (417) (417) (416) (417) (417) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (209) (208) (417) (208) (209) (208) (417) (208) (209) (208) (208) (209) (208) (208) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (417) (417) (416) (417) (417) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (209) (208) (417) (208) (209) (208) (417) (208) (209) (208) (208) (209) (208) (208) (208) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (209) (208) (208) (209) (208) (208) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (625) (104) (104) (209) (104) (104) (208) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (1424) (209) (208) (208) (209) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (208) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (209) (208) (208) (209) (208) (208) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (625) (104) (104) (209) (104) (104) (208) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (1250) (209) (208) (208) (209) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (214) (107) (108) (214) (107) (107) (214) (108) (107) (208) (209) (208) (208))) :lvel (quoteloffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6700) (7900) (8100) (7900) (7800) (7900) (8100) (7400) (7200) (7100) (6900) (7100) (7200) (7100) (6900) (7100) (6700) (7600) (7400) (7200) (7800) (8100) (7100) (7900) (7900) (7800) (8300) (8100) (7400) (7600) (7400) (7200) (7100) (7600) (7100) (7400) (7300) (7400) (7600) (7300) (6900) (7400) (6700) (6600) (6700) (6400) (6900) (6700) (6600) (6400) (6200) (6400) (6600) (6700) (6900) (7100) (7400) (7300) (7400) (7300) (7400) (6900) (6700) (6600) (6700) (6400) (6600) (6700) (7900) (8100) (7900) (7800) (7900) (8100) (7400) (7200) (7100) (6900) (7100) (7200) (7100) (6900) (7100) (6700) (7600) (7400) (7200) (7800) (8100) (7900) (7900) (7800) (8300) (8100) (7400) (7600) (7400) (7200) (7100) (7600) (7100) (7400) (7300) (7400) (7600) (7300) (6900) (7400) (6700) (6600) (6700) (6400) (6900) (6700) (6600) (6400) (6200) (6400) (6600) (6700) (6900) (7100) (7400) (7300) (7400) (7300) (7400) (6900) (6700) (6600) (6700) (6400) (6600))) :lonset (quote (4031 5031 6386 6548 6720 6881 7042 8364 8542 8709 8859 9042 9375 9542 9714 9875 10042 10375 10709 11042 11375 11709 12042 12709 13042 13709 14720 15025 15709 16209 16381 16531 16698 17025 17386 17709 18042 18392 18709 19375 19709 20709 21042 22375 22709 23042 23375 23542 23709 23875 24042 24375 24542 24709 24875 25042 25375 25709 26042 27375 28042 29209 29375 29542 29709 29875 30042 36031 37031 38386 38548 38720 38881 39042 40364 40542 40709 40859 41042 41375 41542 41714 41875 42042 42375 42709 43042 43375 43709 44709 45042 45709 46720 47025 47709 48209 48381 48531 48698 49025 49386 49709 50042 50392 50709 51375 51709 52709 53042 54375 54709 55042 55375 55542 55709 55875 56042 56375 56542 56709 56875 57042 57375 57709 58042 59375 60042 61209 61375 61542 61709 61875 62042 64042)) :ldur (quote ((1022) (1394) (195) (183) (189) (183) (333) (189) (183) (144) (194) (350) (189) (200) (178) (178) (333) (334) (333) (333) (334) (333) (667) (333) (639) (333) (328) (695) (511) (177) (167) (167) (355) (356) (356) (355) (356) (317) (689) (334) (333) (333) (1000) (334) (333) (394) (167) (167) (166) (167) (333) (167) (167) (166) (167) (333) (334) (333) (1000) (334) (1000) (166) (167) (167) (166) (167) (2000) (1022) (1394) (195) (183) (189) (183) (333) (189) (183) (144) (194) (350) (189) (200) (178) (178) (333) (334) (333) (333) (334) (333) (333) (639) (333) (328) (695) (511) (177) (167) (167) (355) (356) (356) (355) (356) (317) (689) (334) (333) (333) (1333) (334) (333) (394) (167) (167) (166) (167) (333) (167) (167) (166) (167) (333) (334) (333) (1333) (334) (1000) (166) (167) (167) (166) (167) (2000))) :lvel (quote ((101) (102) (100) (86) (90) (88) (97) (96) (90) (75) (58) (81) (86) (97) (78) (73) (90) (90) (90) (90) (88) (88) (102) (91) (101) (85) (101) (100) (100) (88) (77) (77) (86) (92) (84) (91) (90) (93) (95) (92) (81) (96) (96) (88) (88) (85) (76) (84) (63) (61) (61) (61) (61) (61) (61) (61) (61) (61) (95) (67) (84) (84) (84) (84) (84) (84) (84) (101) (102) (100) (86) (90) (88) (97) (96) (90) (75) (58) (81) (86) (97) (78) (73) (90) (90) (90) (90) (88) (102) (91) (101) (85) (101) (100) (100) (88) (77) (77) (86) (92) (84) (91) (90) (93) (95) (92) (81) (96) (96) (88) (88) (85) (76) (84) (63) (61) (61) (61) (61) (61) (61) (61) (61) (61) (95) (67) (84) (84) (84) (84) (84) (84) (84))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000) (6200) (6400) (6500) (6200) (6400) (6000) (6700) (7200) (6900 7100) (7100) (7200) (7400) (6700) (6900) (7100) (7200) (6900) (7100) (6700) (7400) (7900) (7600 7700) (7700) (7900) (7600) (8100) (7900) (7700) (7600) (7900) (7700) (8100) (7900) (7700) (7600) (7400) (7200) (7600) (7400) (7700) (7600) (7400) (7200) (7100) (6900) (7200) (7100) (7400) (7200) (7100) (6900) (6700) (6600) (6900) (6700) (7100) (6900) (6200) (7100 7200) (7200) (7400) (7100) (6900) (6700) (6600) (6400) (6700) (6600) (6900) (6700) (7100) (6900) (7200) (7100) (7400) (7200) (7600) (7400) (7200 7100) (7400) (7900) (7200 7100) (7100) (6900) (6700) (6700) (6700) (6900) (7100) (7200) (6900) (7100) (6700) (6600) (6900) (7100) (7200) (7400) (7100) (7200) (6900) (7100) (7400) (7200) (7100) (6900) (7200) (7100) (7400) (7200) (7600) (7400) (7200) (7100) (7400) (7300) (7600) (7400) (7300) (7400) (7600) (7700) (6900) (7100) (7300) (7400) (6600) (6800) (6900) (7100) (7200) (7400) (6400) (6600) (6800) (6900) (6600) (6800) (6400) (7600) (7400) (7200) (7600) (7400) (7200) (7100) (7400) (7200) (8100) (8000) (8300) (8100) (7600) (7700) (7400) (6800) (7700) (7600) (7400) (7400 7200) (7200) (7100) (6900) (6900) (8100) (7900) (7700) (7600) (7900) (7700) (8100) (7900) (7600) (7700) (7900) (8100) (7700) (7900) (7600) (7700) (7900) (7700) (7600) (7400) (7700) (7600) (7900) (7700) (7400) (7600) (7700) (7900) (7600) (7700) (7400) (7600) (7200) (7400) (7600) (7700) (7400) (7600) (7200) (7400) (7600) (7700) (7900) (8100) (7700) (7900) (7600) (7700) (7900) (8100) (8300) (8400) (8100) (8300) (7900) (8400) (7900) (7700 7600) (7600) (7400) (7200) (7200) (7000) (6900) (6700) (6500) (6900) (6700) (7000) (6900) (7100) (7200) (6400) (6200) (7200) (6500) (7100) (6400 7200 6700))) :lonset (quote (174 349 523 698 872 1047 1221 1395 1744 2093 2267 2442 2791 2965 3140 3314 3488 3663 3837 4012 4186 4535 4884 5058 5233 5581 5756 5930 6105 6279 6453 6628 6802 6977 7151 7326 7500 7674 7849 8023 8198 8372 8547 8721 8895 9070 9244 9419 9593 9767 9942 10116 10291 10465 10640 10814 10988 11163 11512 11860 12035 12384 12558 12733 12907 13081 13256 13430 13605 13779 13953 14128 14302 14477 14651 14826 15000 15174 15349 15523 15698 15872 16047 16221 16395 16570 16744 18314 18488 18663 18837 19012 19186 19360 19535 21105 21279 21453 21628 21802 21977 22151 22326 23895 24070 24244 24419 24593 24767 24942 25116 26686 26860 27035 27209 27384 27558 27733 27907 28256 28605 28953 29302 29651 30000 30349 30698 31046 31395 31744 32093 32442 32791 33663 33837 34012 34186 34360 34535 34709 34884 35058 35233 35407 35581 35756 35930 36105 36279 36453 36628 36802 36977 37151 37326 37500 37674 37849 38023 38198 38372 38546 38721 38895 39070 39244 39419 39593 39767 39942 40116 40291 40465 42035 42209 42384 42558 42733 42907 43081 43256 44826 45000 45174 45349 45523 45698 45872 46046 47616 47791 47965 48140 48314 48488 48663 48837 50407 50581 50756 50930 51105 51279 51453 51628 51802 51977 52151 52326 52500 52674 52849 53023 53198 53372 53546 53721 53895 54070 54244 54419 54767 55116 55291 55465 55640 55814 55988 56163 56337 56512 56686 56860 57035 57209 57384 57558 57733 57907 58081 58256 58430 58605 61395)) :ldur (quote ((175) (174) (175) (174) (175) (174) (174) (349) (349) (87 87) (175) (349) (174) (175) (174) (174) (175) (174) (175) (174) (349) (349) (87 87) (175) (348) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (349) (348) (87 88) (349) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (88 87) (174) (175) (87 87) (174) (175) (174) (349) (174) (175) (174) (175) (174) (174) (175) (349) (174) (174) (175) (174) (175) (174) (175) (348) (175) (174) (175) (174) (174) (175) (174) (349) (174) (175) (174) (175) (174) (175) (174) (349) (349) (348) (349) (349) (349) (349) (349) (348) (349) (349) (349) (349) (349) (697) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (87 87) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (1541) (174) (175) (174) (175) (174) (174) (175) (1395) (174) (174) (175) (174) (175) (174) (174) (1541) (175) (174) (175) (174) (174) (175) (174) (1541) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (348) (349) (88 87) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (2790 2790 2790))) :lvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (88 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0))))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 1 0 (om-make-point 0 0) (om-make-point 935 457) 0 1000 nil 1 (quote :midi-player) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1 1 1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (list (quote g) (quote g) (quote g)) 24 2)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (let ((box (om-load-boxcall (quote genfun) "LIST-ELEMENTS" (quote list-elements) (quote ((om-load-inputfun (quote input-funbox) "a list" "LIST" (quote c)))) (om-make-point 762 121) nil nil "&" nil 4))) (setf (numouts box) 4) box))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "MAPCAR" (quote mapcar) (quote ((om-load-inputfun (quote input-funbox) "FUNCTION" "FUNCTION" nil) (om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 462 182) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "VS-CLASS-MEMBERS" (quote omai::vs-class-members) (quote ((om-load-inputfun (quote input-funbox) "OBJECT" "OBJECT" nil))) (om-make-point 385 137) nil nil "l" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 506 81) (om-make-point 26 30) 4 "4" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "K-MEANS 2" (quote omai::k-means) (quote ((om-load-inputfun (quote input-funbox) "VECTORS" "VECTORS" nil) (om-load-inputfun (quote input-funbox) "K" "K" nil))) (om-make-point 469 113) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "VECTOR-SPACE" (quote omai::vector-space) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "hash-table containing vs-vectors" "vectors" nil) (om-load-inputfun (quote input-funbox) "a list of features used for display and clustering" "features" nil) (om-load-inputfun (quote input-funbox) "hash-table containing classes number of clustering" "classes" nil))) (om-make-point 208 391) (om-make-point 70 50) (if (find-class (quote omai::vector-space) nil) (make-instance (quote omai::vector-space) :vectors (let ((hashtable (make-hash-table))) (loop for key in (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7600) (7500) (7400) (7300) (7100) (6900) (6800) (6600) (6800) (6900) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (6400) (6300) (6400) (6600) (6800) (6900) (7100) (7300) (7500) (7600) (7500) (7300) (7100) (7600) (6400) (8000) (7600) (7300) (7600) (7500) (7600) (7300) (7000) (6600) (7800) (7500) (7100) (7500) (7300) (7500) (7100) (6800) (6400) (7600) (7300) (7000) (8000) (7800) (7600) (7500) (7300) (7100) (7000) (6400) (6300) (6400) (7000) (6800) (7000) (7100) (7000) (7100) (6300) (6100) (7100) (6100) (7000) (7100) (7100) (7500) (7800) (8300) (8300) (7800) (7500) (7100) (6600) (6300) (5900) (7600) (7500) (7400) (7300) (7100) (6900) (6800) (6600) (6800) (6900) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (6400) (6300) (6400) (6600) (6800) (6900) (7100) (7300) (7500) (7600) (7500) (7300) (7100) (7600) (6400) (8000) (7600) (7300) (7600) (7500) (7600) (7300) (7000) (6600) (7800) (7500) (7100) (7500) (7300) (7500) (7100) (6800) (6400) (7600) (7300) (7000) (8000) (7800) (7600) (7500) (7300) (7100) (7000) (6400) (6300) (6400) (7000) (6800) (7000) (7100) (7000) (7100) (6300) (6100) (7100) (6100) (7000) (7100) (7100) (7500) (7800) (8300) (8300) (7800) (7500) (7100) (6600) (6300) (5900) (5900) (6100) (6300) (6400) (6600) (6800) (7000) (7100) (7000) (6800) (6600) (7100) (5900) (8300) (8200) (8100) (8000) (7800) (7600) (7500) (7300) (7500) (7600) (7500) (7800) (7600) (7800) (7500) (7300) (7500) (7100) (7000) (7100) (7500) (7300) (7500) (8000) (7900) (8000) (7300) (7100) (7300) (7600) (7500) (7600) (8200) (8000) (8200) (7500) (7300) (7500) (8000) (7900) (8000) (8300) (8200) (8300) (7500) (7400) (7500) (8200) (8000) (8200) (7900) (7700) (7900) (7500) (7400) (7400) (8100) (8000) (7800) (7600) (7500) (7600) (7300) (7200) (7300) (7600) (7500) (7600) (8000) (7800) (7600) (7500) (7300) (7500) (7100) (7000) (7100) (7300) (7100) (7300) (7600) (7500) (7300) (7100) (7000) (7100) (6800) (6700) (6800) (6900) (6800) (6900) (7300) (7100) (7300) (6900) (6800) (6900) (7600) (7500) (7600) (6700) (6500) (6700) (7000) (6800) (7000) (5900) (5800) (5900) (6800) (6400) (6100) (5800) (6700) (6800) (6300) (5900) (5600) (6400) (6600) (6800) (6900) (7100) (7300) (7500) (7600) (7500) (7300) (7100) (7600) (7100) (6900) (7100) (6800) (6600) (6800) (7600) (7500) (7400) (7300) (7100) (6900) (6800) (6600) (6800) (6900) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (6400) (6300) (6400) (6600) (6900) (7100) (7500) (7800) (6300) (6400) (6800) (6900) (7300) (7600) (6100) (6600) (6900) (7100) (7300) (7500) (7600) (7300) (6900) (7800) (7600) (7500) (7300) (7100) (6900) (6800) (6400) (6300) (6400) (6800) (6600) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (7100) (6900) (7100) (7600) (7500) (7600) (7100) (6800) (6400) (5900) (6100) (6300) (6400) (6600) (6800) (7000) (7100) (7000) (6800) (6600) (7100) (5900) (8300) (8200) (8100) (8000) (7800) (7600) (7500) (7300) (7500) (7600) (7500) (7800) (7600) (7800) (7500) (7300) (7500) (7100) (7000) (7100) (7500) (7300) (7500) (8000) (7900) (8000) (7300) (7100) (7300) (7600) (7500) (7600) (8200) (8000) (8200) (7500) (7300) (7500) (8000) (7900) (8000) (8300) (8200) (8300) (7500) (7400) (7500) (8200) (8000) (8200) (7900) (7700) (7900) (7500) (7400) (7400) (8100) (8000) (7800) (7600) (7500) (7600) (7300) (7200) (7300) (7600) (7500) (7600) (8000) (7800) (7600) (7500) (7300) (7500) (7100) (7000) (7100) (7300) (7100) (7300) (7600) (7500) (7300) (7100) (7000) (7100) (6800) (6700) (6800) (6900) (6800) (6900) (7300) (7100) (7300) (6900) (6800) (6900) (7600) (7500) (7600) (6700) (6500) (6700) (7000) (6800) (7000) (5900) (5800) (5900) (6800) (6400) (6100) (5800) (6700) (6800) (6300) (5900) (5600) (6400) (6600) (6800) (6900) (7100) (7300) (7500) (7600) (7500) (7300) (7100) (7600) (7100) (6900) (7100) (6800) (6600) (6800) (7600) (7500) (7400) (7300) (7100) (6900) (6800) (6600) (6800) (6900) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (6400) (6300) (6400) (6600) (6900) (7100) (7500) (7800) (6300) (6400) (6800) (6900) (7300) (7600) (6100) (6600) (6900) (7100) (7300) (7500) (7600) (7300) (6900) (7800) (7600) (7500) (7300) (7100) (6900) (6800) (6400) (6300) (6400) (6800) (6600) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (7100) (6900) (7100) (7600) (7500) (7600) (7100) (6800) (6400))) :lonset (quote (208 625 1042 1458 1875 2292 2708 3125 3542 3646 3750 3958 4062 4167 4375 4479 4583 4792 4896 5000 5417 5833 6250 6667 7083 7500 7917 8125 8333 8542 8750 9167 10208 10625 11042 11458 11562 11667 11875 12083 12292 12708 13125 13542 13958 14062 14167 14375 14583 14792 15208 15625 16042 16458 16875 17292 17708 18125 18542 18750 18958 19062 19167 19375 19479 19583 19792 19896 20000 20208 20417 20625 20833 21042 21250 21875 22083 22292 22500 23125 23333 23542 23750 23958 24167 24375 25208 25625 26042 26458 26875 27292 27708 28125 28542 28646 28750 28958 29062 29167 29375 29479 29583 29792 29896 30000 30417 30833 31250 31667 32083 32500 32917 33125 33333 33542 33750 34167 35208 35625 36042 36458 36562 36667 36875 37083 37292 37708 38125 38542 38958 39062 39167 39375 39583 39792 40208 40625 41042 41458 41875 42292 42708 43125 43542 43750 43958 44062 44167 44375 44479 44583 44792 44896 45000 45208 45417 45625 45833 46042 46250 46875 47083 47292 47500 48125 48333 48542 48750 48958 49167 49375 50000 50417 50833 51250 51667 52083 52500 52917 53125 53333 53542 53750 54167 55208 55625 56042 56458 56875 57292 57708 58125 58542 58646 58750 58958 59062 59167 59375 59479 59583 59792 59896 60000 60208 60312 60417 60625 60729 60833 61042 61146 61250 61458 61562 61667 61875 61979 62083 62292 62396 62500 62708 62812 62917 63125 63229 63333 63542 63646 63750 63958 64062 64167 64375 64479 64583 64792 64896 65000 65208 65625 66042 66458 66562 66667 66875 66979 67083 67292 67396 67500 67708 68125 68542 68958 69062 69167 69375 69479 69583 69792 69896 70000 70208 70625 71042 71458 71562 71667 71875 71979 72083 72292 72396 72500 72708 72812 72917 73125 73229 73333 73542 73646 73750 73958 74062 74167 74375 74479 74583 74792 74896 75000 75208 75417 75625 75833 76042 76250 76458 76667 76875 77500 77917 78333 78750 79167 79583 80000 80417 80625 80833 81042 81250 81875 81979 82083 82292 82396 82500 82708 83125 83542 83958 84375 84792 85208 85625 86042 86146 86250 86458 86562 86667 86875 86979 87083 87292 87396 87500 87917 88333 88750 89167 89583 90000 90417 90833 91250 91667 92083 92500 92917 93333 93750 94167 94583 95000 95417 95833 96250 97708 97917 98125 98333 98542 98750 98958 99062 99167 99375 99479 99583 99792 99896 100000 100208 100312 100417 100625 100729 100833 101042 101146 101250 101458 101667 101875 102500 102917 103333 103750 104167 104583 105000 105417 105625 105833 106042 106250 106667 107708 108125 108542 108958 109375 109792 110208 110625 111042 111146 111250 111458 111562 111667 111875 111979 112083 112292 112396 112500 112708 112812 112917 113125 113229 113333 113542 113646 113750 113958 114062 114167 114375 114479 114583 114792 114896 115000 115208 115312 115417 115625 115729 115833 116042 116146 116250 116458 116562 116667 116875 116979 117083 117292 117396 117500 117708 118125 118542 118958 119062 119167 119375 119479 119583 119792 119896 120000 120208 120625 121042 121458 121562 121667 121875 121979 122083 122292 122396 122500 122708 123125 123542 123958 124062 124167 124375 124479 124583 124792 124896 125000 125208 125312 125417 125625 125729 125833 126042 126146 126250 126458 126562 126667 126875 126979 127083 127292 127396 127500 127708 127917 128125 128333 128542 128750 128958 129167 129375 130000 130417 130833 131250 131667 132083 132500 132917 133125 133333 133542 133750 134375 134479 134583 134792 134896 135000 135208 135625 136042 136458 136875 137292 137708 138125 138542 138646 138750 138958 139062 139167 139375 139479 139583 139792 139896 140000 140417 140833 141250 141667 142083 142500 142917 143333 143750 144167 144583 145000 145417 145833 146250 146667 147083 147500 147917 148333 148750 150208 150417 150625 150833 151042 151250 151458 151562 151667 151875 151979 152083 152292 152396 152500 152714 152821 152929 153143 153250 153357 153571 153679 153786 153994 154203 154411 154619)) :ldur (quote ((417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (417) (417) (416) (417) (417) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (209) (208) (417) (208) (209) (208) (417) (208) (209) (208) (208) (209) (208) (208) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (417) (417) (416) (417) (417) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (209) (208) (417) (208) (209) (208) (417) (208) (209) (208) (208) (209) (208) (208) (208) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (209) (208) (208) (209) (208) (208) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (625) (104) (104) (209) (104) (104) (208) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (1424) (209) (208) (208) (209) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (208) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (209) (208) (208) (209) (208) (208) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (625) (104) (104) (209) (104) (104) (208) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (1250) (209) (208) (208) (209) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (214) (107) (108) (214) (107) (107) (214) (108) (107) (208) (209) (208) (208))) :lvel (quoteloffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6400) (6900) (7200) (7100) (6400) (7100) (7400) (7200) (7600) (6800) (7600) (6900) (6400) (6900) (7200) (7100) (6400) (7100) (7400) (7200) (6900) (7600) (7200) (7600) (6900) (7200) (6400) (6700) (6500) (6900) (7400) (7700) (7400) (7100) (7400) (6700) (7100) (6200) (6500) (6400) (6700) (7200) (7600) (7200) (6900) (7200) (6500) (7400) (7100) (6700) (7100) (6400) (7200) (6900) (6500) (6900) (6200) (7100) (7200) (6700) (7200) (7600) (7400) (6700) (7400) (7700) (7600) (7900) (7100) (7900) (7200) (6700) (7200) (7600) (7400) (6700) (7400) (7700) (7600) (7200) (7900) (7600) (8400) (8100) (7600) (8100) (7200) (7600) (6900) (7200) (7400) (7800) (8100) (8400) (8300) (7900) (7400) (7900) (7100) (7400) (6700) (7100) (7200) (7600) (7900) (8300) (8100) (7800) (7500) (7800) (7100) (7500) (6600) (6900) (6700) (7900) (7600) (7200) (7600) (6900) (7800) (7400) (7100) (7400) (6700) (7600) (7200) (6900) (7200) (6600) (7900) (7800) (7600) (7500) (7800) (7100) (7500) (7600) (7900) (8200) (7900) (7600) (7900) (7300) (7600) (7900) (7600) (7300) (7600) (6900) (7700) (8100) (7700) (7400) (7700) (7100) (7400) (7700) (7400) (7100) (7400) (6700) (7600) (7900) (7600) (7200) (7600) (6900) (7200) (7500) (7200) (6900) (7200) (6600) (7400) (7700) (7400) (7100) (7400) (6800) (7100) (7400) (7100) (6800) (7100) (6400) (6400) (6900) (7200) (7100) (6400) (7100) (7400) (7200) (6900) (6800) (6400) (6900) (7200) (7600) (7200) (6900) (7200) (6600) (6900) (7200) (6900) (6600) (6900) (6300) (7200) (7100) (6900) (6800) (7100) (7400) (7100) (6800) (7100) (6200) (6500) (6800) (6500) (6200) (6500) (5900) (6500) (6400) (6200) (6000) (6400) (6900) (6400) (6000) (6400) (5700) (6000) (6300) (6000) (5700) (6000) (5400) (6000) (5900) (5700) (5600) (7100) (6800) (6400) (6400) (6900) (7200) (7100) (6400) (7100) (7400) (7200) (6900) (7200) (7600) (7400) (7100) (7400) (7700) (7600) (7200) (7600) (7900) (7700) (7600) (7400) (7200) (7100) (7200) (7400) (7600) (7700) (7400) (8000) (7400) (8300) (7400) (7200) (8100) (7700) (7400) (7100) (7400) (6800) (7100) (7200) (6900) (6400) (6900) (7100) (6800) (6900) (6400) (6000) (6400) (5700))) :lonset (quote (163 326 489 652 815 978 1141 1304 1630 1957 2283 2609 2772 2935 3098 3261 3424 3587 3750 3913 4239 5380 5543 5707 5870 6033 6196 6359 6522 6848 7174 7500 7989 8152 8315 8478 8641 8804 8967 9130 9457 9783 10109 10598 10761 10924 11087 11413 11902 12065 12228 12391 12717 13207 13370 13533 13696 14022 14348 15815 15978 16141 16304 16467 16630 16793 16957 17283 17609 17935 18261 18424 18587 18750 18913 19076 19239 19402 19565 19891 20217 20543 20870 21033 21196 21359 21522 21685 21848 22011 22174 22500 22826 23152 23478 23641 23804 23967 24130 24293 24457 24620 24783 25109 25435 25761 26087 26250 26413 26576 26739 26902 27065 27228 27391 27717 28207 28370 28533 28696 29022 29511 29674 29837 30000 30326 30815 30978 31141 31304 31467 31630 31793 31957 32120 32283 32446 32609 34076 34239 34402 34565 34728 34891 35054 35217 35380 35543 35707 35870 36685 36848 37011 37174 37337 37500 37663 37826 37989 38152 38315 38478 39293 39457 39620 39783 39946 40109 40272 40435 40598 40761 40924 41087 41902 42065 42228 42391 42554 42717 42880 43043 43207 43370 43533 43696 44511 44674 44837 45000 45163 45326 45489 45652 45978 46304 46630 46957 47120 47283 47446 47609 47772 47935 48098 48261 48424 48587 48750 48913 49076 49239 49402 49565 49728 49891 50054 50217 50380 50543 50707 50870 51033 51196 51359 51522 51685 51848 52011 52174 52337 52500 52663 52826 52989 53152 53315 53478 53641 53804 53967 54130 54293 54457 54620 54783 55109 55435 55761 56250 56413 56576 56739 56902 57065 57228 57391 57554 57717 57880 58043 58207 58370 58533 58696 58859 59022 59185 59348 59511 59674 59837 60000 60163 60326 60489 60652 60815 60978 61141 61304 61467 61630 61793 61957 62120 62283 62446 62609 62772 62935 63098 63261 63424 63587 63750 63913 64076 64239 64402 64565 66522)) :ldur (quote ((163) (163) (163) (163) (163) (163) (163) (326) (327) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (163) (164) (163) (163) (163) (163) (163) (326) (326) (326) (489) (163) (163) (163) (163) (163) (163) (163) (327) (326) (326) (489) (163) (163) (163) (326) (489) (163) (163) (163) (326) (490) (163) (163) (163) (326) (326) (326) (163) (163) (163) (163) (163) (163) (164) (326) (326) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (327) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (326) (163) (163) (163) (163) (163) (164) (163) (163) (326) (326) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (326) (490) (163) (163) (163) (326) (489) (163) (163) (163) (326) (489) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (326) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (327) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (326) (326) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (1957))) :lvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7000) (7000) (7400) (6900) (7000) (6500) (7000) (7400) (7700) (6900) (7000) (7400) (6900) (7000) (6700) (7000) (7500) (7900) (6900) (7000) (7700) (7200) (7400) (7000) (7400) (7700) (8200) (7400) (7900) (6900) (7200) (7700) (6700) (7000) (7500) (6500) (6900) (7400) (7000) (7400) (7700) (7400) (7200) (7000) (7400) (6900) (7000) (6700) (7000) (7400) (7900) (8200) (7600) (7200) (7600) (7900) (7600) (7400) (7200) (7600) (7100) (7200) (6900) (7200) (7600) (8100) (8400) (7700) (7400) (7700) (8100) (7400) (7200) (7000) (7400) (7900) (7200) (7000) (6900) (7000) (6900) (6700) (7000) (7600) (6900) (6700) (6500) (6700) (6500) (6400) (6700) (7200) (6500) (6400) (6200) (6400) (7600) (7700 7600) (7700 7600 7700 7600) (7700 7600 7700 7600) (7600 7400) (7700) (7200) (6900) (6500) (7700) (7900 7700) (7900 7700) (7900 7700) (7700 7600) (7900) (7600) (7000) (6700) (7900) (8100 7900) (8100 7900) (8100 7900) (7900 7700) (8000) (7600) (7700) (7400) (7700) (8000) (8300) (8400) (7700) (7600) (7400) (7200) (7900) (7600) (7200) (7000) (6900) (6700) (6900) (7200) (6700) (6900) (6500) (6900) (7200) (7700) (6700) (6500) (6900) (6400) (6500) (6200) (6500) (6900) (7400) (6400) (6200) (6500) (6000) (6200) (5800) (6200) (6500) (7000) (6000) (5800) (6700) (5800) (6700) (6000 5800) (6000 5800) (6000 5800) (6000 5800) (5800) (5800) (6700) (5700) (5800) (5700) (6000) (5800) (6000) (6500) (6400) (7000) (6900) (6700) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6200) (7000) (6700) (6400) (6400 6500) (6400 6500) (6400 6500) (6400 6500) (6500) (6500 6000 5700) (7000) (7000) (7400) (6900) (7000) (6500) (7000) (7400) (7700) (6900) (7000) (7400) (6900) (7000) (6700) (7000) (7500) (7900) (6900) (7000) (7700) (7200) (7400) (7000) (7400) (7700) (8200) (7400) (7900) (6900) (7200) (7700) (6700) (7000) (7500) (6500) (6900) (7400) (7000) (7400) (7700) (7400) (7200) (7000) (7400) (6900) (7000) (6700) (7000) (7400) (7900) (8200) (7600) (7200) (7600) (7900) (7600) (7400) (7200) (7600) (7100) (7200) (6900) (7200) (7600) (8100) (8400) (7700) (7400) (7700) (8100) (7400) (7200) (7000) (7400) (7900) (7200) (7000) (6900) (7000) (6900) (6700) (7000) (7600) (6900) (6700) (6500) (6700) (6500) (6400) (6700) (7200) (6500) (6400) (6200) (6400) (7600) (7700 7600) (7700 7600 7700 7600) (7700 7600 7700 7600) (7600 7400) (7700) (7200) (6900) (6500) (7700) (7900 7700) (7900 7700) (7900 7700) (7700 7600) (7900) (7600) (7000) (6700) (7900) (8100 7900) (8100 7900) (8100 7900) (7900 7700) (8000) (7600) (7700) (7400) (7700) (8000) (8300) (8400) (7700) (7600) (7400) (7200) (7900) (7600) (7200) (7000) (6900) (6700) (6900) (7200) (6700) (6900) (6500) (6900) (7200) (7700) (6700) (6500) (6900) (6400) (6500) (6200) (6500) (6900) (7400) (6400) (6200) (6500) (6000) (6200) (5800) (6200) (6500) (7000) (6000) (5800) (6700) (5800) (6700) (6000 5800) (6000 5800) (6000 5800) (6000 5800) (5800) (5800) (6700) (5700) (5800) (5700) (6000) (5800) (6000) (6500) (6400) (7000) (6900) (6700) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6200) (7000) (6700) (6400) (6400 6500) (6400 6500) (6400 6500) (6400 6500) (6500) (6500 6000 5700) (6500) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6700) (6900) (7200) (6700) (6900) (6600) (6900) (7200) (7500) (7000) (7200) (7500) (7000) (7200) (6900) (7200) (7800) (8100) (7400) (8200) (8400) (7500) (8100) (8200) (7400) (7900) (8100) (7200) (7900 7800) (7900 7800) (7900 7800) (7900 7800) (7800) (7400) (7800) (8100) (7400) (7200) (7000) (7400) (6900) (7000) (6700) (7000) (7400) (7900) (8200) (7500) (7200) (7500) (7900) (7200) (7000) (6900) (7200) (6700) (6900) (6500) (6900) (7200) (7700) (8100) (7400) (7000) (7400) (7700) (7000) (6800) (6700) (7700) (7500) (8200) (8000) (7400) (6300) (7400) (7200) (7900) (7700) (7100) (6000) (7000) (6900) (7500) (7400) (6700) (6600) (6900) (7200) (7500) (7400) (7200) (8100) (6200) (6700) (7000) (7400) (7200) (7000) (8200) (6100) (6400) (6700) (7000) (6900) (6700) (7600) (6700) (6600) (6700) (6900) (6200) (6600) (6900) (7200) (7000) (6900) (7900) (7700) (7500) (7400) (7200) (7000) (6900) (7200) (6600) (6700) (7000) (6200) (6300) (6500) (6800) (6300) (6500) (6800) (7400) (7700) (6800) (6700) (7000) (6500) (6700) (7000) (7500) (7900) (7700) (7500) (7400) (7500) (7700) (6700) (6900) (7000) (7000) (7000 6900) (7000 6900) (7000 6900) (7000 6900) (6900) (6900) (7000 6900) (7000 6900) (7000 6900) (6900 6700) (7000) (6500) (6200) (5800) (7000) (7200 7000) (7200 7000) (7200 7000) (7000 6900) (7200) (6900) (6300) (6000) (7200) (7400 7200) (7400 7200) (7400 7200) (7200 7000) (7300) (6900) (7000) (6700) (7000) (7300) (7600) (7700) (7000) (6900 7000 6900) (6700 7000) (6500) (7500) (7400) (7200) (7300) (7900) (7200) (7300) (6900) (7000) (6300 6500 6300) (6200 6500) (6300) (6200) (6500) (6000) (6200) (5800) (6200) (6500) (7000) (6300) (6500) (7000) (6300) (6500) (6200) (6500) (7000) (7400) (6900) (7000) (7400) (6900) (7000) (6500) (7000) (7400) (7700) (6800) (6700) (7500) (7200) (6900) (6900 7000) (6900 7000) (6900 7000) (6900 7000) (7000) (7000 6500 6200) (6500) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6700) (6900) (7200) (6700) (6900) (6600) (6900) (7200) (7500) (7000) (7200) (7500) (7000) (7200) (6900) (7200) (7800) (8100) (7400) (8200) (8400) (7500) (8100) (8200) (7400) (7900) (8100) (7200) (7900 7800) (7900 7800) (7900 7800) (7900 7800) (7800) (7400) (7800) (8100) (7400) (7200) (7000) (7400) (6900) (7000) (6700) (7000) (7400) (7900) (8200) (7500) (7200) (7500) (7900) (7200) (7000) (6900) (7200) (6700) (6900) (6500) (6900) (7200) (7700) (8100) (7400) (7000) (7400) (7700) (7000) (6800) (6700) (7700) (7500) (8200) (8000) (7400) (6300) (7400) (7200) (7900) (7700) (7100) (6000) (7000) (6900) (7500) (7400) (6700) (6600) (6900) (7200) (7500) (7400) (7200) (8100) (6200) (6700) (7000) (7400) (7200) (7000) (8200) (6100) (6400) (6700) (7000) (6900) (6700) (7600) (6700) (6600) (6700) (6900) (6200) (6600) (6900) (7200) (7000) (6900) (7900) (7700) (7500) (7400) (7200) (7000) (6900) (7200) (6600) (6700) (7000) (6200) (6300) (6500) (6800) (6300) (6500) (6800) (7400) (7700) (6800) (6700) (7000) (6500) (6700) (7000) (7500) (7900) (7700) (7500) (7400) (7500) (7700) (6700) (6900) (7000) (7000) (7000 6900) (7000 6900) (7000 6900) (7000 6900) (6900) (6900) (7000 6900) (7000 6900) (7000 6900) (6900 6700) (7000) (6500) (6200) (5800) (7000) (7200 7000) (7200 7000) (7200 7000) (7000 6900) (7200) (6900) (6300) (6000) (7200) (7400 7200) (7400 7200) (7400 7200) (7200 7000) (7300) (6900) (7000) (6700) (7000) (7300) (7600) (7700) (7000) (6900 7000 6900) (6700 7000) (6500) (7500) (7400) (7200) (7300) (7900) (7200) (7300) (6900) (7000) (6300 6500 6300) (6200 6500) (6300) (6200) (6500) (6000) (6200) (5800) (6200) (6500) (7000) (6300) (6500) (7000) (6300) (6500) (6200) (6500) (7000) (7400) (6900) (7000) (7400) (6900) (7000) (6500) (7000) (7400) (7700) (6800) (6700) (7500) (7200) (6900) (6900 7000) (6900 7000) (6900 7000) (6900 7000) (7000) (7000 6500 6200))) :lonset (quote (461 643 782 925 1071 1211 1354 1500 1639 1782 1929 2068 2211 2357 2496 2639 2786 2925 3068 3214 3354 3496 3643 3782 3925 4071 4211 4354 4500 4639 4782 4929 5068 5211 5357 5496 5639 5786 6354 6496 6643 6782 6925 7071 7211 7354 7500 7639 7782 7929 8068 8211 8357 8925 9068 9214 9354 9496 9643 9782 9925 10071 10211 10354 10500 10639 10782 10929 11496 11639 11786 12354 12496 12643 12782 12925 13071 13211 13354 13639 13782 13929 14068 14211 14357 14496 14639 14925 15068 15214 15354 15496 15643 15782 15925 16071 16821 16929 17036 17143 17250 17357 17496 17639 17786 18107 18214 18321 18429 18536 18643 18782 18925 19071 19393 19500 19607 19714 19821 19929 20068 20211 20357 20496 20639 20786 20925 21068 21214 21354 21496 21643 21782 21925 22071 22211 22354 22500 22639 22782 22929 23068 23211 23357 23496 23639 23786 23925 24068 24214 24354 24496 24643 24782 24925 25071 25211 25354 25500 25639 25782 25929 26068 26211 26357 27107 27214 27536 27643 27750 27857 27964 28071 28393 28500 28639 28782 28929 29068 29211 29357 29496 29639 29786 29925 30068 30214 30354 30496 30643 30782 30925 31071 31211 31354 31500 31639 31782 31929 32068 32211 32357 32496 32639 32786 32925 33068 33214 33354 33496 33643 33782 33925 34071 34211 34354 34500 34607 34714 34821 34929 35143 35357 36468 36643 36782 36925 37071 37211 37354 37500 37639 37782 37929 38068 38211 38357 38496 38639 38786 38925 39068 39214 39354 39496 39643 39782 39925 40071 40211 40354 40500 40639 40782 40929 41068 41211 41357 41496 41639 41786 42354 42496 42643 42782 42925 43071 43211 43354 43500 43639 43782 43929 44068 44211 44357 44925 45068 45214 45354 45496 45643 45782 45925 46071 46211 46354 46500 46639 46782 46929 47496 47639 47786 48354 48496 48643 48782 48925 49071 49211 49354 49639 49782 49929 50068 50211 50357 50496 50639 50925 51068 51214 51354 51496 51643 51782 51925 52071 52821 52929 53036 53143 53250 53357 53496 53639 53786 54107 54214 54321 54429 54536 54643 54782 54925 55071 55393 55500 55607 55714 55821 55929 56068 56211 56357 56496 56639 56786 56925 57068 57214 57354 57496 57643 57782 57925 58071 58211 58354 58500 58639 58782 58929 59068 59211 59357 59496 59639 59786 59925 60068 60214 60354 60496 60643 60782 60925 61071 61211 61354 61500 61639 61782 61929 62068 62211 62357 63107 63214 63536 63643 63750 63857 63964 64071 64393 64500 64639 64782 64929 65068 65211 65357 65496 65639 65786 65925 66068 66214 66354 66496 66643 66782 66925 67071 67211 67354 67500 67639 67782 67928 68068 68211 68357 68496 68639 68786 68925 69068 69214 69354 69496 69643 69782 69925 70071 70211 70354 70500 70607 70714 70821 70928 71143 71357 72428 72643 72782 72925 73071 73211 73354 73500 73639 73782 73928 74068 74211 74357 74496 74639 74786 74925 75068 75214 75354 75496 75643 75782 75925 76071 76211 76353 76500 76639 76782 76928 77068 77211 77357 77496 77639 77786 77893 78000 78107 78214 78353 78496 78643 78782 78925 79071 79211 79353 79500 79639 79782 79928 80068 80211 80357 80925 81068 81214 81353 81496 81643 81782 81925 82071 82211 82353 82500 82639 82782 82928 83496 83639 83786 83925 84068 84214 84536 84643 84964 85071 85393 85500 85821 85928 86250 86357 86678 86786 87107 87214 87536 87643 87964 88071 88211 88353 88500 88639 88782 88928 89357 89496 89639 89786 89925 90068 90214 90643 90782 90925 91071 91211 91353 91500 91821 91928 92068 92211 92357 92496 92639 92786 92925 93068 93214 93353 93496 93643 93782 93925 94071 94211 94353 94500 95250 95357 95678 95786 95925 96068 96214 96353 96496 96643 96964 97071 97211 97353 97500 97639 97782 97928 98496 98639 98786 98925 99068 99214 99353 99496 99643 99750 99857 99964 100071 100178 100393 100500 100607 100714 100821 100928 101068 101211 101357 101678 101786 101893 102000 102107 102214 102353 102496 102643 102964 103071 103178 103286 103393 103500 103639 103782 103928 104068 104211 104357 104496 104639 104786 104889 105068 105214 105782 105925 106071 106211 106353 106500 106639 106782 106928 107032 107211 107357 107496 107639 107786 107925 108068 108214 108353 108496 108643 108782 108925 109071 109211 109353 109500 109639 109782 109928 110068 110211 110357 110496 110639 110786 110925 111068 111214 111353 111496 111643 111750 111857 111964 112071 112286 112500 113607 113786 113925 114068 114214 114353 114496 114643 114782 114925 115071 115211 115353 115500 115639 115782 115928 116068 116211 116357 116496 116639 116786 116925 117068 117214 117353 117496 117643 117782 117925 118071 118211 118353 118500 118639 118782 118928 119036 119143 119250 119357 119496 119639 119786 119925 120068 120214 120353 120496 120643 120782 120925 121071 121211 121353 121500 122068 122211 122357 122496 122639 122786 122925 123068 123214 123353 123496 123643 123782 123925 124071 124639 124782 124928 125068 125211 125357 125678 125786 126107 126214 126536 126643 126964 127071 127393 127500 127821 127928 128250 128357 128678 128786 129107 129214 129353 129496 129643 129782 129925 130071 130500 130639 130782 130928 131068 131211 131357 131786 131925 132068 132214 132353 132496 132643 132964 133071 133211 133353 133500 133639 133782 133928 134068 134211 134357 134496 134639 134786 134925 135068 135214 135353 135496 135643 136393 136500 136821 136928 137068 137211 137357 137496 137639 137786 138107 138214 138353 138496 138643 138782 138925 139071 139639 139782 139928 140068 140211 140357 140496 140639 140786 140893 141000 141107 141214 141321 141536 141643 141750 141857 141964 142071 142211 142353 142500 142821 142928 143036 143143 143250 143357 143496 143639 143786 144107 144214 144321 144428 144536 144643 144782 144925 145071 145211 145353 145500 145639 145782 145928 146032 146211 146357 146925 147068 147214 147353 147496 147643 147782 147925 148071 148175 148353 148500 148639 148782 148928 149068 149211 149357 149496 149639 149786 149925 150068 150214 150353 150496 150643 150782 150925 151071 151211 151353 151500 151639 151782 151928 152068 152211 152357 152500 152647 152798 152908 153018 153129 153239 153520 153811 155756)) :ldur (quote ((128) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (553) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (553) (129) (125) (553) (128) (125) (125) (129) (125) (125) (128) (271) (129) (125) (125) (128) (125) (125) (129) (272) (129) (125) (125) (128) (125) (125) (129) (125) (590) (93) (25 75) (25 22 25 21) (25 22 25 21) (46 46) (125) (129) (125) (278) (93) (46 47) (46 47) (47 46) (47 46) (125) (129) (125) (279) (93) (46 46) (46 47) (46 47) (46 47) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (707) (93) (279) (93) (47 46) (46 46) (46 47) (46 47) (279) (93) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (93) (46 47) (46 47) (46 47) (47 46) (186) (804 804 804) (143) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (553) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (553) (129) (125) (553) (128) (125) (125) (129) (125) (125) (128) (271) (129) (125) (125) (128) (125) (125) (129) (272) (129) (125) (125) (128) (125) (125) (129) (125) (590) (93) (25 75) (25 22 25 21) (25 22 25 21) (46 46) (125) (129) (125) (278) (93) (46 47) (46 47) (47 46) (47 46) (125) (129) (125) (279) (93) (46 46) (46 47) (46 47) (46 47) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (707) (93) (279) (93) (47 46) (46 46) (46 47) (46 47) (279) (93) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (124) (125) (129) (125) (126) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (124) (93) (46 47) (46 47) (46 47) (46 47) (185) (804 804 804) (186) (125) (129) (125) (125) (128) (124) (125) (129) (125) (126) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (47 46) (47 46) (47 46) (46 46) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (554) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (554) (129) (125) (125) (128) (125) (279) (92) (278) (93) (279) (93) (278) (93) (279) (93) (279) (93) (278) (93) (279) (92) (278) (93) (125) (128) (125) (125) (129) (125) (186) (125) (129) (125) (125) (128) (125) (186) (125) (129) (125) (125) (128) (125) (278) (93) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (589) (93) (279) (93) (125) (128) (125) (125) (129) (125) (278) (93) (125) (128) (125) (125) (129) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (93) (47 46) (46 46) (46 47) (46 47) (93) (93) (47 46) (46 46) (46 47) (46 47) (125) (128) (125) (279) (93) (47 46) (47 46) (47 46) (46 46) (125) (129) (125) (278) (93) (46 47) (46 47) (47 46) (47 46) (125) (129) (125) (125) (128) (125) (125) (129) (125) (33 32 28) (125 32) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (32 32 29) (125 32) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (93) (47 46) (46 46) (46 47) (46 47) (185) (803 803 803) (146) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (46 47) (47 46) (47 46) (47 46) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (553) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (554) (129) (125) (125) (128) (125) (279) (93) (278) (93) (279) (92) (278) (93) (279) (93) (278) (93) (279) (93) (279) (93) (278) (93) (125) (129) (125) (125) (129) (125) (186) (125) (129) (125) (125) (128) (125) (186) (125) (128) (125) (125) (129) (125) (278) (93) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (589) (93) (278) (93) (125) (128) (125) (125) (129) (125) (278) (93) (125) (129) (125) (125) (129) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (92) (47 46) (47 46) (46 46) (46 47) (93) (92) (47 46) (47 46) (46 46) (46 47) (125) (128) (125) (278) (93) (46 47) (47 46) (47 46) (47 46) (125) (129) (125) (278) (93) (46 47) (46 47) (46 47) (47 46) (125) (129) (125) (125) (128) (125) (125) (129) (125) (32 32 29) (125 32) (125) (554) (128) (125) (125) (129) (125) (125) (129) (125) (32 33 29) (125 32) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (128) (132) (129) (95) (48 48) (47 48) (48 47) (63 53) (253) (1945 1945 1945))) :lvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (78 0) (78 53 25 0) (78 53 25 0) (54 0) (0) (0) (0) (0) (0) (54 0) (54 0) (53 0) (53 0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (53 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (78 0) (78 53 25 0) (78 53 25 0) (54 0) (0) (0) (0) (0) (0) (54 0) (54 0) (53 0) (53 0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (54 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (53 0) (53 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (53 0) (53 0) (53 0) (54 0) (0) (0) (0) (0) (0) (54 0) (54 0) (53 0) (53 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (67 32 0) (36 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (68 33 0) (36 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (54 0) (53 0) (53 0) (53 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (53 0) (54 0) (54 0) (0) (0) (53 0) (53 0) (54 0) (54 0) (0) (0) (0) (0) (0) (54 0) (53 0) (53 0) (53 0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (53 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (68 33 0) (36 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (68 32 0) (36 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (55 0) (56 0) (55 0) (63 0) (0) (0 0 0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1 1 1) (1 1 1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1 1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1 1 1) (1 1 1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1 1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1 1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0 0 0) (0 0 0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0 0 0) (0 0 0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((4200 4300) (4300) (7900 8100) (7900 7800) (7900 8100) (7900 8100) (7900 8100) (7900 8100) (7900 8100) (7900 7800) (8100) (5200 5400) (5400) (5700) (5500) (5400) (5200) (7600) (7400) (7300) (7400) (7600) (6600) (4800 5000) (4800 5000) (5000 4800) (5000 4800) (5000 4800) (4800 4800) (4800 5000) (4800 4700) (4700) (4300) (4700) (5000) (5500) (4700) (4800) (5200) (5500) (6000) (5200) (5500) (5400) (5700) (5000) (5400) (5700) (6200) (5900) (5500) (5900) (6200) (6700) (8100 8300) (8300) (7400 7600) (7600) (6700 6900) (6900) (7900 8100) (8100) (7300 7400) (7400) (6600 6700) (6700) (7800 7900) (7900) (6900 7100) (7100) (6200 6400) (6400) (5400 5500) (5500) (4700 4900) (4900) (4200 4300) (4300) (6400 6200) (6900 6600) (6400 6600) (6200) (6400 6200) (6900 6600) (6400 6600) (6200) (6400 6200) (6900 6600) (6400 6600) (7100 6200) (5300) (5200) (6200 6400) (6400) (6700 6900) (6900) (6100 6200) (6200) (6600 6700) (6700) (5900 6100) (6100) (6400 6600) (6600) (6200) (6100) (6200) (6400 6600) (6200) (6700 6900) (6600) (7400) (7800) (8100) (8600) (8100) (7800) (8100) (7400) (7800) (8100) (7800) (7900) (8100) (7400) (7900) (8300) (7900) (7400) (7900) (7100) (7400) (7900) (7100) (7200) (7400) (6700) (7200) (7600) (7200) (6900) (7200) (6600) (6900) (7200) (6600) (6700) (6900) (6300) (6600) (7100) (6600) (6300) (6600) (5900) (6300) (6600) (6300) (6400) (6600) (5900) (6400) (6700) (6400) (5900) (6400) (5500) (5900) (6400) (6300) (6400) (6700) (6000) (6500) (6900) (6500) (6000) (6500) (5700) (6000) (6500) (6400) (6500) (6900) (6300) (6600) (6900) (6600) (6300) (6600) (5900) (6300) (5400) (5700) (5500) (5400) (5500) (5900) (6400) (5900) (5500) (5900) (5200) (5400) (5500) (5200) (5500) (5900) (6400) (5000 5200) (5200) (5900 6000) (6000) (6700 6900) (6900) (4800 5000) (5000) (5700 5900) (5900) (6600 6700) (6700) (4700 4800) (4800) (5500 5700) (5700) (6400 6600) (6600) (7200 7400) (7400) (7800 7900) (7900) (8100 8300) (8300) (6200) (6500) (6500 6400) (7200 6700) (6500 6700) (6400) (6700 6600) (7200 6900) (6700 6900) (6600) (6900 6700) (7300 7000) (6900 7000) (7400 6700) (7100 7200) (7200) (6900 7100) (7100) (6900 7000) (7000) (6700 6900) (6900) (7200 7400) (7400) (6600 6700) (6900 6700) (7200 7100) (7200 7400) (6900 7100) (6700) (7100) (6200) (6700) (5500))) :lonset (quote (42 200 674 831 989 1147 1305 1463 1621 1779 1937 2568 2726 3358 3516 3674 3831 4463 4779 5095 5410 5568 5726 6358 6516 6674 6831 6989 7147 7305 7463 7621 7937 8253 8568 8884 9200 9516 9831 10147 10463 10779 11095 11410 11726 12042 12358 12674 12989 13305 13621 13937 14253 14568 15358 15516 15989 16147 16621 16779 17252 17410 17884 18042 18516 18674 19147 19305 19779 19937 20410 20568 21042 21200 21674 21831 22305 22463 22858 23016 23174 23331 23489 23647 23805 23963 24121 24279 24437 24595 25305 25937 26726 26884 27042 27200 27358 27516 27674 27831 27989 28147 28305 28463 28621 28779 28937 29095 29252 29410 29568 29726 30358 30516 30674 30831 30989 31147 31305 31463 31621 31779 31937 32095 32252 32410 32568 32726 32884 33042 33200 33358 33516 33674 33831 33989 34147 34305 34463 34621 34779 34937 35095 35252 35410 35568 35726 35884 36042 36200 36358 36516 36674 36831 36989 37147 37305 37463 37621 37779 37937 38095 38252 38410 38568 38726 38884 39042 39200 39358 39516 39674 39831 39989 40147 40305 40463 40621 40779 40937 41095 41252 41410 41568 41726 41884 42042 42200 42358 42516 42674 42831 42989 43147 43305 43463 43621 43779 43937 44095 44252 44410 44568 44726 44884 45042 45200 45358 45516 45989 46147 46621 46779 47252 47410 47884 48042 48516 48674 49147 49305 49779 49937 50410 50568 51042 51200 51674 51831 52305 52463 52937 53095 53726 54358 55068 55226 55384 55542 55700 55858 56016 56173 56331 56489 56647 56805 57042 57200 57358 57516 57673 57831 57989 58147 58305 58463 58621 58779 58937 59095 59252 59410 59568 59726 59884 60042 60358)) :ldur (quote ((79 79) (158) (73 73) (74 74) (74 74) (74 74) (74 74) (74 74) (74 74) (73 74) (316) (74 74) (474) (152) (152) (152) (153) (311) (310) (310) (158) (158) (153) (73 79) (73 73) (73 73) (74 74) (74 74) (74 74) (74 74) (74 74) (310) (310) (310) (311) (311) (310) (310) (311) (311) (311) (310) (310) (311) (311) (311) (310) (310) (311) (311) (316) (316) (310) (316) (73 73) (73) (74 74) (74) (74 74) (152) (74 74) (79) (74 79) (79) (79 79) (78) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79) (79 78) (79) (79 79) (79) (73 73) (73 73) (74 73) (74) (74 74) (74 74) (74 74) (74) (74 74) (73 73) (73 73) (157 73) (153) (158) (79 74) (74) (74 74) (74) (73 73) (73) (74 73) (74) (74 74) (79) (74 74) (79) (153) (152) (158) (73 73) (158) (74 74) (153) (316) (152) (152) (152) (153) (153) (153) (153) (158) (158) (158) (158) (157) (153) (153) (153) (153) (153) (153) (158) (152) (158) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (153) (153) (158) (153) (153) (153) (152) (152) (152) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (158) (153) (153) (153) (158) (153) (152) (152) (152) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (153) (153) (153) (153) (153) (153) (158) (152) (152) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (153) (153) (153) (158) (153) (153) (152) (152) (310) (74 74) (79) (74 74) (79) (74 74) (79) (74 74) (79) (73 73) (78) (74 74) (79) (73 73) (79) (74 74) (153) (74 74) (79) (74 73) (74) (74 74) (153) (73 73) (157) (158) (158) (74 79) (79 79) (79 79) (79) (73 79) (79 73) (78 79) (79) (79 79) (79 79) (79 79) (158 79) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79 79) (79 79) (79 78) (79 79) (158) (158) (158) (158) (316))) :lvel (quote ((108 113) (98) (80 97) (81 85) (80 80) (90 84) (90 93) (77 82) (92 86) (91 96) (121) (119 119) (119) (104) (95) (104) (121) (127) (119) (119) (102) (104) (121) (59 119) (86 86) (80 82) (86 78) (84 88) (82 84) (88 81) (96 96) (123) (101) (123) (119) (113) (107) (115) (113) (98) (109) (102) (100) (110) (104) (109) (119) (107) (111) (102) (102) (102) (111) (121) (94 119) (115) (80 123) (98) (106 106) (101) (100 117) (111) (93 127) (101) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (104 97) (97 92) (98 110) (102) (101 100) (97 97) (100 102) (100) (100 98) (96 97) (95 102) (123 93) (126) (121) (86 109) (104) (100 106) (104) (104 104) (86) (106 107) (106) (102 100) (97) (97 123) (110) (89) (90) (95) (100 112) (98) (104 86) (97) (127) (95) (84) (68) (83) (96) (77) (85) (84) (58) (88) (83) (75) (111) (111) (80) (80) (91) (81) (76) (86) (95) (97) (102) (83) (89) (78) (78) (75) (85) (82) (90) (80) (88) (90) (72) (83) (95) (78) (81) (77) (80) (76) (96) (85) (77) (85) (88) (80) (84) (83) (61) (83) (83) (83) (82) (77) (78) (89) (92) (78) (91) (82) (70) (83) (83) (83) (84) (76) (85) (83) (80) (68) (63) (75) (45) (53) (89) (89) (84) (74) (75) (86) (85) (89) (90) (66) (77) (82) (93) (83) (83) (83) (97) (97) (85) (77) (98) (101 109) (115) (111 108) (108) (96 102) (119) (95 92) (104) (65 92) (111) (68 104) (104) (98 113) (115) (86 96) (117) (80 117) (121) (101 107) (115) (102 111) (113) (91 108) (119) (102) (126) (85 84) (107 95) (107 107) (107) (66 88) (107 92) (88 88) (88) (88 88) (107 88) (88 88) (88 88) (88 88) (88) (88 88) (88) (88 88) (88) (88 88) (88) (88 88) (88) (88 88) (88 88) (88 88) (88 88) (88 88) (88) (88) (88) (88) (88))) :loffset (quote ((79 0) (0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (0) (79 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (78 0) (0) (79 0) (0) (79 0) (79 0) (78 0) (0) (79 0) (79 0) (79 0) (0) (79 0) (79 0) (79 0) (79 0) (0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (78 0) (0) (79 0) (0) (79 0) (0) (0) (0) (0) (79 0) (0) (79 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (78 0) (0) (79 0) (0) (79 0) (0) (0) (0) (79 0) (79 0) (79 0) (0) (79 0) (79 0) (79 0) (0) (79 0) (79 0) (79 0) (79 0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (79 0) (79 0) (78 0) (79 0) (0) (0) (0) (0) (0))) :lchan (quote ((1 1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1) (1) (1) (1 1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0 0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8100) (7900) (7800) (7600) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6000) (5900) (5700) (5900) (5700) (6000) (5900) (5700) (5500) (5700) (6900) (6700) (6600) (6400) (6200) (6100) (6400) (6900) (7100) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6100) (6400) (6200) (6100) (6200) (6000) (5900) (5700) (5500) (5400) (5500) (8100) (7900) (7800) (7600) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6000) (5900) (5700) (5900) (5700) (6000) (5900) (5700) (5500) (5700) (6900) (6700) (6600) (6400) (6200) (6100) (6400) (6900) (7100) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6100) (6400) (6200) (6100) (6200) (8300) (8100) (7900) (7800) (7600) (7500) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6300) (6600) (6400) (6300) (6400) (6200) (6000) (5900) (5700) (5600) (5700) (6200) (5900) (6000) (5700) (6000) (6400) (6600) (6300) (6400) (6000) (6400) (6700) (6900) (6700) (6600) (6900) (6700) (6600) (6700) (6600) (6400) (6200) (6000) (5900) (5700) (8300) (8100) (7900) (7800) (7600) (7500) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6300) (6600) (6400) (6300) (6400) (6200) (6000) (5900) (5700) (5600) (5700) (6200) (5900) (6000) (5700) (6000) (6400) (6600) (6300) (6400) (6000) (6400) (6700) (6900) (6700) (6600) (6900) (6700) (6600) (6700))) :lonset (quote (792 1792 1917 2042 2167 2292 3292 3417 3542 3667 3792 4792 4917 5042 5167 5292 6167 6292 6417 6542 6667 6792 7042 7792 7917 8042 8167 8292 8417 8542 8667 8792 9292 9417 9542 9667 9792 10667 10792 10917 11042 11167 11292 11417 11542 11667 11792 11917 12042 12792 13792 13917 14042 14167 14292 15292 15417 15542 15667 15792 16792 16917 17042 17167 17292 18167 18292 18417 18542 18667 18792 19042 19792 19917 20042 20167 20292 20417 20542 20667 20792 21292 21417 21542 21667 21792 22667 22792 22917 23042 23167 23292 24792 25792 25917 26042 26167 26292 26542 27292 27417 27542 27667 27792 28667 28792 28917 29042 29167 29292 29417 29542 29667 29792 29917 30042 30792 31667 31792 31917 32042 32167 32292 33167 33292 33417 33542 33667 33792 34667 34792 34917 35042 35167 35292 35417 35542 35667 35792 35917 36042 36792 37792 37917 38042 38167 38292 38542 39292 39417 39542 39667 39792 40667 40792 40917 41042 41167 41292 41417 41542 41667 41792 41917 42042 42792 43667 43792 43917 44042 44167 44292 45167 45292 45417 45542 45667 45792 46667 46792 46917 47042 47167 47292 48042)) :ldur (quote ((996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (246) (746) (121) (125) (125) (121) (121) (121) (121) (121) (496) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (246) (996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (246) (746) (121) (125) (125) (121) (121) (121) (121) (121) (496) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (750) (996) (121) (121) (121) (121) (246) (746) (121) (121) (121) (121) (871) (125) (125) (125) (125) (121) (121) (121) (121) (121) (121) (121) (496) (750) (121) (121) (125) (125) (125) (871) (121) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (246) (996) (121) (121) (121) (121) (246) (746) (121) (121) (121) (121) (871) (125) (125) (125) (125) (121) (121) (121) (121) (121) (121) (121) (496) (750) (121) (121) (125) (125) (125) (871) (121) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (750))) :lvel (quote ((111) (107) (112) (102) (97) (109) (119) (104) (100) (110) (109) (107) (104) (101) (107) (121) (102) (102) (107) (101) (97) (115) (124) (106) (100) (100) (111) (112) (111) (89) (111) (113) (97) (102) (104) (110) (111) (100) (104) (101) (98) (106) (109) (101) (85) (98) (90) (99) (97) (111) (107) (112) (102) (97) (109) (119) (104) (100) (110) (109) (107) (104) (101) (107) (121) (102) (102) (107) (101) (97) (115) (124) (106) (100) (100) (111) (112) (111) (89) (111) (113) (97) (102) (104) (110) (111) (100) (104) (101) (98) (106) (109) (115) (111) (93) (110) (107) (119) (104) (106) (100) (93) (100) (123) (107) (100) (106) (102) (102) (113) (104) (104) (96) (102) (97) (104) (89) (71) (93) (54) (104) (111) (108) (108) (109) (95) (109) (104) (117) (98) (94) (96) (95) (97) (101) (101) (96) (91) (100) (95) (101) (115) (111) (93) (110) (107) (119) (104) (106) (100) (93) (100) (123) (107) (100) (106) (102) (102) (113) (104) (104) (96) (102) (97) (104) (89) (71) (93) (54) (104) (111) (108) (108) (109) (95) (109) (104) (117) (98) (94) (96) (95) (97) (101))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7100) (6900) (7100) (6200) (6700) (7100) (7100 6900) (6900) (6700) (6900) (7400) (7800 7900) (7900) (7800) (7900) (6900) (7600) (7900) (7900 7800) (7800) (7600) (7800) (7400) (7800 7600) (8100 7900) (8300) (7900) (7400) (7600) (7900 7800) (8300 8100) (8400) (8100) (7600) (7800) (7400) (7900) (6900) (7100) (7200) (7200) (7100) (6900) (6700) (6600) (6700) (7400) (7800 7900) (7900) (8100) (7900) (7800) (7600) (7600 7800) (7800) (7900) (7800) (7600) (7300) (7400) (7400 7300) (7300) (7400) (7600) (6900) (7300 7100) (7600 7400) (7800) (7400) (6900) (7100) (7400 7300) (7800 7600) (7900) (7600) (7100) (7300) (6900) (8100) (7400) (7600) (7300) (7300) (7400) (7800) (7600) (7800) (6900) (7400) (7800) (7900) (7800) (7900) (8300) (7600) (7900 7800) (8300 8100) (8400) (8300) (8100) (7900) (7800) (7600) (7600 7500) (7500) (7300) (7500) (7100) (8300) (7800) (7900) (7500) (7600) (7200) (7600) (8000) (8100) (8100 8300) (7800 7900) (7900) (8100) (8300) (7600) (7800) (7500) (7600) (7100) (6700) (6400) (7100) (7100) (6800) (6900) (7400) (7600) (7400) (7200) (7100) (7200) (7600) (7400) (7600) (7900) (7800) (7900) (8100) (7900) (7800) (7600) (8100) (8300) (7900) (7900 7800) (7800) (7600) (7800) (7400) (7800 7600) (8100 7900) (8300) (7900) (7400) (7600) (7800) (8100 7900) (8400 8300) (8100) (7600) (7800) (7400) (8600) (7900) (8100) (7800) (7900))) :lonset (quote (42 611 792 1167 1711 1904 2180 2298 2842 3023 3379 4480 4604 5117 5292 5673 6230 6417 6661 6792 7329 7492 7879 9773 9954 10148 10704 10904 11273 12042 12230 12404 12979 13129 13523 14104 14273 14667 15211 15398 15792 16179 17448 17648 17830 18017 18761 19117 19267 20636 20817 20986 21154 21330 21480 23111 23292 23630 24198 24380 24611 24761 25317 25504 25886 27792 27979 28167 28729 28917 29292 30029 30217 30398 30948 31154 31517 32073 32261 32642 33211 33417 33780 34154 36017 36580 36804 37136 37730 37880 38261 38817 39017 39380 40542 41292 41480 41667 41854 42042 42230 42417 42604 42817 42992 43342 43530 43917 45604 45792 46167 46711 46898 47292 47854 48042 48461 49167 49354 49504 50104 50292 50667 51204 51404 51779 52336 52542 52923 53667 54017 54604 54792 55167 55542 55729 55917 56104 56292 56823 57017 57386 57967 58167 58517 58886 59067 59261 59479 59636 60192 60379 60623 60761 61304 61504 61886 63792 63979 64167 64711 64898 65261 66030 66136 66317 66980 67154 67542 68092 68292 68648 69230 69404 69792 72042)) :ldur (quote ((588) (162) (375) (637) (206) (263) (82 50) (575) (188) (344) (1107) (62 50) (526) (150) (350) (544) (187) (237) (87 62) (569) (157) (387) (1863) (113 138) (126 119) (594) (194) (350) (750) (94 94) (94 93) (563) (188) (413) (588) (169) (338) (631) (193) (288) (394) (1307) (200) (213) (156) (737) (312) (100 75) (1400) (206) (206) (212) (176) (100 87) (1631) (206) (325) (600) (182) (237) (112 69) (569) (175) (375) (1850) (93 94) (94 94) (562) (213) (387) (681) (144 69) (100 94) (556) (194) (400) (569) (200) (381) (575) (225) (319) (406) (1538) (587) (187) (332) (575) (200) (374) (593) (213) (363) (1187) (731) (94 94) (94 93) (187) (188) (188) (187) (187) (188) (113 87) (362) (169) (368) (1500) (188) (375) (544) (187) (369) (562) (194) (362) (681) (93 94) (94 94) (588) (188) (375) (575) (194) (394) (582) (218) (387) (763) (287) (525) (213) (369) (375) (225) (207) (169) (232) (462) (181) (337) (543) (187) (350) (369) (206) (225) (181) (213) (568) (206) (238) (93 63) (562) (213) (388) (1868) (93 94) (94 94) (562) (181) (363) (800) (87) (100 131) (587 100) (168) (369) (525) (212) (344) (600) (200) (388) (2250))) :lvel (quote ((101) (89) (104) (91) (95) (102) (97 84) (84) (104) (88) (100) (106 100) (91) (96) (93) (80) (92) (100) (101 88) (90) (90) (101) (100) (93 97) (102 88) (121) (97) (92) (113) (85 101) (97 95) (115) (101) (97) (99) (88) (106) (101) (92) (102) (109) (100) (88) (77) (99) (101) (109) (112 109) (104) (97) (86) (89) (96) (92 88) (97) (89) (99) (109) (93) (92) (89 104) (102) (98) (98) (95) (85 82) (86 84) (119) (102) (92) (117) (78 101) (79 96) (106) (100) (90) (92) (81) (104) (97) (91) (92) (92) (75) (86) (92) (73) (81) (82) (94) (93) (94) (93) (104) (97) (90 104) (91 96) (96) (97) (98) (92) (93) (85) (97 99) (89) (80) (101) (91) (93) (93) (93) (84) (97) (104) (91) (112) (107) (74 93) (75 65) (90) (84) (86) (86) (96) (102) (90) (76) (50) (88) (91) (93) (84) (88) (88) (91) (82) (84) (67) (86) (91) (85) (86) (100) (93) (98) (78) (85) (97) (66) (85) (92) (81) (85 75) (80) (67) (86) (84) (79 91) (89 73) (113) (91) (93) (98) (93) (89 69) (97 91) (86) (88) (110) (91) (93) (90) (92) (94) (88))) :loffset (quote ((0) (0) (0) (0) (0) (0) (74 0) (0) (0) (0) (0) (62 0) (0) (0) (0) (0) (0) (0) (81 0) (0) (0) (0) (0) (81 0) (100 0) (0) (0) (0) (0) (94 0) (93 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (75 0) (0) (0) (0) (0) (0) (74 0) (0) (0) (0) (0) (0) (0) (75 0) (0) (0) (0) (0) (94 0) (94 0) (0) (0) (0) (0) (94 0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (94 0) (93 0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (94 0) (94 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (63 0) (0) (0) (0) (0) (94 0) (94 0) (0) (0) (0) (0) (0) (94 0) (100 0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6700) (7900) (8100) (7900) (7800) (7900) (8100) (7400) (7200) (7100) (6900) (7100) (7200) (7100) (6900) (7100) (6700) (7600) (7400) (7200) (7800) (8100) (7100) (7900) (7900) (7800) (8300) (8100) (7400) (7600) (7400) (7200) (7100) (7600) (7100) (7400) (7300) (7400) (7600) (7300) (6900) (7400) (6700) (6600) (6700) (6400) (6900) (6700) (6600) (6400) (6200) (6400) (6600) (6700) (6900) (7100) (7400) (7300) (7400) (7300) (7400) (6900) (6700) (6600) (6700) (6400) (6600) (6700) (7900) (8100) (7900) (7800) (7900) (8100) (7400) (7200) (7100) (6900) (7100) (7200) (7100) (6900) (7100) (6700) (7600) (7400) (7200) (7800) (8100) (7900) (7900) (7800) (8300) (8100) (7400) (7600) (7400) (7200) (7100) (7600) (7100) (7400) (7300) (7400) (7600) (7300) (6900) (7400) (6700) (6600) (6700) (6400) (6900) (6700) (6600) (6400) (6200) (6400) (6600) (6700) (6900) (7100) (7400) (7300) (7400) (7300) (7400) (6900) (6700) (6600) (6700) (6400) (6600))) :lonset (quote (4031 5031 6386 6548 6720 6881 7042 8364 8542 8709 8859 9042 9375 9542 9714 9875 10042 10375 10709 11042 11375 11709 12042 12709 13042 13709 14720 15025 15709 16209 16381 16531 16698 17025 17386 17709 18042 18392 18709 19375 19709 20709 21042 22375 22709 23042 23375 23542 23709 23875 24042 24375 24542 24709 24875 25042 25375 25709 26042 27375 28042 29209 29375 29542 29709 29875 30042 36031 37031 38386 38548 38720 38881 39042 40364 40542 40709 40859 41042 41375 41542 41714 41875 42042 42375 42709 43042 43375 43709 44709 45042 45709 46720 47025 47709 48209 48381 48531 48698 49025 49386 49709 50042 50392 50709 51375 51709 52709 53042 54375 54709 55042 55375 55542 55709 55875 56042 56375 56542 56709 56875 57042 57375 57709 58042 59375 60042 61209 61375 61542 61709 61875 62042 64042)) :ldur (quote ((1022) (1394) (195) (183) (189) (183) (333) (189) (183) (144) (194) (350) (189) (200) (178) (178) (333) (334) (333) (333) (334) (333) (667) (333) (639) (333) (328) (695) (511) (177) (167) (167) (355) (356) (356) (355) (356) (317) (689) (334) (333) (333) (1000) (334) (333) (394) (167) (167) (166) (167) (333) (167) (167) (166) (167) (333) (334) (333) (1000) (334) (1000) (166) (167) (167) (166) (167) (2000) (1022) (1394) (195) (183) (189) (183) (333) (189) (183) (144) (194) (350) (189) (200) (178) (178) (333) (334) (333) (333) (334) (333) (333) (639) (333) (328) (695) (511) (177) (167) (167) (355) (356) (356) (355) (356) (317) (689) (334) (333) (333) (1333) (334) (333) (394) (167) (167) (166) (167) (333) (167) (167) (166) (167) (333) (334) (333) (1333) (334) (1000) (166) (167) (167) (166) (167) (2000))) :lvel (quote ((101) (102) (100) (86) (90) (88) (97) (96) (90) (75) (58) (81) (86) (97) (78) (73) (90) (90) (90) (90) (88) (88) (102) (91) (101) (85) (101) (100) (100) (88) (77) (77) (86) (92) (84) (91) (90) (93) (95) (92) (81) (96) (96) (88) (88) (85) (76) (84) (63) (61) (61) (61) (61) (61) (61) (61) (61) (61) (95) (67) (84) (84) (84) (84) (84) (84) (84) (101) (102) (100) (86) (90) (88) (97) (96) (90) (75) (58) (81) (86) (97) (78) (73) (90) (90) (90) (90) (88) (102) (91) (101) (85) (101) (100) (100) (88) (77) (77) (86) (92) (84) (91) (90) (93) (95) (92) (81) (96) (96) (88) (88) (85) (76) (84) (63) (61) (61) (61) (61) (61) (61) (61) (61) (61) (95) (67) (84) (84) (84) (84) (84) (84) (84))) :loffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000) (6200) (6400) (6500) (6200) (6400) (6000) (6700) (7200) (6900 7100) (7100) (7200) (7400) (6700) (6900) (7100) (7200) (6900) (7100) (6700) (7400) (7900) (7600 7700) (7700) (7900) (7600) (8100) (7900) (7700) (7600) (7900) (7700) (8100) (7900) (7700) (7600) (7400) (7200) (7600) (7400) (7700) (7600) (7400) (7200) (7100) (6900) (7200) (7100) (7400) (7200) (7100) (6900) (6700) (6600) (6900) (6700) (7100) (6900) (6200) (7100 7200) (7200) (7400) (7100) (6900) (6700) (6600) (6400) (6700) (6600) (6900) (6700) (7100) (6900) (7200) (7100) (7400) (7200) (7600) (7400) (7200 7100) (7400) (7900) (7200 7100) (7100) (6900) (6700) (6700) (6700) (6900) (7100) (7200) (6900) (7100) (6700) (6600) (6900) (7100) (7200) (7400) (7100) (7200) (6900) (7100) (7400) (7200) (7100) (6900) (7200) (7100) (7400) (7200) (7600) (7400) (7200) (7100) (7400) (7300) (7600) (7400) (7300) (7400) (7600) (7700) (6900) (7100) (7300) (7400) (6600) (6800) (6900) (7100) (7200) (7400) (6400) (6600) (6800) (6900) (6600) (6800) (6400) (7600) (7400) (7200) (7600) (7400) (7200) (7100) (7400) (7200) (8100) (8000) (8300) (8100) (7600) (7700) (7400) (6800) (7700) (7600) (7400) (7400 7200) (7200) (7100) (6900) (6900) (8100) (7900) (7700) (7600) (7900) (7700) (8100) (7900) (7600) (7700) (7900) (8100) (7700) (7900) (7600) (7700) (7900) (7700) (7600) (7400) (7700) (7600) (7900) (7700) (7400) (7600) (7700) (7900) (7600) (7700) (7400) (7600) (7200) (7400) (7600) (7700) (7400) (7600) (7200) (7400) (7600) (7700) (7900) (8100) (7700) (7900) (7600) (7700) (7900) (8100) (8300) (8400) (8100) (8300) (7900) (8400) (7900) (7700 7600) (7600) (7400) (7200) (7200) (7000) (6900) (6700) (6500) (6900) (6700) (7000) (6900) (7100) (7200) (6400) (6200) (7200) (6500) (7100) (6400 7200 6700))) :lonset (quote (174 349 523 698 872 1047 1221 1395 1744 2093 2267 2442 2791 2965 3140 3314 3488 3663 3837 4012 4186 4535 4884 5058 5233 5581 5756 5930 6105 6279 6453 6628 6802 6977 7151 7326 7500 7674 7849 8023 8198 8372 8547 8721 8895 9070 9244 9419 9593 9767 9942 10116 10291 10465 10640 10814 10988 11163 11512 11860 12035 12384 12558 12733 12907 13081 13256 13430 13605 13779 13953 14128 14302 14477 14651 14826 15000 15174 15349 15523 15698 15872 16047 16221 16395 16570 16744 18314 18488 18663 18837 19012 19186 19360 19535 21105 21279 21453 21628 21802 21977 22151 22326 23895 24070 24244 24419 24593 24767 24942 25116 26686 26860 27035 27209 27384 27558 27733 27907 28256 28605 28953 29302 29651 30000 30349 30698 31046 31395 31744 32093 32442 32791 33663 33837 34012 34186 34360 34535 34709 34884 35058 35233 35407 35581 35756 35930 36105 36279 36453 36628 36802 36977 37151 37326 37500 37674 37849 38023 38198 38372 38546 38721 38895 39070 39244 39419 39593 39767 39942 40116 40291 40465 42035 42209 42384 42558 42733 42907 43081 43256 44826 45000 45174 45349 45523 45698 45872 46046 47616 47791 47965 48140 48314 48488 48663 48837 50407 50581 50756 50930 51105 51279 51453 51628 51802 51977 52151 52326 52500 52674 52849 53023 53198 53372 53546 53721 53895 54070 54244 54419 54767 55116 55291 55465 55640 55814 55988 56163 56337 56512 56686 56860 57035 57209 57384 57558 57733 57907 58081 58256 58430 58605 61395)) :ldur (quote ((175) (174) (175) (174) (175) (174) (174) (349) (349) (87 87) (175) (349) (174) (175) (174) (174) (175) (174) (175) (174) (349) (349) (87 87) (175) (348) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (349) (348) (87 88) (349) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (88 87) (174) (175) (87 87) (174) (175) (174) (349) (174) (175) (174) (175) (174) (174) (175) (349) (174) (174) (175) (174) (175) (174) (175) (348) (175) (174) (175) (174) (174) (175) (174) (349) (174) (175) (174) (175) (174) (175) (174) (349) (349) (348) (349) (349) (349) (349) (349) (348) (349) (349) (349) (349) (349) (697) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (87 87) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (1541) (174) (175) (174) (175) (174) (174) (175) (1395) (174) (174) (175) (174) (175) (174) (174) (1541) (175) (174) (175) (174) (174) (175) (174) (1541) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (348) (349) (88 87) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (2790 2790 2790))) :lvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (88 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6200) (6400) (6500) (6700) (6900) (7000) (6100) (7000) (6900) (6700) (6500) (6400) (6500) (6900) (7400) (6700) (7000) (7600) (7400) (7600) (7700) (7900) (8100) (8200) (7300) (8200) (8100) (7900) (7700) (7600) (7700) (7400) (7600) (7700) (7900) (8100) (7000) (8100) (7900) (7700) (7600) (7400) (7600) (7200) (7400) (7600) (7700) (7900) (6900) (7900) (7700) (7600) (7400) (7200) (7400) (7600) (7700) (7400) (7600) (7700) (6700) (7200) (7400) (7600) (7200) (7400) (7600) (6500) (7000) (6900) (6700) (7200) (7000) (6900) (6700) (6500) (6400) (6500) (6700) (6900 6700) (6700) (6500) (6500) (7200) (7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7200) (7000) (6900) (6700) (6500) (6400) (7200) (6200) (6400) (6600) (6700) (6900) (7000) (6900) (6700) (6500) (6400) (6200) (7000) (6000) (6200) (6400) (6500) (6700) (6900) (7100) (7200) (7400) (7600) (7700) (6800) (7700) (7600) (7400) (7200) (7100) (7200) (7100) (7400) (7200) (7100) (6900) (6800) (6900) (6800) (6600) (6400) (6200) (6000) (6200) (6400) (6600) (6800) (6900) (6200) (7200) (7100) (6900) (6800) (6600) (6400) (6600) (6800) (6900) (7100) (7200) (6600) (7600) (7400) (7200) (7100) (6900) (6800) (6900) (7100) (7200) (7400) (7600) (6900) (7700) (7600) (7400) (7200) (7100) (8100) (8000) (7800) (7600) (8100) (7400) (7200 7100) (7100) (6900) (6900) (6900) (7000) (7200) (6200) (6600) (6900) (7000) (6700) (6900) (7000) (7200) (7400) (6400) (7400) (7200) (7000) (6900) (6700) (6900) (7700) (7600) (7700) (6700) (7600) (7400) (7600) (7700) (7900) (8100) (8200) (7300) (8200) (8100) (7900) (7700) (7600) (7700) (7400) (6700) (7400) (7300) (7600) (6900) (7300) (7400) (7100) (7300) (7400) (7400) (7200) (7000) (6900) (6700) (6500) (7000) (6100) (6200) (6400) (6500) (6700) (6900) (7400) (6500) (6400) (6200) (6200))) :lonset (quote (0 152 303 455 606 758 909 1061 1212 1364 1515 1667 1818 2121 2424 2727 3030 3333 3636 3788 3939 4091 4242 4394 4545 4697 4848 5000 5152 5303 5455 5606 5758 5909 6061 6212 6364 6515 6667 6818 6970 7121 7273 7424 7576 7727 7879 8030 8182 8333 8485 8636 8788 8939 9091 9242 9394 9545 9697 9848 10000 10909 11061 11212 11364 11515 11667 11818 12424 13030 13333 13636 13788 13939 14091 14242 14394 14545 14697 14848 15000 15303 15455 15758 16061 16364 16515 16667 16818 16970 17121 17273 17424 17576 17727 17879 18030 18182 18333 18485 18636 18788 18939 19091 19242 19394 19545 19697 19848 20000 20152 20303 20455 20606 20758 20909 21061 21212 21364 21515 21667 21818 21970 22121 22273 22424 22576 22727 22879 23030 23182 23333 23485 23636 23788 23939 24091 24242 24394 24545 24697 24848 25000 25152 25303 25455 25606 25758 25909 26061 26212 26364 26515 26667 26818 26970 27121 27273 27424 27576 27727 27879 28030 28182 28333 28485 28636 28788 28939 29091 29242 29394 29545 29697 29849 30000 30152 30303 30455 30606 30758 30909 31061 31212 31364 31515 31667 31818 31970 32121 32273 32424 32879 33030 33182 33485 33636 34091 34242 34394 34545 34849 35152 35455 35606 35758 35909 36061 36212 36364 36515 36667 36818 36970 37121 37273 37576 37727 37879 38182 38485 39091 39242 39394 39545 39697 39849 40000 40152 40303 40455 40606 40758 40909 41212 41515 41970 42121 42273 42424 42576 42727 42879 43030 43485 43636 43788 43939 44091 44242 44394 44545 44697 44849 45000 45152 45303 45455 45606 45758 46061 46212 46364 48182)) :ldur (quote ((152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (303) (303) (303) (303) (303) (303) (152) (151) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (303) (152) (151) (152) (151) (152) (151) (303) (606) (303) (303) (152) (151) (152) (151) (152) (151) (152) (151) (76 76) (303) (152) (303) (303) (303) (84 75) (83 83) (84 83) (83 84) (84 83) (83 84) (84 83) (83 84) (83 83) (83 84) (83 83) (83 84) (83 83) (83 84) (83 83) (83 84) (83 83) (83 84) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (455) (151) (76 76) (303) (151) (455) (151) (152) (151) (304) (303) (303) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (303) (151) (152) (303) (303) (303) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (303) (303) (455) (151) (152) (151) (152) (151) (152) (151) (455) (151) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (303) (151) (152) (1818))) :lvel (quote ((64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64 64) (64) (64) (64) (64) (64) (64 64) (48 48) (49 48) (49 49) (50 50) (51 51) (52 51) (52 52) (53 53) (54 53) (54 54) (55 55) (56 55) (57 56) (57 57) (58 58) (59 58) (59 59) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64 64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (76 0) (0) (0) (0) (0) (0) (75 0) (76 0) (75 0) (76 0) (75 0) (76 0) (75 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (76 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) for val in (list nil nil nil nil nil nil nil nil nil) do (sethash hashtable key val)) hashtable) :features (list (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000) (6200) (6400) (6500) (6200) (6400) (6000) (6700) (7200) (6900 7100) (7100) (7200) (7400) (6700) (6900) (7100) (7200) (6900) (7100) (6700) (7400) (7900) (7600 7700) (7700) (7900) (7600) (8100) (7900) (7700) (7600) (7900) (7700) (8100) (7900) (7700) (7600) (7400) (7200) (7600) (7400) (7700) (7600) (7400) (7200) (7100) (6900) (7200) (7100) (7400) (7200) (7100) (6900) (6700) (6600) (6900) (6700) (7100) (6900) (6200) (7100 7200) (7200) (7400) (7100) (6900) (6700) (6600) (6400) (6700) (6600) (6900) (6700) (7100) (6900) (7200) (7100) (7400) (7200) (7600) (7400) (7200 7100) (7400) (7900) (7200 7100) (7100) (6900) (6700) (6700) (6700) (6900) (7100) (7200) (6900) (7100) (6700) (6600) (6900) (7100) (7200) (7400) (7100) (7200) (6900) (7100) (7400) (7200) (7100) (6900) (7200) (7100) (7400) (7200) (7600) (7400) (7200) (7100) (7400) (7300) (7600) (7400) (7300) (7400) (7600) (7700) (6900) (7100) (7300) (7400) (6600) (6800) (6900) (7100) (7200) (7400) (6400) (6600) (6800) (6900) (6600) (6800) (6400) (7600) (7400) (7200) (7600) (7400) (7200) (7100) (7400) (7200) (8100) (8000) (8300) (8100) (7600) (7700) (7400) (6800) (7700) (7600) (7400) (7400 7200) (7200) (7100) (6900) (6900) (8100) (7900) (7700) (7600) (7900) (7700) (8100) (7900) (7600) (7700) (7900) (8100) (7700) (7900) (7600) (7700) (7900) (7700) (7600) (7400) (7700) (7600) (7900) (7700) (7400) (7600) (7700) (7900) (7600) (7700) (7400) (7600) (7200) (7400) (7600) (7700) (7400) (7600) (7200) (7400) (7600) (7700) (7900) (8100) (7700) (7900) (7600) (7700) (7900) (8100) (8300) (8400) (8100) (8300) (7900) (8400) (7900) (7700 7600) (7600) (7400) (7200) (7200) (7000) (6900) (6700) (6500) (6900) (6700) (7000) (6900) (7100) (7200) (6400) (6200) (7200) (6500) (7100) (6400 7200 6700))) :lonset (quote (174 349 523 698 872 1047 1221 1395 1744 2093 2267 2442 2791 2965 3140 3314 3488 3663 3837 4012 4186 4535 4884 5058 5233 5581 5756 5930 6105 6279 6453 6628 6802 6977 7151 7326 7500 7674 7849 8023 8198 8372 8547 8721 8895 9070 9244 9419 9593 9767 9942 10116 10291 10465 10640 10814 10988 11163 11512 11860 12035 12384 12558 12733 12907 13081 13256 13430 13605 13779 13953 14128 14302 14477 14651 14826 15000 15174 15349 15523 15698 15872 16047 16221 16395 16570 16744 18314 18488 18663 18837 19012 19186 19360 19535 21105 21279 21453 21628 21802 21977 22151 22326 23895 24070 24244 24419 24593 24767 24942 25116 26686 26860 27035 27209 27384 27558 27733 27907 28256 28605 28953 29302 29651 30000 30349 30698 31046 31395 31744 32093 32442 32791 33663 33837 34012 34186 34360 34535 34709 34884 35058 35233 35407 35581 35756 35930 36105 36279 36453 36628 36802 36977 37151 37326 37500 37674 37849 38023 38198 38372 38546 38721 38895 39070 39244 39419 39593 39767 39942 40116 40291 40465 42035 42209 42384 42558 42733 42907 43081 43256 44826 45000 45174 45349 45523 45698 45872 46046 47616 47791 47965 48140 48314 48488 48663 48837 50407 50581 50756 50930 51105 51279 51453 51628 51802 51977 52151 52326 52500 52674 52849 53023 53198 53372 53546 53721 53895 54070 54244 54419 54767 55116 55291 55465 55640 55814 55988 56163 56337 56512 56686 56860 57035 57209 57384 57558 57733 57907 58081 58256 58430 58605 61395)) :ldur (quote ((175) (174) (175) (174) (175) (174) (174) (349) (349) (87 87) (175) (349) (174) (175) (174) (174) (175) (174) (175) (174) (349) (349) (87 87) (175) (348) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (349) (348) (87 88) (349) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (88 87) (174) (175) (87 87) (174) (175) (174) (349) (174) (175) (174) (175) (174) (174) (175) (349) (174) (174) (175) (174) (175) (174) (175) (348) (175) (174) (175) (174) (174) (175) (174) (349) (174) (175) (174) (175) (174) (175) (174) (349) (349) (348) (349) (349) (349) (349) (349) (348) (349) (349) (349) (349) (349) (697) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (87 87) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (1541) (174) (175) (174) (175) (174) (174) (175) (1395) (174) (174) (175) (174) (175) (174) (174) (1541) (175) (174) (175) (174) (174) (175) (174) (1541) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (348) (349) (88 87) (174) (175) (174) (174) (175) (174) (175) (174) (174) (175) (174) (175) (174) (175) (174) (174) (175) (174) (175) (2790 2790 2790))) :lvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (88 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil) (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6200) (6400) (6500) (6700) (6900) (7000) (6100) (7000) (6900) (6700) (6500) (6400) (6500) (6900) (7400) (6700) (7000) (7600) (7400) (7600) (7700) (7900) (8100) (8200) (7300) (8200) (8100) (7900) (7700) (7600) (7700) (7400) (7600) (7700) (7900) (8100) (7000) (8100) (7900) (7700) (7600) (7400) (7600) (7200) (7400) (7600) (7700) (7900) (6900) (7900) (7700) (7600) (7400) (7200) (7400) (7600) (7700) (7400) (7600) (7700) (6700) (7200) (7400) (7600) (7200) (7400) (7600) (6500) (7000) (6900) (6700) (7200) (7000) (6900) (6700) (6500) (6400) (6500) (6700) (6900 6700) (6700) (6500) (6500) (7200) (7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7400 7200) (7200) (7000) (6900) (6700) (6500) (6400) (7200) (6200) (6400) (6600) (6700) (6900) (7000) (6900) (6700) (6500) (6400) (6200) (7000) (6000) (6200) (6400) (6500) (6700) (6900) (7100) (7200) (7400) (7600) (7700) (6800) (7700) (7600) (7400) (7200) (7100) (7200) (7100) (7400) (7200) (7100) (6900) (6800) (6900) (6800) (6600) (6400) (6200) (6000) (6200) (6400) (6600) (6800) (6900) (6200) (7200) (7100) (6900) (6800) (6600) (6400) (6600) (6800) (6900) (7100) (7200) (6600) (7600) (7400) (7200) (7100) (6900) (6800) (6900) (7100) (7200) (7400) (7600) (6900) (7700) (7600) (7400) (7200) (7100) (8100) (8000) (7800) (7600) (8100) (7400) (7200 7100) (7100) (6900) (6900) (6900) (7000) (7200) (6200) (6600) (6900) (7000) (6700) (6900) (7000) (7200) (7400) (6400) (7400) (7200) (7000) (6900) (6700) (6900) (7700) (7600) (7700) (6700) (7600) (7400) (7600) (7700) (7900) (8100) (8200) (7300) (8200) (8100) (7900) (7700) (7600) (7700) (7400) (6700) (7400) (7300) (7600) (6900) (7300) (7400) (7100) (7300) (7400) (7400) (7200) (7000) (6900) (6700) (6500) (7000) (6100) (6200) (6400) (6500) (6700) (6900) (7400) (6500) (6400) (6200) (6200))) :lonset (quote (0 152 303 455 606 758 909 1061 1212 1364 1515 1667 1818 2121 2424 2727 3030 3333 3636 3788 3939 4091 4242 4394 4545 4697 4848 5000 5152 5303 5455 5606 5758 5909 6061 6212 6364 6515 6667 6818 6970 7121 7273 7424 7576 7727 7879 8030 8182 8333 8485 8636 8788 8939 9091 9242 9394 9545 9697 9848 10000 10909 11061 11212 11364 11515 11667 11818 12424 13030 13333 13636 13788 13939 14091 14242 14394 14545 14697 14848 15000 15303 15455 15758 16061 16364 16515 16667 16818 16970 17121 17273 17424 17576 17727 17879 18030 18182 18333 18485 18636 18788 18939 19091 19242 19394 19545 19697 19848 20000 20152 20303 20455 20606 20758 20909 21061 21212 21364 21515 21667 21818 21970 22121 22273 22424 22576 22727 22879 23030 23182 23333 23485 23636 23788 23939 24091 24242 24394 24545 24697 24848 25000 25152 25303 25455 25606 25758 25909 26061 26212 26364 26515 26667 26818 26970 27121 27273 27424 27576 27727 27879 28030 28182 28333 28485 28636 28788 28939 29091 29242 29394 29545 29697 29849 30000 30152 30303 30455 30606 30758 30909 31061 31212 31364 31515 31667 31818 31970 32121 32273 32424 32879 33030 33182 33485 33636 34091 34242 34394 34545 34849 35152 35455 35606 35758 35909 36061 36212 36364 36515 36667 36818 36970 37121 37273 37576 37727 37879 38182 38485 39091 39242 39394 39545 39697 39849 40000 40152 40303 40455 40606 40758 40909 41212 41515 41970 42121 42273 42424 42576 42727 42879 43030 43485 43636 43788 43939 44091 44242 44394 44545 44697 44849 45000 45152 45303 45455 45606 45758 46061 46212 46364 48182)) :ldur (quote ((152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (303) (303) (303) (303) (303) (303) (152) (151) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (303) (152) (151) (152) (151) (152) (151) (303) (606) (303) (303) (152) (151) (152) (151) (152) (151) (152) (151) (76 76) (303) (152) (303) (303) (303) (84 75) (83 83) (84 83) (83 84) (84 83) (83 84) (84 83) (83 84) (83 83) (83 84) (83 83) (83 84) (83 83) (83 84) (83 83) (83 84) (83 83) (83 84) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (455) (151) (76 76) (303) (151) (455) (151) (152) (151) (304) (303) (303) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (151) (152) (303) (151) (152) (303) (303) (303) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (151) (303) (303) (455) (151) (152) (151) (152) (151) (152) (151) (455) (151) (152) (151) (152) (151) (152) (151) (152) (152) (151) (152) (151) (152) (151) (152) (303) (151) (152) (1818))) :lvel (quote ((64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64 64) (64) (64) (64) (64) (64) (64 64) (48 48) (49 48) (49 49) (50 50) (51 51) (52 51) (52 52) (53 53) (54 53) (54 54) (55 55) (56 55) (57 56) (57 57) (58 58) (59 58) (59 59) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64 64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (76 0) (0) (0) (0) (0) (0) (75 0) (76 0) (75 0) (76 0) (75 0) (76 0) (75 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (76 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (76 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil) (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7600) (7500) (7400) (7300) (7100) (6900) (6800) (6600) (6800) (6900) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (6400) (6300) (6400) (6600) (6800) (6900) (7100) (7300) (7500) (7600) (7500) (7300) (7100) (7600) (6400) (8000) (7600) (7300) (7600) (7500) (7600) (7300) (7000) (6600) (7800) (7500) (7100) (7500) (7300) (7500) (7100) (6800) (6400) (7600) (7300) (7000) (8000) (7800) (7600) (7500) (7300) (7100) (7000) (6400) (6300) (6400) (7000) (6800) (7000) (7100) (7000) (7100) (6300) (6100) (7100) (6100) (7000) (7100) (7100) (7500) (7800) (8300) (8300) (7800) (7500) (7100) (6600) (6300) (5900) (7600) (7500) (7400) (7300) (7100) (6900) (6800) (6600) (6800) (6900) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (6400) (6300) (6400) (6600) (6800) (6900) (7100) (7300) (7500) (7600) (7500) (7300) (7100) (7600) (6400) (8000) (7600) (7300) (7600) (7500) (7600) (7300) (7000) (6600) (7800) (7500) (7100) (7500) (7300) (7500) (7100) (6800) (6400) (7600) (7300) (7000) (8000) (7800) (7600) (7500) (7300) (7100) (7000) (6400) (6300) (6400) (7000) (6800) (7000) (7100) (7000) (7100) (6300) (6100) (7100) (6100) (7000) (7100) (7100) (7500) (7800) (8300) (8300) (7800) (7500) (7100) (6600) (6300) (5900) (5900) (6100) (6300) (6400) (6600) (6800) (7000) (7100) (7000) (6800) (6600) (7100) (5900) (8300) (8200) (8100) (8000) (7800) (7600) (7500) (7300) (7500) (7600) (7500) (7800) (7600) (7800) (7500) (7300) (7500) (7100) (7000) (7100) (7500) (7300) (7500) (8000) (7900) (8000) (7300) (7100) (7300) (7600) (7500) (7600) (8200) (8000) (8200) (7500) (7300) (7500) (8000) (7900) (8000) (8300) (8200) (8300) (7500) (7400) (7500) (8200) (8000) (8200) (7900) (7700) (7900) (7500) (7400) (7400) (8100) (8000) (7800) (7600) (7500) (7600) (7300) (7200) (7300) (7600) (7500) (7600) (8000) (7800) (7600) (7500) (7300) (7500) (7100) (7000) (7100) (7300) (7100) (7300) (7600) (7500) (7300) (7100) (7000) (7100) (6800) (6700) (6800) (6900) (6800) (6900) (7300) (7100) (7300) (6900) (6800) (6900) (7600) (7500) (7600) (6700) (6500) (6700) (7000) (6800) (7000) (5900) (5800) (5900) (6800) (6400) (6100) (5800) (6700) (6800) (6300) (5900) (5600) (6400) (6600) (6800) (6900) (7100) (7300) (7500) (7600) (7500) (7300) (7100) (7600) (7100) (6900) (7100) (6800) (6600) (6800) (7600) (7500) (7400) (7300) (7100) (6900) (6800) (6600) (6800) (6900) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (6400) (6300) (6400) (6600) (6900) (7100) (7500) (7800) (6300) (6400) (6800) (6900) (7300) (7600) (6100) (6600) (6900) (7100) (7300) (7500) (7600) (7300) (6900) (7800) (7600) (7500) (7300) (7100) (6900) (6800) (6400) (6300) (6400) (6800) (6600) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (7100) (6900) (7100) (7600) (7500) (7600) (7100) (6800) (6400) (5900) (6100) (6300) (6400) (6600) (6800) (7000) (7100) (7000) (6800) (6600) (7100) (5900) (8300) (8200) (8100) (8000) (7800) (7600) (7500) (7300) (7500) (7600) (7500) (7800) (7600) (7800) (7500) (7300) (7500) (7100) (7000) (7100) (7500) (7300) (7500) (8000) (7900) (8000) (7300) (7100) (7300) (7600) (7500) (7600) (8200) (8000) (8200) (7500) (7300) (7500) (8000) (7900) (8000) (8300) (8200) (8300) (7500) (7400) (7500) (8200) (8000) (8200) (7900) (7700) (7900) (7500) (7400) (7400) (8100) (8000) (7800) (7600) (7500) (7600) (7300) (7200) (7300) (7600) (7500) (7600) (8000) (7800) (7600) (7500) (7300) (7500) (7100) (7000) (7100) (7300) (7100) (7300) (7600) (7500) (7300) (7100) (7000) (7100) (6800) (6700) (6800) (6900) (6800) (6900) (7300) (7100) (7300) (6900) (6800) (6900) (7600) (7500) (7600) (6700) (6500) (6700) (7000) (6800) (7000) (5900) (5800) (5900) (6800) (6400) (6100) (5800) (6700) (6800) (6300) (5900) (5600) (6400) (6600) (6800) (6900) (7100) (7300) (7500) (7600) (7500) (7300) (7100) (7600) (7100) (6900) (7100) (6800) (6600) (6800) (7600) (7500) (7400) (7300) (7100) (6900) (6800) (6600) (6800) (6900) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (6400) (6300) (6400) (6600) (6900) (7100) (7500) (7800) (6300) (6400) (6800) (6900) (7300) (7600) (6100) (6600) (6900) (7100) (7300) (7500) (7600) (7300) (6900) (7800) (7600) (7500) (7300) (7100) (6900) (6800) (6400) (6300) (6400) (6800) (6600) (6800) (7100) (6900) (7100) (6800) (6600) (6800) (7100) (6900) (7100) (7600) (7500) (7600) (7100) (6800) (6400))) :lonset (quote (208 625 1042 1458 1875 2292 2708 3125 3542 3646 3750 3958 4062 4167 4375 4479 4583 4792 4896 5000 5417 5833 6250 6667 7083 7500 7917 8125 8333 8542 8750 9167 10208 10625 11042 11458 11562 11667 11875 12083 12292 12708 13125 13542 13958 14062 14167 14375 14583 14792 15208 15625 16042 16458 16875 17292 17708 18125 18542 18750 18958 19062 19167 19375 19479 19583 19792 19896 20000 20208 20417 20625 20833 21042 21250 21875 22083 22292 22500 23125 23333 23542 23750 23958 24167 24375 25208 25625 26042 26458 26875 27292 27708 28125 28542 28646 28750 28958 29062 29167 29375 29479 29583 29792 29896 30000 30417 30833 31250 31667 32083 32500 32917 33125 33333 33542 33750 34167 35208 35625 36042 36458 36562 36667 36875 37083 37292 37708 38125 38542 38958 39062 39167 39375 39583 39792 40208 40625 41042 41458 41875 42292 42708 43125 43542 43750 43958 44062 44167 44375 44479 44583 44792 44896 45000 45208 45417 45625 45833 46042 46250 46875 47083 47292 47500 48125 48333 48542 48750 48958 49167 49375 50000 50417 50833 51250 51667 52083 52500 52917 53125 53333 53542 53750 54167 55208 55625 56042 56458 56875 57292 57708 58125 58542 58646 58750 58958 59062 59167 59375 59479 59583 59792 59896 60000 60208 60312 60417 60625 60729 60833 61042 61146 61250 61458 61562 61667 61875 61979 62083 62292 62396 62500 62708 62812 62917 63125 63229 63333 63542 63646 63750 63958 64062 64167 64375 64479 64583 64792 64896 65000 65208 65625 66042 66458 66562 66667 66875 66979 67083 67292 67396 67500 67708 68125 68542 68958 69062 69167 69375 69479 69583 69792 69896 70000 70208 70625 71042 71458 71562 71667 71875 71979 72083 72292 72396 72500 72708 72812 72917 73125 73229 73333 73542 73646 73750 73958 74062 74167 74375 74479 74583 74792 74896 75000 75208 75417 75625 75833 76042 76250 76458 76667 76875 77500 77917 78333 78750 79167 79583 80000 80417 80625 80833 81042 81250 81875 81979 82083 82292 82396 82500 82708 83125 83542 83958 84375 84792 85208 85625 86042 86146 86250 86458 86562 86667 86875 86979 87083 87292 87396 87500 87917 88333 88750 89167 89583 90000 90417 90833 91250 91667 92083 92500 92917 93333 93750 94167 94583 95000 95417 95833 96250 97708 97917 98125 98333 98542 98750 98958 99062 99167 99375 99479 99583 99792 99896 100000 100208 100312 100417 100625 100729 100833 101042 101146 101250 101458 101667 101875 102500 102917 103333 103750 104167 104583 105000 105417 105625 105833 106042 106250 106667 107708 108125 108542 108958 109375 109792 110208 110625 111042 111146 111250 111458 111562 111667 111875 111979 112083 112292 112396 112500 112708 112812 112917 113125 113229 113333 113542 113646 113750 113958 114062 114167 114375 114479 114583 114792 114896 115000 115208 115312 115417 115625 115729 115833 116042 116146 116250 116458 116562 116667 116875 116979 117083 117292 117396 117500 117708 118125 118542 118958 119062 119167 119375 119479 119583 119792 119896 120000 120208 120625 121042 121458 121562 121667 121875 121979 122083 122292 122396 122500 122708 123125 123542 123958 124062 124167 124375 124479 124583 124792 124896 125000 125208 125312 125417 125625 125729 125833 126042 126146 126250 126458 126562 126667 126875 126979 127083 127292 127396 127500 127708 127917 128125 128333 128542 128750 128958 129167 129375 130000 130417 130833 131250 131667 132083 132500 132917 133125 133333 133542 133750 134375 134479 134583 134792 134896 135000 135208 135625 136042 136458 136875 137292 137708 138125 138542 138646 138750 138958 139062 139167 139375 139479 139583 139792 139896 140000 140417 140833 141250 141667 142083 142500 142917 143333 143750 144167 144583 145000 145417 145833 146250 146667 147083 147500 147917 148333 148750 150208 150417 150625 150833 151042 151250 151458 151562 151667 151875 151979 152083 152292 152396 152500 152714 152821 152929 153143 153250 153357 153571 153679 153786 153994 154203 154411 154619)) :ldur (quote ((417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (417) (417) (416) (417) (417) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (209) (208) (417) (208) (209) (208) (417) (208) (209) (208) (208) (209) (208) (208) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (104) (105) (208) (208) (209) (416) (417) (417) (416) (417) (417) (416) (417) (417) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (209) (208) (417) (208) (209) (208) (417) (208) (209) (208) (208) (209) (208) (208) (208) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (209) (208) (208) (209) (208) (208) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (625) (104) (104) (209) (104) (104) (208) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (1424) (209) (208) (208) (209) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (208) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (417) (417) (416) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (208) (209) (208) (208) (209) (208) (208) (209) (208) (208) (417) (416) (417) (417) (416) (417) (417) (208) (208) (209) (208) (625) (104) (104) (209) (104) (104) (208) (417) (417) (416) (417) (417) (416) (417) (417) (104) (104) (208) (104) (105) (208) (104) (104) (209) (104) (104) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (417) (416) (417) (1250) (209) (208) (208) (209) (208) (208) (104) (105) (208) (104) (104) (209) (104) (104) (214) (107) (108) (214) (107) (107) (214) (108) (107) (208) (209) (208) (208))) :lvel (quote ((64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64) (64))) :loffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil) (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6400) (6900) (7200) (7100) (6400) (7100) (7400) (7200) (7600) (6800) (7600) (6900) (6400) (6900) (7200) (7100) (6400) (7100) (7400) (7200) (6900) (7600) (7200) (7600) (6900) (7200) (6400) (6700) (6500) (6900) (7400) (7700) (7400) (7100) (7400) (6700) (7100) (6200) (6500) (6400) (6700) (7200) (7600) (7200) (6900) (7200) (6500) (7400) (7100) (6700) (7100) (6400) (7200) (6900) (6500) (6900) (6200) (7100) (7200) (6700) (7200) (7600) (7400) (6700) (7400) (7700) (7600) (7900) (7100) (7900) (7200) (6700) (7200) (7600) (7400) (6700) (7400) (7700) (7600) (7200) (7900) (7600) (8400) (8100) (7600) (8100) (7200) (7600) (6900) (7200) (7400) (7800) (8100) (8400) (8300) (7900) (7400) (7900) (7100) (7400) (6700) (7100) (7200) (7600) (7900) (8300) (8100) (7800) (7500) (7800) (7100) (7500) (6600) (6900) (6700) (7900) (7600) (7200) (7600) (6900) (7800) (7400) (7100) (7400) (6700) (7600) (7200) (6900) (7200) (6600) (7900) (7800) (7600) (7500) (7800) (7100) (7500) (7600) (7900) (8200) (7900) (7600) (7900) (7300) (7600) (7900) (7600) (7300) (7600) (6900) (7700) (8100) (7700) (7400) (7700) (7100) (7400) (7700) (7400) (7100) (7400) (6700) (7600) (7900) (7600) (7200) (7600) (6900) (7200) (7500) (7200) (6900) (7200) (6600) (7400) (7700) (7400) (7100) (7400) (6800) (7100) (7400) (7100) (6800) (7100) (6400) (6400) (6900) (7200) (7100) (6400) (7100) (7400) (7200) (6900) (6800) (6400) (6900) (7200) (7600) (7200) (6900) (7200) (6600) (6900) (7200) (6900) (6600) (6900) (6300) (7200) (7100) (6900) (6800) (7100) (7400) (7100) (6800) (7100) (6200) (6500) (6800) (6500) (6200) (6500) (5900) (6500) (6400) (6200) (6000) (6400) (6900) (6400) (6000) (6400) (5700) (6000) (6300) (6000) (5700) (6000) (5400) (6000) (5900) (5700) (5600) (7100) (6800) (6400) (6400) (6900) (7200) (7100) (6400) (7100) (7400) (7200) (6900) (7200) (7600) (7400) (7100) (7400) (7700) (7600) (7200) (7600) (7900) (7700) (7600) (7400) (7200) (7100) (7200) (7400) (7600) (7700) (7400) (8000) (7400) (8300) (7400) (7200) (8100) (7700) (7400) (7100) (7400) (6800) (7100) (7200) (6900) (6400) (6900) (7100) (6800) (6900) (6400) (6000) (6400) (5700))) :lonset (quote (163 326 489 652 815 978 1141 1304 1630 1957 2283 2609 2772 2935 3098 3261 3424 3587 3750 3913 4239 5380 5543 5707 5870 6033 6196 6359 6522 6848 7174 7500 7989 8152 8315 8478 8641 8804 8967 9130 9457 9783 10109 10598 10761 10924 11087 11413 11902 12065 12228 12391 12717 13207 13370 13533 13696 14022 14348 15815 15978 16141 16304 16467 16630 16793 16957 17283 17609 17935 18261 18424 18587 18750 18913 19076 19239 19402 19565 19891 20217 20543 20870 21033 21196 21359 21522 21685 21848 22011 22174 22500 22826 23152 23478 23641 23804 23967 24130 24293 24457 24620 24783 25109 25435 25761 26087 26250 26413 26576 26739 26902 27065 27228 27391 27717 28207 28370 28533 28696 29022 29511 29674 29837 30000 30326 30815 30978 31141 31304 31467 31630 31793 31957 32120 32283 32446 32609 34076 34239 34402 34565 34728 34891 35054 35217 35380 35543 35707 35870 36685 36848 37011 37174 37337 37500 37663 37826 37989 38152 38315 38478 39293 39457 39620 39783 39946 40109 40272 40435 40598 40761 40924 41087 41902 42065 42228 42391 42554 42717 42880 43043 43207 43370 43533 43696 44511 44674 44837 45000 45163 45326 45489 45652 45978 46304 46630 46957 47120 47283 47446 47609 47772 47935 48098 48261 48424 48587 48750 48913 49076 49239 49402 49565 49728 49891 50054 50217 50380 50543 50707 50870 51033 51196 51359 51522 51685 51848 52011 52174 52337 52500 52663 52826 52989 53152 53315 53478 53641 53804 53967 54130 54293 54457 54620 54783 55109 55435 55761 56250 56413 56576 56739 56902 57065 57228 57391 57554 57717 57880 58043 58207 58370 58533 58696 58859 59022 59185 59348 59511 59674 59837 60000 60163 60326 60489 60652 60815 60978 61141 61304 61467 61630 61793 61957 62120 62283 62446 62609 62772 62935 63098 63261 63424 63587 63750 63913 64076 64239 64402 64565 66522)) :ldur (quote ((163) (163) (163) (163) (163) (163) (163) (326) (327) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (163) (164) (163) (163) (163) (163) (163) (326) (326) (326) (489) (163) (163) (163) (163) (163) (163) (163) (327) (326) (326) (489) (163) (163) (163) (326) (489) (163) (163) (163) (326) (490) (163) (163) (163) (326) (326) (326) (163) (163) (163) (163) (163) (163) (164) (326) (326) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (327) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (326) (163) (163) (163) (163) (163) (164) (163) (163) (326) (326) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (326) (490) (163) (163) (163) (326) (489) (163) (163) (163) (326) (489) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (326) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (326) (326) (326) (327) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (326) (326) (326) (326) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (164) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (163) (1957))) :lvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil) (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((4200 4300) (4300) (7900 8100) (7900 7800) (7900 8100) (7900 8100) (7900 8100) (7900 8100) (7900 8100) (7900 7800) (8100) (5200 5400) (5400) (5700) (5500) (5400) (5200) (7600) (7400) (7300) (7400) (7600) (6600) (4800 5000) (4800 5000) (5000 4800) (5000 4800) (5000 4800) (4800 4800) (4800 5000) (4800 4700) (4700) (4300) (4700) (5000) (5500) (4700) (4800) (5200) (5500) (6000) (5200) (5500) (5400) (5700) (5000) (5400) (5700) (6200) (5900) (5500) (5900) (6200) (6700) (8100 8300) (8300) (7400 7600) (7600) (6700 6900) (6900) (7900 8100) (8100) (7300 7400) (7400) (6600 6700) (6700) (7800 7900) (7900) (6900 7100) (7100) (6200 6400) (6400) (5400 5500) (5500) (4700 4900) (4900) (4200 4300) (4300) (6400 6200) (6900 6600) (6400 6600) (6200) (6400 6200) (6900 6600) (6400 6600) (6200) (6400 6200) (6900 6600) (6400 6600) (7100 6200) (5300) (5200) (6200 6400) (6400) (6700 6900) (6900) (6100 6200) (6200) (6600 6700) (6700) (5900 6100) (6100) (6400 6600) (6600) (6200) (6100) (6200) (6400 6600) (6200) (6700 6900) (6600) (7400) (7800) (8100) (8600) (8100) (7800) (8100) (7400) (7800) (8100) (7800) (7900) (8100) (7400) (7900) (8300) (7900) (7400) (7900) (7100) (7400) (7900) (7100) (7200) (7400) (6700) (7200) (7600) (7200) (6900) (7200) (6600) (6900) (7200) (6600) (6700) (6900) (6300) (6600) (7100) (6600) (6300) (6600) (5900) (6300) (6600) (6300) (6400) (6600) (5900) (6400) (6700) (6400) (5900) (6400) (5500) (5900) (6400) (6300) (6400) (6700) (6000) (6500) (6900) (6500) (6000) (6500) (5700) (6000) (6500) (6400) (6500) (6900) (6300) (6600) (6900) (6600) (6300) (6600) (5900) (6300) (5400) (5700) (5500) (5400) (5500) (5900) (6400) (5900) (5500) (5900) (5200) (5400) (5500) (5200) (5500) (5900) (6400) (5000 5200) (5200) (5900 6000) (6000) (6700 6900) (6900) (4800 5000) (5000) (5700 5900) (5900) (6600 6700) (6700) (4700 4800) (4800) (5500 5700) (5700) (6400 6600) (6600) (7200 7400) (7400) (7800 7900) (7900) (8100 8300) (8300) (6200) (6500) (6500 6400) (7200 6700) (6500 6700) (6400) (6700 6600) (7200 6900) (6700 6900) (6600) (6900 6700) (7300 7000) (6900 7000) (7400 6700) (7100 7200) (7200) (6900 7100) (7100) (6900 7000) (7000) (6700 6900) (6900) (7200 7400) (7400) (6600 6700) (6900 6700) (7200 7100) (7200 7400) (6900 7100) (6700) (7100) (6200) (6700) (5500))) :lonset (quote (42 200 674 831 989 1147 1305 1463 1621 1779 1937 2568 2726 3358 3516 3674 3831 4463 4779 5095 5410 5568 5726 6358 6516 6674 6831 6989 7147 7305 7463 7621 7937 8253 8568 8884 9200 9516 9831 10147 10463 10779 11095 11410 11726 12042 12358 12674 12989 13305 13621 13937 14253 14568 15358 15516 15989 16147 16621 16779 17252 17410 17884 18042 18516 18674 19147 19305 19779 19937 20410 20568 21042 21200 21674 21831 22305 22463 22858 23016 23174 23331 23489 23647 23805 23963 24121 24279 24437 24595 25305 25937 26726 26884 27042 27200 27358 27516 27674 27831 27989 28147 28305 28463 28621 28779 28937 29095 29252 29410 29568 29726 30358 30516 30674 30831 30989 31147 31305 31463 31621 31779 31937 32095 32252 32410 32568 32726 32884 33042 33200 33358 33516 33674 33831 33989 34147 34305 34463 34621 34779 34937 35095 35252 35410 35568 35726 35884 36042 36200 36358 36516 36674 36831 36989 37147 37305 37463 37621 37779 37937 38095 38252 38410 38568 38726 38884 39042 39200 39358 39516 39674 39831 39989 40147 40305 40463 40621 40779 40937 41095 41252 41410 41568 41726 41884 42042 42200 42358 42516 42674 42831 42989 43147 43305 43463 43621 43779 43937 44095 44252 44410 44568 44726 44884 45042 45200 45358 45516 45989 46147 46621 46779 47252 47410 47884 48042 48516 48674 49147 49305 49779 49937 50410 50568 51042 51200 51674 51831 52305 52463 52937 53095 53726 54358 55068 55226 55384 55542 55700 55858 56016 56173 56331 56489 56647 56805 57042 57200 57358 57516 57673 57831 57989 58147 58305 58463 58621 58779 58937 59095 59252 59410 59568 59726 59884 60042 60358)) :ldur (quote ((79 79) (158) (73 73) (74 74) (74 74) (74 74) (74 74) (74 74) (74 74) (73 74) (316) (74 74) (474) (152) (152) (152) (153) (311) (310) (310) (158) (158) (153) (73 79) (73 73) (73 73) (74 74) (74 74) (74 74) (74 74) (74 74) (310) (310) (310) (311) (311) (310) (310) (311) (311) (311) (310) (310) (311) (311) (311) (310) (310) (311) (311) (316) (316) (310) (316) (73 73) (73) (74 74) (74) (74 74) (152) (74 74) (79) (74 79) (79) (79 79) (78) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79) (79 78) (79) (79 79) (79) (73 73) (73 73) (74 73) (74) (74 74) (74 74) (74 74) (74) (74 74) (73 73) (73 73) (157 73) (153) (158) (79 74) (74) (74 74) (74) (73 73) (73) (74 73) (74) (74 74) (79) (74 74) (79) (153) (152) (158) (73 73) (158) (74 74) (153) (316) (152) (152) (152) (153) (153) (153) (153) (158) (158) (158) (158) (157) (153) (153) (153) (153) (153) (153) (158) (152) (158) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (153) (153) (158) (153) (153) (153) (152) (152) (152) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (158) (153) (153) (153) (158) (153) (152) (152) (152) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (153) (153) (153) (153) (153) (153) (158) (152) (152) (152) (153) (153) (153) (153) (153) (153) (152) (152) (152) (153) (153) (153) (158) (153) (153) (152) (152) (310) (74 74) (79) (74 74) (79) (74 74) (79) (74 74) (79) (73 73) (78) (74 74) (79) (73 73) (79) (74 74) (153) (74 74) (79) (74 73) (74) (74 74) (153) (73 73) (157) (158) (158) (74 79) (79 79) (79 79) (79) (73 79) (79 73) (78 79) (79) (79 79) (79 79) (79 79) (158 79) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79) (79 79) (79 79) (79 79) (79 78) (79 79) (158) (158) (158) (158) (316))) :lvel (quote ((108 113) (98) (80 97) (81 85) (80 80) (90 84) (90 93) (77 82) (92 86) (91 96) (121) (119 119) (119) (104) (95) (104) (121) (127) (119) (119) (102) (104) (121) (59 119) (86 86) (80 82) (86 78) (84 88) (82 84) (88 81) (96 96) (123) (101) (123) (119) (113) (107) (115) (113) (98) (109) (102) (100) (110) (104) (109) (119) (107) (111) (102) (102) (102) (111) (121) (94 119) (115) (80 123) (98) (106 106) (101) (100 117) (111) (93 127) (101) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (100 100) (100) (104 97) (97 92) (98 110) (102) (101 100) (97 97) (100 102) (100) (100 98) (96 97) (95 102) (123 93) (126) (121) (86 109) (104) (100 106) (104) (104 104) (86) (106 107) (106) (102 100) (97) (97 123) (110) (89) (90) (95) (100 112) (98) (104 86) (97) (127) (95) (84) (68) (83) (96) (77) (85) (84) (58) (88) (83) (75) (111) (111) (80) (80) (91) (81) (76) (86) (95) (97) (102) (83) (89) (78) (78) (75) (85) (82) (90) (80) (88) (90) (72) (83) (95) (78) (81) (77) (80) (76) (96) (85) (77) (85) (88) (80) (84) (83) (61) (83) (83) (83) (82) (77) (78) (89) (92) (78) (91) (82) (70) (83) (83) (83) (84) (76) (85) (83) (80) (68) (63) (75) (45) (53) (89) (89) (84) (74) (75) (86) (85) (89) (90) (66) (77) (82) (93) (83) (83) (83) (97) (97) (85) (77) (98) (101 109) (115) (111 108) (108) (96 102) (119) (95 92) (104) (65 92) (111) (68 104) (104) (98 113) (115) (86 96) (117) (80 117) (121) (101 107) (115) (102 111) (113) (91 108) (119) (102) (126) (85 84) (107 95) (107 107) (107) (66 88) (107 92) (88 88) (88) (88 88) (107 88) (88 88) (88 88) (88 88) (88) (88 88) (88) (88 88) (88) (88 88) (88) (88 88) (88) (88 88) (88 88) (88 88) (88 88) (88 88) (88) (88) (88) (88) (88))) :loffset (quote ((79 0) (0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (0) (79 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (79 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (78 0) (0) (79 0) (0) (79 0) (79 0) (78 0) (0) (79 0) (79 0) (79 0) (0) (79 0) (79 0) (79 0) (79 0) (0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (78 0) (0) (79 0) (0) (79 0) (0) (0) (0) (0) (79 0) (0) (79 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (78 0) (0) (79 0) (0) (79 0) (0) (0) (0) (79 0) (79 0) (79 0) (0) (79 0) (79 0) (79 0) (0) (79 0) (79 0) (79 0) (79 0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (0) (79 0) (79 0) (79 0) (78 0) (79 0) (0) (0) (0) (0) (0))) :lchan (quote ((1 1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1) (1) (1) (1 1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0 0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil) (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6700) (7900) (8100) (7900) (7800) (7900) (8100) (7400) (7200) (7100) (6900) (7100) (7200) (7100) (6900) (7100) (6700) (7600) (7400) (7200) (7800) (8100) (7100) (7900) (7900) (7800) (8300) (8100) (7400) (7600) (7400) (7200) (7100) (7600) (7100) (7400) (7300) (7400) (7600) (7300) (6900) (7400) (6700) (6600) (6700) (6400) (6900) (6700) (6600) (6400) (6200) (6400) (6600) (6700) (6900) (7100) (7400) (7300) (7400) (7300) (7400) (6900) (6700) (6600) (6700) (6400) (6600) (6700) (7900) (8100) (7900) (7800) (7900) (8100) (7400) (7200) (7100) (6900) (7100) (7200) (7100) (6900) (7100) (6700) (7600) (7400) (7200) (7800) (8100) (7900) (7900) (7800) (8300) (8100) (7400) (7600) (7400) (7200) (7100) (7600) (7100) (7400) (7300) (7400) (7600) (7300) (6900) (7400) (6700) (6600) (6700) (6400) (6900) (6700) (6600) (6400) (6200) (6400) (6600) (6700) (6900) (7100) (7400) (7300) (7400) (7300) (7400) (6900) (6700) (6600) (6700) (6400) (6600))) :lonset (quote (4031 5031 6386 6548 6720 6881 7042 8364 8542 8709 8859 9042 9375 9542 9714 9875 10042 10375 10709 11042 11375 11709 12042 12709 13042 13709 14720 15025 15709 16209 16381 16531 16698 17025 17386 17709 18042 18392 18709 19375 19709 20709 21042 22375 22709 23042 23375 23542 23709 23875 24042 24375 24542 24709 24875 25042 25375 25709 26042 27375 28042 29209 29375 29542 29709 29875 30042 36031 37031 38386 38548 38720 38881 39042 40364 40542 40709 40859 41042 41375 41542 41714 41875 42042 42375 42709 43042 43375 43709 44709 45042 45709 46720 47025 47709 48209 48381 48531 48698 49025 49386 49709 50042 50392 50709 51375 51709 52709 53042 54375 54709 55042 55375 55542 55709 55875 56042 56375 56542 56709 56875 57042 57375 57709 58042 59375 60042 61209 61375 61542 61709 61875 62042 64042)) :ldur (quote ((1022) (1394) (195) (183) (189) (183) (333) (189) (183) (144) (194) (350) (189) (200) (178) (178) (333) (334) (333) (333) (334) (333) (667) (333) (639) (333) (328) (695) (511) (177) (167) (167) (355) (356) (356) (355) (356) (317) (689) (334) (333) (333) (1000) (334) (333) (394) (167) (167) (166) (167) (333) (167) (167) (166) (167) (333) (334) (333) (1000) (334) (1000) (166) (167) (167) (166) (167) (2000) (1022) (1394) (195) (183) (189) (183) (333) (189) (183) (144) (194) (350) (189) (200) (178) (178) (333) (334) (333) (333) (334) (333) (333) (639) (333) (328) (695) (511) (177) (167) (167) (355) (356) (356) (355) (356) (317) (689) (334) (333) (333) (1333) (334) (333) (394) (167) (167) (166) (167) (333) (167) (167) (166) (167) (333) (334) (333) (1333) (334) (1000) (166) (167) (167) (166) (167) (2000))) :lvel (quote ((101) (102) (100) (86) (90) (88) (97) (96) (90) (75) (58) (81) (86) (97) (78) (73) (90) (90) (90) (90) (88) (88) (102) (91) (101) (85) (101) (100) (100) (88) (77) (77) (86) (92) (84) (91) (90) (93) (95) (92) (81) (96) (96) (88) (88) (85) (76) (84) (63) (61) (61) (61) (61) (61) (61) (61) (61) (61) (95) (67) (84) (84) (84) (84) (84) (84) (84) (101) (102) (100) (86) (90) (88) (97) (96) (90) (75) (58) (81) (86) (97) (78) (73) (90) (90) (90) (90) (88) (102) (91) (101) (85) (101) (100) (100) (88) (77) (77) (86) (92) (84) (91) (90) (93) (95) (92) (81) (96) (96) (88) (88) (85) (76) (84) (63) (61) (61) (61) (61) (61) (61) (61) (61) (61) (95) (67) (84) (84) (84) (84) (84) (84) (84))) :loffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil) (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8100) (7900) (7800) (7600) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6000) (5900) (5700) (5900) (5700) (6000) (5900) (5700) (5500) (5700) (6900) (6700) (6600) (6400) (6200) (6100) (6400) (6900) (7100) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6100) (6400) (6200) (6100) (6200) (6000) (5900) (5700) (5500) (5400) (5500) (8100) (7900) (7800) (7600) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6000) (5900) (5700) (5900) (5700) (6000) (5900) (5700) (5500) (5700) (6900) (6700) (6600) (6400) (6200) (6100) (6400) (6900) (7100) (7200) (7100) (6900) (6700) (6600) (6400) (6200) (6100) (6400) (6200) (6100) (6200) (8300) (8100) (7900) (7800) (7600) (7500) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6300) (6600) (6400) (6300) (6400) (6200) (6000) (5900) (5700) (5600) (5700) (6200) (5900) (6000) (5700) (6000) (6400) (6600) (6300) (6400) (6000) (6400) (6700) (6900) (6700) (6600) (6900) (6700) (6600) (6700) (6600) (6400) (6200) (6000) (5900) (5700) (8300) (8100) (7900) (7800) (7600) (7500) (7400) (7200) (7100) (6900) (6700) (6600) (6400) (6300) (6600) (6400) (6300) (6400) (6200) (6000) (5900) (5700) (5600) (5700) (6200) (5900) (6000) (5700) (6000) (6400) (6600) (6300) (6400) (6000) (6400) (6700) (6900) (6700) (6600) (6900) (6700) (6600) (6700))) :lonset (quote (792 1792 1917 2042 2167 2292 3292 3417 3542 3667 3792 4792 4917 5042 5167 5292 6167 6292 6417 6542 6667 6792 7042 7792 7917 8042 8167 8292 8417 8542 8667 8792 9292 9417 9542 9667 9792 10667 10792 10917 11042 11167 11292 11417 11542 11667 11792 11917 12042 12792 13792 13917 14042 14167 14292 15292 15417 15542 15667 15792 16792 16917 17042 17167 17292 18167 18292 18417 18542 18667 18792 19042 19792 19917 20042 20167 20292 20417 20542 20667 20792 21292 21417 21542 21667 21792 22667 22792 22917 23042 23167 23292 24792 25792 25917 26042 26167 26292 26542 27292 27417 27542 27667 27792 28667 28792 28917 29042 29167 29292 29417 29542 29667 29792 29917 30042 30792 31667 31792 31917 32042 32167 32292 33167 33292 33417 33542 33667 33792 34667 34792 34917 35042 35167 35292 35417 35542 35667 35792 35917 36042 36792 37792 37917 38042 38167 38292 38542 39292 39417 39542 39667 39792 40667 40792 40917 41042 41167 41292 41417 41542 41667 41792 41917 42042 42792 43667 43792 43917 44042 44167 44292 45167 45292 45417 45542 45667 45792 46667 46792 46917 47042 47167 47292 48042)) :ldur (quote ((996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (246) (746) (121) (125) (125) (121) (121) (121) (121) (121) (496) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (246) (996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (996) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (246) (746) (121) (125) (125) (121) (121) (121) (121) (121) (496) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (750) (996) (121) (121) (121) (121) (246) (746) (121) (121) (121) (121) (871) (125) (125) (125) (125) (121) (121) (121) (121) (121) (121) (121) (496) (750) (121) (121) (125) (125) (125) (871) (121) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (121) (246) (996) (121) (121) (121) (121) (246) (746) (121) (121) (121) (121) (871) (125) (125) (125) (125) (121) (121) (121) (121) (121) (121) (121) (496) (750) (121) (121) (125) (125) (125) (871) (121) (121) (121) (121) (121) (871) (121) (121) (121) (121) (121) (750))) :lvel (quote ((111) (107) (112) (102) (97) (109) (119) (104) (100) (110) (109) (107) (104) (101) (107) (121) (102) (102) (107) (101) (97) (115) (124) (106) (100) (100) (111) (112) (111) (89) (111) (113) (97) (102) (104) (110) (111) (100) (104) (101) (98) (106) (109) (101) (85) (98) (90) (99) (97) (111) (107) (112) (102) (97) (109) (119) (104) (100) (110) (109) (107) (104) (101) (107) (121) (102) (102) (107) (101) (97) (115) (124) (106) (100) (100) (111) (112) (111) (89) (111) (113) (97) (102) (104) (110) (111) (100) (104) (101) (98) (106) (109) (115) (111) (93) (110) (107) (119) (104) (106) (100) (93) (100) (123) (107) (100) (106) (102) (102) (113) (104) (104) (96) (102) (97) (104) (89) (71) (93) (54) (104) (111) (108) (108) (109) (95) (109) (104) (117) (98) (94) (96) (95) (97) (101) (101) (96) (91) (100) (95) (101) (115) (111) (93) (110) (107) (119) (104) (106) (100) (93) (100) (123) (107) (100) (106) (102) (102) (113) (104) (104) (96) (102) (97) (104) (89) (71) (93) (54) (104) (111) (108) (108) (109) (95) (109) (104) (117) (98) (94) (96) (95) (97) (101))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil) (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7000) (7000) (7400) (6900) (7000) (6500) (7000) (7400) (7700) (6900) (7000) (7400) (6900) (7000) (6700) (7000) (7500) (7900) (6900) (7000) (7700) (7200) (7400) (7000) (7400) (7700) (8200) (7400) (7900) (6900) (7200) (7700) (6700) (7000) (7500) (6500) (6900) (7400) (7000) (7400) (7700) (7400) (7200) (7000) (7400) (6900) (7000) (6700) (7000) (7400) (7900) (8200) (7600) (7200) (7600) (7900) (7600) (7400) (7200) (7600) (7100) (7200) (6900) (7200) (7600) (8100) (8400) (7700) (7400) (7700) (8100) (7400) (7200) (7000) (7400) (7900) (7200) (7000) (6900) (7000) (6900) (6700) (7000) (7600) (6900) (6700) (6500) (6700) (6500) (6400) (6700) (7200) (6500) (6400) (6200) (6400) (7600) (7700 7600) (7700 7600 7700 7600) (7700 7600 7700 7600) (7600 7400) (7700) (7200) (6900) (6500) (7700) (7900 7700) (7900 7700) (7900 7700) (7700 7600) (7900) (7600) (7000) (6700) (7900) (8100 7900) (8100 7900) (8100 7900) (7900 7700) (8000) (7600) (7700) (7400) (7700) (8000) (8300) (8400) (7700) (7600) (7400) (7200) (7900) (7600) (7200) (7000) (6900) (6700) (6900) (7200) (6700) (6900) (6500) (6900) (7200) (7700) (6700) (6500) (6900) (6400) (6500) (6200) (6500) (6900) (7400) (6400) (6200) (6500) (6000) (6200) (5800) (6200) (6500) (7000) (6000) (5800) (6700) (5800) (6700) (6000 5800) (6000 5800) (6000 5800) (6000 5800) (5800) (5800) (6700) (5700) (5800) (5700) (6000) (5800) (6000) (6500) (6400) (7000) (6900) (6700) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6200) (7000) (6700) (6400) (6400 6500) (6400 6500) (6400 6500) (6400 6500) (6500) (6500 6000 5700) (7000) (7000) (7400) (6900) (7000) (6500) (7000) (7400) (7700) (6900) (7000) (7400) (6900) (7000) (6700) (7000) (7500) (7900) (6900) (7000) (7700) (7200) (7400) (7000) (7400) (7700) (8200) (7400) (7900) (6900) (7200) (7700) (6700) (7000) (7500) (6500) (6900) (7400) (7000) (7400) (7700) (7400) (7200) (7000) (7400) (6900) (7000) (6700) (7000) (7400) (7900) (8200) (7600) (7200) (7600) (7900) (7600) (7400) (7200) (7600) (7100) (7200) (6900) (7200) (7600) (8100) (8400) (7700) (7400) (7700) (8100) (7400) (7200) (7000) (7400) (7900) (7200) (7000) (6900) (7000) (6900) (6700) (7000) (7600) (6900) (6700) (6500) (6700) (6500) (6400) (6700) (7200) (6500) (6400) (6200) (6400) (7600) (7700 7600) (7700 7600 7700 7600) (7700 7600 7700 7600) (7600 7400) (7700) (7200) (6900) (6500) (7700) (7900 7700) (7900 7700) (7900 7700) (7700 7600) (7900) (7600) (7000) (6700) (7900) (8100 7900) (8100 7900) (8100 7900) (7900 7700) (8000) (7600) (7700) (7400) (7700) (8000) (8300) (8400) (7700) (7600) (7400) (7200) (7900) (7600) (7200) (7000) (6900) (6700) (6900) (7200) (6700) (6900) (6500) (6900) (7200) (7700) (6700) (6500) (6900) (6400) (6500) (6200) (6500) (6900) (7400) (6400) (6200) (6500) (6000) (6200) (5800) (6200) (6500) (7000) (6000) (5800) (6700) (5800) (6700) (6000 5800) (6000 5800) (6000 5800) (6000 5800) (5800) (5800) (6700) (5700) (5800) (5700) (6000) (5800) (6000) (6500) (6400) (7000) (6900) (6700) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6400) (6200) (7000) (6700) (6400) (6400 6500) (6400 6500) (6400 6500) (6400 6500) (6500) (6500 6000 5700) (6500) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6700) (6900) (7200) (6700) (6900) (6600) (6900) (7200) (7500) (7000) (7200) (7500) (7000) (7200) (6900) (7200) (7800) (8100) (7400) (8200) (8400) (7500) (8100) (8200) (7400) (7900) (8100) (7200) (7900 7800) (7900 7800) (7900 7800) (7900 7800) (7800) (7400) (7800) (8100) (7400) (7200) (7000) (7400) (6900) (7000) (6700) (7000) (7400) (7900) (8200) (7500) (7200) (7500) (7900) (7200) (7000) (6900) (7200) (6700) (6900) (6500) (6900) (7200) (7700) (8100) (7400) (7000) (7400) (7700) (7000) (6800) (6700) (7700) (7500) (8200) (8000) (7400) (6300) (7400) (7200) (7900) (7700) (7100) (6000) (7000) (6900) (7500) (7400) (6700) (6600) (6900) (7200) (7500) (7400) (7200) (8100) (6200) (6700) (7000) (7400) (7200) (7000) (8200) (6100) (6400) (6700) (7000) (6900) (6700) (7600) (6700) (6600) (6700) (6900) (6200) (6600) (6900) (7200) (7000) (6900) (7900) (7700) (7500) (7400) (7200) (7000) (6900) (7200) (6600) (6700) (7000) (6200) (6300) (6500) (6800) (6300) (6500) (6800) (7400) (7700) (6800) (6700) (7000) (6500) (6700) (7000) (7500) (7900) (7700) (7500) (7400) (7500) (7700) (6700) (6900) (7000) (7000) (7000 6900) (7000 6900) (7000 6900) (7000 6900) (6900) (6900) (7000 6900) (7000 6900) (7000 6900) (6900 6700) (7000) (6500) (6200) (5800) (7000) (7200 7000) (7200 7000) (7200 7000) (7000 6900) (7200) (6900) (6300) (6000) (7200) (7400 7200) (7400 7200) (7400 7200) (7200 7000) (7300) (6900) (7000) (6700) (7000) (7300) (7600) (7700) (7000) (6900 7000 6900) (6700 7000) (6500) (7500) (7400) (7200) (7300) (7900) (7200) (7300) (6900) (7000) (6300 6500 6300) (6200 6500) (6300) (6200) (6500) (6000) (6200) (5800) (6200) (6500) (7000) (6300) (6500) (7000) (6300) (6500) (6200) (6500) (7000) (7400) (6900) (7000) (7400) (6900) (7000) (6500) (7000) (7400) (7700) (6800) (6700) (7500) (7200) (6900) (6900 7000) (6900 7000) (6900 7000) (6900 7000) (7000) (7000 6500 6200) (6500) (6500) (6900) (6400) (6500) (6000) (6500) (6900) (7200) (6700) (6900) (7200) (6700) (6900) (6600) (6900) (7200) (7500) (7000) (7200) (7500) (7000) (7200) (6900) (7200) (7800) (8100) (7400) (8200) (8400) (7500) (8100) (8200) (7400) (7900) (8100) (7200) (7900 7800) (7900 7800) (7900 7800) (7900 7800) (7800) (7400) (7800) (8100) (7400) (7200) (7000) (7400) (6900) (7000) (6700) (7000) (7400) (7900) (8200) (7500) (7200) (7500) (7900) (7200) (7000) (6900) (7200) (6700) (6900) (6500) (6900) (7200) (7700) (8100) (7400) (7000) (7400) (7700) (7000) (6800) (6700) (7700) (7500) (8200) (8000) (7400) (6300) (7400) (7200) (7900) (7700) (7100) (6000) (7000) (6900) (7500) (7400) (6700) (6600) (6900) (7200) (7500) (7400) (7200) (8100) (6200) (6700) (7000) (7400) (7200) (7000) (8200) (6100) (6400) (6700) (7000) (6900) (6700) (7600) (6700) (6600) (6700) (6900) (6200) (6600) (6900) (7200) (7000) (6900) (7900) (7700) (7500) (7400) (7200) (7000) (6900) (7200) (6600) (6700) (7000) (6200) (6300) (6500) (6800) (6300) (6500) (6800) (7400) (7700) (6800) (6700) (7000) (6500) (6700) (7000) (7500) (7900) (7700) (7500) (7400) (7500) (7700) (6700) (6900) (7000) (7000) (7000 6900) (7000 6900) (7000 6900) (7000 6900) (6900) (6900) (7000 6900) (7000 6900) (7000 6900) (6900 6700) (7000) (6500) (6200) (5800) (7000) (7200 7000) (7200 7000) (7200 7000) (7000 6900) (7200) (6900) (6300) (6000) (7200) (7400 7200) (7400 7200) (7400 7200) (7200 7000) (7300) (6900) (7000) (6700) (7000) (7300) (7600) (7700) (7000) (6900 7000 6900) (6700 7000) (6500) (7500) (7400) (7200) (7300) (7900) (7200) (7300) (6900) (7000) (6300 6500 6300) (6200 6500) (6300) (6200) (6500) (6000) (6200) (5800) (6200) (6500) (7000) (6300) (6500) (7000) (6300) (6500) (6200) (6500) (7000) (7400) (6900) (7000) (7400) (6900) (7000) (6500) (7000) (7400) (7700) (6800) (6700) (7500) (7200) (6900) (6900 7000) (6900 7000) (6900 7000) (6900 7000) (7000) (7000 6500 6200))) :lonset (quote (461 643 782 925 1071 1211 1354 1500 1639 1782 1929 2068 2211 2357 2496 2639 2786 2925 3068 3214 3354 3496 3643 3782 3925 4071 4211 4354 4500 4639 4782 4929 5068 5211 5357 5496 5639 5786 6354 6496 6643 6782 6925 7071 7211 7354 7500 7639 7782 7929 8068 8211 8357 8925 9068 9214 9354 9496 9643 9782 9925 10071 10211 10354 10500 10639 10782 10929 11496 11639 11786 12354 12496 12643 12782 12925 13071 13211 13354 13639 13782 13929 14068 14211 14357 14496 14639 14925 15068 15214 15354 15496 15643 15782 15925 16071 16821 16929 17036 17143 17250 17357 17496 17639 17786 18107 18214 18321 18429 18536 18643 18782 18925 19071 19393 19500 19607 19714 19821 19929 20068 20211 20357 20496 20639 20786 20925 21068 21214 21354 21496 21643 21782 21925 22071 22211 22354 22500 22639 22782 22929 23068 23211 23357 23496 23639 23786 23925 24068 24214 24354 24496 24643 24782 24925 25071 25211 25354 25500 25639 25782 25929 26068 26211 26357 27107 27214 27536 27643 27750 27857 27964 28071 28393 28500 28639 28782 28929 29068 29211 29357 29496 29639 29786 29925 30068 30214 30354 30496 30643 30782 30925 31071 31211 31354 31500 31639 31782 31929 32068 32211 32357 32496 32639 32786 32925 33068 33214 33354 33496 33643 33782 33925 34071 34211 34354 34500 34607 34714 34821 34929 35143 35357 36468 36643 36782 36925 37071 37211 37354 37500 37639 37782 37929 38068 38211 38357 38496 38639 38786 38925 39068 39214 39354 39496 39643 39782 39925 40071 40211 40354 40500 40639 40782 40929 41068 41211 41357 41496 41639 41786 42354 42496 42643 42782 42925 43071 43211 43354 43500 43639 43782 43929 44068 44211 44357 44925 45068 45214 45354 45496 45643 45782 45925 46071 46211 46354 46500 46639 46782 46929 47496 47639 47786 48354 48496 48643 48782 48925 49071 49211 49354 49639 49782 49929 50068 50211 50357 50496 50639 50925 51068 51214 51354 51496 51643 51782 51925 52071 52821 52929 53036 53143 53250 53357 53496 53639 53786 54107 54214 54321 54429 54536 54643 54782 54925 55071 55393 55500 55607 55714 55821 55929 56068 56211 56357 56496 56639 56786 56925 57068 57214 57354 57496 57643 57782 57925 58071 58211 58354 58500 58639 58782 58929 59068 59211 59357 59496 59639 59786 59925 60068 60214 60354 60496 60643 60782 60925 61071 61211 61354 61500 61639 61782 61929 62068 62211 62357 63107 63214 63536 63643 63750 63857 63964 64071 64393 64500 64639 64782 64929 65068 65211 65357 65496 65639 65786 65925 66068 66214 66354 66496 66643 66782 66925 67071 67211 67354 67500 67639 67782 67928 68068 68211 68357 68496 68639 68786 68925 69068 69214 69354 69496 69643 69782 69925 70071 70211 70354 70500 70607 70714 70821 70928 71143 71357 72428 72643 72782 72925 73071 73211 73354 73500 73639 73782 73928 74068 74211 74357 74496 74639 74786 74925 75068 75214 75354 75496 75643 75782 75925 76071 76211 76353 76500 76639 76782 76928 77068 77211 77357 77496 77639 77786 77893 78000 78107 78214 78353 78496 78643 78782 78925 79071 79211 79353 79500 79639 79782 79928 80068 80211 80357 80925 81068 81214 81353 81496 81643 81782 81925 82071 82211 82353 82500 82639 82782 82928 83496 83639 83786 83925 84068 84214 84536 84643 84964 85071 85393 85500 85821 85928 86250 86357 86678 86786 87107 87214 87536 87643 87964 88071 88211 88353 88500 88639 88782 88928 89357 89496 89639 89786 89925 90068 90214 90643 90782 90925 91071 91211 91353 91500 91821 91928 92068 92211 92357 92496 92639 92786 92925 93068 93214 93353 93496 93643 93782 93925 94071 94211 94353 94500 95250 95357 95678 95786 95925 96068 96214 96353 96496 96643 96964 97071 97211 97353 97500 97639 97782 97928 98496 98639 98786 98925 99068 99214 99353 99496 99643 99750 99857 99964 100071 100178 100393 100500 100607 100714 100821 100928 101068 101211 101357 101678 101786 101893 102000 102107 102214 102353 102496 102643 102964 103071 103178 103286 103393 103500 103639 103782 103928 104068 104211 104357 104496 104639 104786 104889 105068 105214 105782 105925 106071 106211 106353 106500 106639 106782 106928 107032 107211 107357 107496 107639 107786 107925 108068 108214 108353 108496 108643 108782 108925 109071 109211 109353 109500 109639 109782 109928 110068 110211 110357 110496 110639 110786 110925 111068 111214 111353 111496 111643 111750 111857 111964 112071 112286 112500 113607 113786 113925 114068 114214 114353 114496 114643 114782 114925 115071 115211 115353 115500 115639 115782 115928 116068 116211 116357 116496 116639 116786 116925 117068 117214 117353 117496 117643 117782 117925 118071 118211 118353 118500 118639 118782 118928 119036 119143 119250 119357 119496 119639 119786 119925 120068 120214 120353 120496 120643 120782 120925 121071 121211 121353 121500 122068 122211 122357 122496 122639 122786 122925 123068 123214 123353 123496 123643 123782 123925 124071 124639 124782 124928 125068 125211 125357 125678 125786 126107 126214 126536 126643 126964 127071 127393 127500 127821 127928 128250 128357 128678 128786 129107 129214 129353 129496 129643 129782 129925 130071 130500 130639 130782 130928 131068 131211 131357 131786 131925 132068 132214 132353 132496 132643 132964 133071 133211 133353 133500 133639 133782 133928 134068 134211 134357 134496 134639 134786 134925 135068 135214 135353 135496 135643 136393 136500 136821 136928 137068 137211 137357 137496 137639 137786 138107 138214 138353 138496 138643 138782 138925 139071 139639 139782 139928 140068 140211 140357 140496 140639 140786 140893 141000 141107 141214 141321 141536 141643 141750 141857 141964 142071 142211 142353 142500 142821 142928 143036 143143 143250 143357 143496 143639 143786 144107 144214 144321 144428 144536 144643 144782 144925 145071 145211 145353 145500 145639 145782 145928 146032 146211 146357 146925 147068 147214 147353 147496 147643 147782 147925 148071 148175 148353 148500 148639 148782 148928 149068 149211 149357 149496 149639 149786 149925 150068 150214 150353 150496 150643 150782 150925 151071 151211 151353 151500 151639 151782 151928 152068 152211 152357 152500 152647 152798 152908 153018 153129 153239 153520 153811 155756)) :ldur (quote ((128) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (553) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (553) (129) (125) (553) (128) (125) (125) (129) (125) (125) (128) (271) (129) (125) (125) (128) (125) (125) (129) (272) (129) (125) (125) (128) (125) (125) (129) (125) (590) (93) (25 75) (25 22 25 21) (25 22 25 21) (46 46) (125) (129) (125) (278) (93) (46 47) (46 47) (47 46) (47 46) (125) (129) (125) (279) (93) (46 46) (46 47) (46 47) (46 47) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (707) (93) (279) (93) (47 46) (46 46) (46 47) (46 47) (279) (93) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (93) (46 47) (46 47) (46 47) (47 46) (186) (804 804 804) (143) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (553) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (553) (129) (125) (553) (128) (125) (125) (129) (125) (125) (128) (271) (129) (125) (125) (128) (125) (125) (129) (272) (129) (125) (125) (128) (125) (125) (129) (125) (590) (93) (25 75) (25 22 25 21) (25 22 25 21) (46 46) (125) (129) (125) (278) (93) (46 47) (46 47) (47 46) (47 46) (125) (129) (125) (279) (93) (46 46) (46 47) (46 47) (46 47) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (707) (93) (279) (93) (47 46) (46 46) (46 47) (46 47) (279) (93) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (124) (125) (129) (125) (126) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (124) (93) (46 47) (46 47) (46 47) (46 47) (185) (804 804 804) (186) (125) (129) (125) (125) (128) (124) (125) (129) (125) (126) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (47 46) (47 46) (47 46) (46 46) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (554) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (554) (129) (125) (125) (128) (125) (279) (92) (278) (93) (279) (93) (278) (93) (279) (93) (279) (93) (278) (93) (279) (92) (278) (93) (125) (128) (125) (125) (129) (125) (186) (125) (129) (125) (125) (128) (125) (186) (125) (129) (125) (125) (128) (125) (278) (93) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (589) (93) (279) (93) (125) (128) (125) (125) (129) (125) (278) (93) (125) (128) (125) (125) (129) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (93) (47 46) (46 46) (46 47) (46 47) (93) (93) (47 46) (46 46) (46 47) (46 47) (125) (128) (125) (279) (93) (47 46) (47 46) (47 46) (46 46) (125) (129) (125) (278) (93) (46 47) (46 47) (47 46) (47 46) (125) (129) (125) (125) (128) (125) (125) (129) (125) (33 32 28) (125 32) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (32 32 29) (125 32) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (93) (47 46) (46 46) (46 47) (46 47) (185) (803 803 803) (146) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (46 47) (47 46) (47 46) (47 46) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (553) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (554) (129) (125) (125) (128) (125) (279) (93) (278) (93) (279) (92) (278) (93) (279) (93) (278) (93) (279) (93) (279) (93) (278) (93) (125) (129) (125) (125) (129) (125) (186) (125) (129) (125) (125) (128) (125) (186) (125) (128) (125) (125) (129) (125) (278) (93) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (589) (93) (278) (93) (125) (128) (125) (125) (129) (125) (278) (93) (125) (129) (125) (125) (129) (125) (554) (129) (125) (125) (128) (125) (125) (129) (125) (92) (47 46) (47 46) (46 46) (46 47) (93) (92) (47 46) (47 46) (46 46) (46 47) (125) (128) (125) (278) (93) (46 47) (47 46) (47 46) (47 46) (125) (129) (125) (278) (93) (46 47) (46 47) (46 47) (47 46) (125) (129) (125) (125) (128) (125) (125) (129) (125) (32 32 29) (125 32) (125) (554) (128) (125) (125) (129) (125) (125) (129) (125) (32 33 29) (125 32) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (129) (125) (125) (128) (125) (125) (129) (125) (125) (128) (125) (128) (132) (129) (95) (48 48) (47 48) (48 47) (63 53) (253) (1945 1945 1945))) :lvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (78 0) (78 53 25 0) (78 53 25 0) (54 0) (0) (0) (0) (0) (0) (54 0) (54 0) (53 0) (53 0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (53 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (78 0) (78 53 25 0) (78 53 25 0) (54 0) (0) (0) (0) (0) (0) (54 0) (54 0) (53 0) (53 0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (54 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (53 0) (53 0) (54 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0) (0) (0) (0) (53 0) (53 0) (53 0) (54 0) (0) (0) (0) (0) (0) (54 0) (54 0) (53 0) (53 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (67 32 0) (36 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (68 33 0) (36 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (54 0) (54 0) (54 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (54 0) (53 0) (53 0) (53 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (53 0) (53 0) (54 0) (54 0) (0) (0) (53 0) (53 0) (54 0) (54 0) (0) (0) (0) (0) (0) (54 0) (53 0) (53 0) (53 0) (0) (0) (0) (0) (0) (54 0) (54 0) (54 0) (53 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (68 33 0) (36 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (68 32 0) (36 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (55 0) (56 0) (55 0) (63 0) (0) (0 0 0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1 1 1) (1 1 1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1 1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1 1 1) (1 1 1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1 1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1 1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0 0 0) (0 0 0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0 0 0) (0 0 0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil) (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7100) (6900) (7100) (6200) (6700) (7100) (7100 6900) (6900) (6700) (6900) (7400) (7800 7900) (7900) (7800) (7900) (6900) (7600) (7900) (7900 7800) (7800) (7600) (7800) (7400) (7800 7600) (8100 7900) (8300) (7900) (7400) (7600) (7900 7800) (8300 8100) (8400) (8100) (7600) (7800) (7400) (7900) (6900) (7100) (7200) (7200) (7100) (6900) (6700) (6600) (6700) (7400) (7800 7900) (7900) (8100) (7900) (7800) (7600) (7600 7800) (7800) (7900) (7800) (7600) (7300) (7400) (7400 7300) (7300) (7400) (7600) (6900) (7300 7100) (7600 7400) (7800) (7400) (6900) (7100) (7400 7300) (7800 7600) (7900) (7600) (7100) (7300) (6900) (8100) (7400) (7600) (7300) (7300) (7400) (7800) (7600) (7800) (6900) (7400) (7800) (7900) (7800) (7900) (8300) (7600) (7900 7800) (8300 8100) (8400) (8300) (8100) (7900) (7800) (7600) (7600 7500) (7500) (7300) (7500) (7100) (8300) (7800) (7900) (7500) (7600) (7200) (7600) (8000) (8100) (8100 8300) (7800 7900) (7900) (8100) (8300) (7600) (7800) (7500) (7600) (7100) (6700) (6400) (7100) (7100) (6800) (6900) (7400) (7600) (7400) (7200) (7100) (7200) (7600) (7400) (7600) (7900) (7800) (7900) (8100) (7900) (7800) (7600) (8100) (8300) (7900) (7900 7800) (7800) (7600) (7800) (7400) (7800 7600) (8100 7900) (8300) (7900) (7400) (7600) (7800) (8100 7900) (8400 8300) (8100) (7600) (7800) (7400) (8600) (7900) (8100) (7800) (7900))) :lonset (quote (42 611 792 1167 1711 1904 2180 2298 2842 3023 3379 4480 4604 5117 5292 5673 6230 6417 6661 6792 7329 7492 7879 9773 9954 10148 10704 10904 11273 12042 12230 12404 12979 13129 13523 14104 14273 14667 15211 15398 15792 16179 17448 17648 17830 18017 18761 19117 19267 20636 20817 20986 21154 21330 21480 23111 23292 23630 24198 24380 24611 24761 25317 25504 25886 27792 27979 28167 28729 28917 29292 30029 30217 30398 30948 31154 31517 32073 32261 32642 33211 33417 33780 34154 36017 36580 36804 37136 37730 37880 38261 38817 39017 39380 40542 41292 41480 41667 41854 42042 42230 42417 42604 42817 42992 43342 43530 43917 45604 45792 46167 46711 46898 47292 47854 48042 48461 49167 49354 49504 50104 50292 50667 51204 51404 51779 52336 52542 52923 53667 54017 54604 54792 55167 55542 55729 55917 56104 56292 56823 57017 57386 57967 58167 58517 58886 59067 59261 59479 59636 60192 60379 60623 60761 61304 61504 61886 63792 63979 64167 64711 64898 65261 66030 66136 66317 66980 67154 67542 68092 68292 68648 69230 69404 69792 72042)) :ldur (quote ((588) (162) (375) (637) (206) (263) (82 50) (575) (188) (344) (1107) (62 50) (526) (150) (350) (544) (187) (237) (87 62) (569) (157) (387) (1863) (113 138) (126 119) (594) (194) (350) (750) (94 94) (94 93) (563) (188) (413) (588) (169) (338) (631) (193) (288) (394) (1307) (200) (213) (156) (737) (312) (100 75) (1400) (206) (206) (212) (176) (100 87) (1631) (206) (325) (600) (182) (237) (112 69) (569) (175) (375) (1850) (93 94) (94 94) (562) (213) (387) (681) (144 69) (100 94) (556) (194) (400) (569) (200) (381) (575) (225) (319) (406) (1538) (587) (187) (332) (575) (200) (374) (593) (213) (363) (1187) (731) (94 94) (94 93) (187) (188) (188) (187) (187) (188) (113 87) (362) (169) (368) (1500) (188) (375) (544) (187) (369) (562) (194) (362) (681) (93 94) (94 94) (588) (188) (375) (575) (194) (394) (582) (218) (387) (763) (287) (525) (213) (369) (375) (225) (207) (169) (232) (462) (181) (337) (543) (187) (350) (369) (206) (225) (181) (213) (568) (206) (238) (93 63) (562) (213) (388) (1868) (93 94) (94 94) (562) (181) (363) (800) (87) (100 131) (587 100) (168) (369) (525) (212) (344) (600) (200) (388) (2250))) :lvel (quote ((101) (89) (104) (91) (95) (102) (97 84) (84) (104) (88) (100) (106 100) (91) (96) (93) (80) (92) (100) (101 88) (90) (90) (101) (100) (93 97) (102 88) (121) (97) (92) (113) (85 101) (97 95) (115) (101) (97) (99) (88) (106) (101) (92) (102) (109) (100) (88) (77) (99) (101) (109) (112 109) (104) (97) (86) (89) (96) (92 88) (97) (89) (99) (109) (93) (92) (89 104) (102) (98) (98) (95) (85 82) (86 84) (119) (102) (92) (117) (78 101) (79 96) (106) (100) (90) (92) (81) (104) (97) (91) (92) (92) (75) (86) (92) (73) (81) (82) (94) (93) (94) (93) (104) (97) (90 104) (91 96) (96) (97) (98) (92) (93) (85) (97 99) (89) (80) (101) (91) (93) (93) (93) (84) (97) (104) (91) (112) (107) (74 93) (75 65) (90) (84) (86) (86) (96) (102) (90) (76) (50) (88) (91) (93) (84) (88) (88) (91) (82) (84) (67) (86) (91) (85) (86) (100) (93) (98) (78) (85) (97) (66) (85) (92) (81) (85 75) (80) (67) (86) (84) (79 91) (89 73) (113) (91) (93) (98) (93) (89 69) (97 91) (86) (88) (110) (91) (93) (90) (92) (94) (88))) :loffset (quote ((0) (0) (0) (0) (0) (0) (74 0) (0) (0) (0) (0) (62 0) (0) (0) (0) (0) (0) (0) (81 0) (0) (0) (0) (0) (81 0) (100 0) (0) (0) (0) (0) (94 0) (93 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (75 0) (0) (0) (0) (0) (0) (74 0) (0) (0) (0) (0) (0) (0) (75 0) (0) (0) (0) (0) (94 0) (94 0) (0) (0) (0) (0) (94 0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (94 0) (93 0) (0) (0) (0) (0) (0) (0) (87 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (94 0) (94 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (63 0) (0) (0) (0) (0) (94 0) (94 0) (0) (0) (0) (0) (0) (94 0) (100 0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil)) :classes nil :from-file t)) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 0 0) (om-make-point 200 150))) nil nil nil t))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "MAKE-FEATURE-VECTORS" (quote omai::make-feature-vectors) (quote ((om-load-inputfun (quote input-funbox) "MATRIX" "MATRIX" nil) (om-load-inputfun (quote input-funbox) "FEATURES" "FEATURES" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 178 329) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "lispfunction" (om-load-lisp-abspatch "lispfunction" 6.140003 ";;; Edit a valid LAMBDA EXPRESSION for \"lispfunction\"$;;; e.g. (lambda (arg1 arg2 ...) ( ... ))$(lambda (lcs lfeatures)$  (mapcar #'(lambda (cs)$	      (mapcar #'(lambda (f) (funcall f cs))$		      lfeatures))$	  lcs))$") (quote ((om-load-inputfun (quote input-funbox) "" "LCS" nil) (om-load-inputfun (quote input-funbox) "" "LFEATURES" nil))) (om-make-point 153 242) nil (list (list (list 0.0 0.515873 0.48412699) (list 0.0 0.60777385 0.39222616) (list 0.0 0.5427632 0.45723686) (list 0.0 0.6079734 0.39202657) (list 0.14121038 0.64841497 0.21037464) (list 0.0 0.5338346 0.46616542) (list 0.0 0.8695652 0.13043478) (list 0.0 0.67542214 0.32457787) (list 0.0 0.20100503 0.79899496))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 1354 43) (om-make-point 26 30) 9 "9" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "TESTCS2" (quote testcs2) (quote nil) (om-make-point 1306 13) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "REPEAT-N" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "something" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "N" 0))) (om-make-point 1317 82) nil nil "&" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((16 3 2 1 nil 0) (6 0 7 0 nil 0) (5 0 7 1 nil 0) (4 0 7 2 nil 0) (15 0 12 0 nil 0) (14 0 12 1 nil 0) (13 0 12 2 nil 0) (2 0 12 3 nil 0) (16 2 13 1 nil 0) (16 1 14 1 nil 0) (16 0 15 1 nil 0) (17 0 16 0 nil 0) (18 0 17 0 nil 0) (20 0 17 1 nil 0) (21 1 20 0 nil 0) (19 0 20 1 nil 0) (22 0 21 1 nil 0) (23 0 22 0 nil 0) (0 0 22 1 nil 0) (3 0 22 2 nil 0) (3 0 23 0 nil 4) (0 0 23 1 nil 0) (25 0 26 0 nil 0) (24 0 26 1 nil 0))) nil 6.140003))
